// Based on /System/Library/Frameworks/CoreAudio.framework/Headers/CoreAudioTypes.h
function CoreAudioTypes_h(lib) {
    MacTypes_h.call(this, lib);

    if (this._COREAUDIOTYPES_H)
        return;
    this._COREAUDIOTYPES_H = true;

    this.AudioValueRange = new ctypes.StructType("AudioValueRange", [{mMinimum: this.Float64}, {mMaximum: this.Float64}]);
    this.AudioValueTranslation = new ctypes.StructType("AudioValueTranslation", [{mInputData: ctypes.void_t.ptr}, {mInputDataSize: this.UInt32}, {mOutputData: ctypes.void_t.ptr}, {mOutputDataSize: this.UInt32}]);
    this.AudioBuffer = new ctypes.StructType("AudioBuffer", [{mNumberChannels: this.UInt32}, {mDataByteSize: this.UInt32}, {mData: ctypes.void_t.ptr}]);
    this.AudioBufferList = new ctypes.StructType("AudioBufferList", [{mNumberBuffers: this.UInt32}, {mBuffers: this.AudioBuffer.array(1)}]);
    this.AudioSampleType = this.Float32;
    this.AudioUnitSampleType = this.Float32;
    this.AudioStreamBasicDescription = new ctypes.StructType("AudioStreamBasicDescription", [{mSampleRate: this.Float64}, {mFormatID: this.UInt32}, {mFormatFlags: this.UInt32}, {mBytesPerPacket: this.UInt32}, {mFramesPerPacket: this.UInt32}, {mBytesPerFrame: this.UInt32}, {mChannelsPerFrame: this.UInt32}, {mBitsPerChannel: this.UInt32}, {mReserved: this.UInt32}]);
    this.kAudioStreamAnyRate = 0;
    this.kAudioFormatLinearPCM = 1819304813;
    this.kAudioFormatAC3 = 1633889587;
    this.kAudioFormat60958AC3 = 1667326771;
    this.kAudioFormatAppleIMA4 = 1768775988;
    this.kAudioFormatMPEG4AAC = 1633772320;
    this.kAudioFormatMPEG4CELP = 1667591280;
    this.kAudioFormatMPEG4HVXC = 1752594531;
    this.kAudioFormatMPEG4TwinVQ = 1953986161;
    this.kAudioFormatMACE3 = 1296122675;
    this.kAudioFormatMACE6 = 1296122678;
    this.kAudioFormatULaw = 1970037111;
    this.kAudioFormatALaw = 1634492791;
    this.kAudioFormatQDesign = 1363430723;
    this.kAudioFormatQDesign2 = 1363430706;
    this.kAudioFormatQUALCOMM = 1365470320;
    this.kAudioFormatMPEGLayer1 = 778924081;
    this.kAudioFormatMPEGLayer2 = 778924082;
    this.kAudioFormatMPEGLayer3 = 778924083;
    this.kAudioFormatTimeCode = 1953066341;
    this.kAudioFormatMIDIStream = 1835623529;
    this.kAudioFormatParameterValueStream = 1634760307;
    this.kAudioFormatAppleLossless = 1634492771;
    this.kAudioFormatMPEG4AAC_HE = 1633772392;
    this.kAudioFormatMPEG4AAC_LD = 1633772396;
    this.kAudioFormatMPEG4AAC_HE_V2 = 1633772400;
    this.kAudioFormatMPEG4AAC_Spatial = 1633772403;
    this.kAudioFormatAMR = 1935764850;
    this.kAudioFormatAudible = 1096107074;
    this.kAudioFormatiLBC = 1768710755;
    this.kAudioFormatDVIIntelIMA = 1836253201;
    this.kAudioFormatMicrosoftGSM = 1836253233;
    this.kAudioFormatAES3 = 1634038579;
    this.kAudioFormatFlagIsFloat = 1;
    this.kAudioFormatFlagIsBigEndian = 2;
    this.kAudioFormatFlagIsSignedInteger = 4;
    this.kAudioFormatFlagIsPacked = 8;
    this.kAudioFormatFlagIsAlignedHigh = 16;
    this.kAudioFormatFlagIsNonInterleaved = 32;
    this.kAudioFormatFlagIsNonMixable = 64;
    this.kAudioFormatFlagsAreAllClear = -2147483648;
    this.kLinearPCMFormatFlagIsFloat = 1;
    this.kLinearPCMFormatFlagIsBigEndian = 2;
    this.kLinearPCMFormatFlagIsSignedInteger = 4;
    this.kLinearPCMFormatFlagIsPacked = 8;
    this.kLinearPCMFormatFlagIsAlignedHigh = 16;
    this.kLinearPCMFormatFlagIsNonInterleaved = 32;
    this.kLinearPCMFormatFlagIsNonMixable = 64;
    this.kLinearPCMFormatFlagsSampleFractionShift = 7;
    this.kLinearPCMFormatFlagsSampleFractionMask = 8064;
    this.kLinearPCMFormatFlagsAreAllClear = -2147483648;
    this.kAppleLosslessFormatFlag_16BitSourceData = 1;
    this.kAppleLosslessFormatFlag_20BitSourceData = 2;
    this.kAppleLosslessFormatFlag_24BitSourceData = 3;
    this.kAppleLosslessFormatFlag_32BitSourceData = 4;
    this.kAudioFormatFlagsNativeEndian = 0;
    this.kAudioFormatFlagsCanonical = 9;
    this.kAudioFormatFlagsAudioUnitCanonical = 41;
    this.kAudioFormatFlagsNativeFloatPacked = 9;
    // Dropping inline function 'IsAudioFormatNativeEndian'.
    // Dropping inline function 'CalculateLPCMFlags'.
    // Dropping inline function 'FillOutASBDForLPCM'.
    this.AudioStreamPacketDescription = new ctypes.StructType("AudioStreamPacketDescription", [{mStartOffset: this.SInt64}, {mVariableFramesInPacket: this.UInt32}, {mDataByteSize: this.UInt32}]);
    this.SMPTETime = new ctypes.StructType("SMPTETime", [{mSubframes: this.SInt16}, {mSubframeDivisor: this.SInt16}, {mCounter: this.UInt32}, {mType: this.UInt32}, {mFlags: this.UInt32}, {mHours: this.SInt16}, {mMinutes: this.SInt16}, {mSeconds: this.SInt16}, {mFrames: this.SInt16}]);
    this.kSMPTETimeType24 = 0;
    this.kSMPTETimeType25 = 1;
    this.kSMPTETimeType30Drop = 2;
    this.kSMPTETimeType30 = 3;
    this.kSMPTETimeType2997 = 4;
    this.kSMPTETimeType2997Drop = 5;
    this.kSMPTETimeType60 = 6;
    this.kSMPTETimeType5994 = 7;
    this.kSMPTETimeType60Drop = 8;
    this.kSMPTETimeType5994Drop = 9;
    this.kSMPTETimeType50 = 10;
    this.kSMPTETimeType2398 = 11;
    this.kSMPTETimeValid = 1;
    this.kSMPTETimeRunning = 2;
    this.AudioTimeStamp = new ctypes.StructType("AudioTimeStamp", [{mSampleTime: this.Float64}, {mHostTime: this.UInt64}, {mRateScalar: this.Float64}, {mWordClockTime: this.UInt64}, {mSMPTETime: this.SMPTETime}, {mFlags: this.UInt32}, {mReserved: this.UInt32}]);
    this.kAudioTimeStampSampleTimeValid = 1;
    this.kAudioTimeStampHostTimeValid = 2;
    this.kAudioTimeStampRateScalarValid = 4;
    this.kAudioTimeStampWordClockTimeValid = 8;
    this.kAudioTimeStampSMPTETimeValid = 16;
    this.kAudioTimeStampSampleHostTimeValid = 3;
    // Dropping inline function 'FillOutAudioTimeStampWithSampleTime'.
    // Dropping inline function 'FillOutAudioTimeStampWithHostTime'.
    // Dropping inline function 'FillOutAudioTimeStampWithSampleAndHostTime'.
    this.AudioClassDescription = new ctypes.StructType("AudioClassDescription", [{mType: this.OSType}, {mSubType: this.OSType}, {mManufacturer: this.OSType}]);
    this.AudioChannelLabel = this.UInt32;
    this.AudioChannelLayoutTag = this.UInt32;
    this.AudioChannelDescription = new ctypes.StructType("AudioChannelDescription", [{mChannelLabel: this.AudioChannelLabel}, {mChannelFlags: this.UInt32}, {mCoordinates: this.Float32.array(3)}]);
    this.AudioChannelLayout = new ctypes.StructType("AudioChannelLayout", [{mChannelLayoutTag: this.AudioChannelLayoutTag}, {mChannelBitmap: this.UInt32}, {mNumberChannelDescriptions: this.UInt32}, {mChannelDescriptions: this.AudioChannelDescription.array(1)}]);
    this.kAudioChannelLabel_Unknown = -1;
    this.kAudioChannelLabel_Unused = 0;
    this.kAudioChannelLabel_UseCoordinates = 100;
    this.kAudioChannelLabel_Left = 1;
    this.kAudioChannelLabel_Right = 2;
    this.kAudioChannelLabel_Center = 3;
    this.kAudioChannelLabel_LFEScreen = 4;
    this.kAudioChannelLabel_LeftSurround = 5;
    this.kAudioChannelLabel_RightSurround = 6;
    this.kAudioChannelLabel_LeftCenter = 7;
    this.kAudioChannelLabel_RightCenter = 8;
    this.kAudioChannelLabel_CenterSurround = 9;
    this.kAudioChannelLabel_LeftSurroundDirect = 10;
    this.kAudioChannelLabel_RightSurroundDirect = 11;
    this.kAudioChannelLabel_TopCenterSurround = 12;
    this.kAudioChannelLabel_VerticalHeightLeft = 13;
    this.kAudioChannelLabel_VerticalHeightCenter = 14;
    this.kAudioChannelLabel_VerticalHeightRight = 15;
    this.kAudioChannelLabel_TopBackLeft = 16;
    this.kAudioChannelLabel_TopBackCenter = 17;
    this.kAudioChannelLabel_TopBackRight = 18;
    this.kAudioChannelLabel_RearSurroundLeft = 33;
    this.kAudioChannelLabel_RearSurroundRight = 34;
    this.kAudioChannelLabel_LeftWide = 35;
    this.kAudioChannelLabel_RightWide = 36;
    this.kAudioChannelLabel_LFE2 = 37;
    this.kAudioChannelLabel_LeftTotal = 38;
    this.kAudioChannelLabel_RightTotal = 39;
    this.kAudioChannelLabel_HearingImpaired = 40;
    this.kAudioChannelLabel_Narration = 41;
    this.kAudioChannelLabel_Mono = 42;
    this.kAudioChannelLabel_DialogCentricMix = 43;
    this.kAudioChannelLabel_CenterSurroundDirect = 44;
    this.kAudioChannelLabel_Haptic = 45;
    this.kAudioChannelLabel_Ambisonic_W = 200;
    this.kAudioChannelLabel_Ambisonic_X = 201;
    this.kAudioChannelLabel_Ambisonic_Y = 202;
    this.kAudioChannelLabel_Ambisonic_Z = 203;
    this.kAudioChannelLabel_MS_Mid = 204;
    this.kAudioChannelLabel_MS_Side = 205;
    this.kAudioChannelLabel_XY_X = 206;
    this.kAudioChannelLabel_XY_Y = 207;
    this.kAudioChannelLabel_HeadphonesLeft = 301;
    this.kAudioChannelLabel_HeadphonesRight = 302;
    this.kAudioChannelLabel_ClickTrack = 304;
    this.kAudioChannelLabel_ForeignLanguage = 305;
    this.kAudioChannelLabel_Discrete = 400;
    this.kAudioChannelLabel_Discrete_0 = 65536;
    this.kAudioChannelLabel_Discrete_1 = 65537;
    this.kAudioChannelLabel_Discrete_2 = 65538;
    this.kAudioChannelLabel_Discrete_3 = 65539;
    this.kAudioChannelLabel_Discrete_4 = 65540;
    this.kAudioChannelLabel_Discrete_5 = 65541;
    this.kAudioChannelLabel_Discrete_6 = 65542;
    this.kAudioChannelLabel_Discrete_7 = 65543;
    this.kAudioChannelLabel_Discrete_8 = 65544;
    this.kAudioChannelLabel_Discrete_9 = 65545;
    this.kAudioChannelLabel_Discrete_10 = 65546;
    this.kAudioChannelLabel_Discrete_11 = 65547;
    this.kAudioChannelLabel_Discrete_12 = 65548;
    this.kAudioChannelLabel_Discrete_13 = 65549;
    this.kAudioChannelLabel_Discrete_14 = 65550;
    this.kAudioChannelLabel_Discrete_15 = 65551;
    this.kAudioChannelLabel_Discrete_65535 = 131071;
    this.kAudioChannelBit_Left = 1;
    this.kAudioChannelBit_Right = 2;
    this.kAudioChannelBit_Center = 4;
    this.kAudioChannelBit_LFEScreen = 8;
    this.kAudioChannelBit_LeftSurround = 16;
    this.kAudioChannelBit_RightSurround = 32;
    this.kAudioChannelBit_LeftCenter = 64;
    this.kAudioChannelBit_RightCenter = 128;
    this.kAudioChannelBit_CenterSurround = 256;
    this.kAudioChannelBit_LeftSurroundDirect = 512;
    this.kAudioChannelBit_RightSurroundDirect = 1024;
    this.kAudioChannelBit_TopCenterSurround = 2048;
    this.kAudioChannelBit_VerticalHeightLeft = 4096;
    this.kAudioChannelBit_VerticalHeightCenter = 8192;
    this.kAudioChannelBit_VerticalHeightRight = 16384;
    this.kAudioChannelBit_TopBackLeft = 32768;
    this.kAudioChannelBit_TopBackCenter = 65536;
    this.kAudioChannelBit_TopBackRight = 131072;
    this.kAudioChannelFlags_AllOff = 0;
    this.kAudioChannelFlags_RectangularCoordinates = 1;
    this.kAudioChannelFlags_SphericalCoordinates = 2;
    this.kAudioChannelFlags_Meters = 4;
    this.kAudioChannelCoordinates_LeftRight = 0;
    this.kAudioChannelCoordinates_BackFront = 1;
    this.kAudioChannelCoordinates_DownUp = 2;
    this.kAudioChannelCoordinates_Azimuth = 0;
    this.kAudioChannelCoordinates_Elevation = 1;
    this.kAudioChannelCoordinates_Distance = 2;
    this.kAudioChannelLayoutTag_UseChannelDescriptions = 0;
    this.kAudioChannelLayoutTag_UseChannelBitmap = 65536;
    this.kAudioChannelLayoutTag_Mono = 6553601;
    this.kAudioChannelLayoutTag_Stereo = 6619138;
    this.kAudioChannelLayoutTag_StereoHeadphones = 6684674;
    this.kAudioChannelLayoutTag_MatrixStereo = 6750210;
    this.kAudioChannelLayoutTag_MidSide = 6815746;
    this.kAudioChannelLayoutTag_XY = 6881282;
    this.kAudioChannelLayoutTag_Binaural = 6946818;
    this.kAudioChannelLayoutTag_Ambisonic_B_Format = 7012356;
    this.kAudioChannelLayoutTag_Quadraphonic = 7077892;
    this.kAudioChannelLayoutTag_Pentagonal = 7143429;
    this.kAudioChannelLayoutTag_Hexagonal = 7208966;
    this.kAudioChannelLayoutTag_Octagonal = 7274504;
    this.kAudioChannelLayoutTag_Cube = 7340040;
    this.kAudioChannelLayoutTag_MPEG_1_0 = 6553601;
    this.kAudioChannelLayoutTag_MPEG_2_0 = 6619138;
    this.kAudioChannelLayoutTag_MPEG_3_0_A = 7405571;
    this.kAudioChannelLayoutTag_MPEG_3_0_B = 7471107;
    this.kAudioChannelLayoutTag_MPEG_4_0_A = 7536644;
    this.kAudioChannelLayoutTag_MPEG_4_0_B = 7602180;
    this.kAudioChannelLayoutTag_MPEG_5_0_A = 7667717;
    this.kAudioChannelLayoutTag_MPEG_5_0_B = 7733253;
    this.kAudioChannelLayoutTag_MPEG_5_0_C = 7798789;
    this.kAudioChannelLayoutTag_MPEG_5_0_D = 7864325;
    this.kAudioChannelLayoutTag_MPEG_5_1_A = 7929862;
    this.kAudioChannelLayoutTag_MPEG_5_1_B = 7995398;
    this.kAudioChannelLayoutTag_MPEG_5_1_C = 8060934;
    this.kAudioChannelLayoutTag_MPEG_5_1_D = 8126470;
    this.kAudioChannelLayoutTag_MPEG_6_1_A = 8192007;
    this.kAudioChannelLayoutTag_MPEG_7_1_A = 8257544;
    this.kAudioChannelLayoutTag_MPEG_7_1_B = 8323080;
    this.kAudioChannelLayoutTag_MPEG_7_1_C = 8388616;
    this.kAudioChannelLayoutTag_Emagic_Default_7_1 = 8454152;
    this.kAudioChannelLayoutTag_SMPTE_DTV = 8519688;
    this.kAudioChannelLayoutTag_ITU_1_0 = 6553601;
    this.kAudioChannelLayoutTag_ITU_2_0 = 6619138;
    this.kAudioChannelLayoutTag_ITU_2_1 = 8585219;
    this.kAudioChannelLayoutTag_ITU_2_2 = 8650756;
    this.kAudioChannelLayoutTag_ITU_3_0 = 7405571;
    this.kAudioChannelLayoutTag_ITU_3_1 = 7536644;
    this.kAudioChannelLayoutTag_ITU_3_2 = 7667717;
    this.kAudioChannelLayoutTag_ITU_3_2_1 = 7929862;
    this.kAudioChannelLayoutTag_ITU_3_4_1 = 8388616;
    this.kAudioChannelLayoutTag_DVD_0 = 6553601;
    this.kAudioChannelLayoutTag_DVD_1 = 6619138;
    this.kAudioChannelLayoutTag_DVD_2 = 8585219;
    this.kAudioChannelLayoutTag_DVD_3 = 8650756;
    this.kAudioChannelLayoutTag_DVD_4 = 8716291;
    this.kAudioChannelLayoutTag_DVD_5 = 8781828;
    this.kAudioChannelLayoutTag_DVD_6 = 8847365;
    this.kAudioChannelLayoutTag_DVD_7 = 7405571;
    this.kAudioChannelLayoutTag_DVD_8 = 7536644;
    this.kAudioChannelLayoutTag_DVD_9 = 7667717;
    this.kAudioChannelLayoutTag_DVD_10 = 8912900;
    this.kAudioChannelLayoutTag_DVD_11 = 8978437;
    this.kAudioChannelLayoutTag_DVD_12 = 7929862;
    this.kAudioChannelLayoutTag_DVD_13 = 7536644;
    this.kAudioChannelLayoutTag_DVD_14 = 7667717;
    this.kAudioChannelLayoutTag_DVD_15 = 8912900;
    this.kAudioChannelLayoutTag_DVD_16 = 8978437;
    this.kAudioChannelLayoutTag_DVD_17 = 7929862;
    this.kAudioChannelLayoutTag_DVD_18 = 9043973;
    this.kAudioChannelLayoutTag_DVD_19 = 7733253;
    this.kAudioChannelLayoutTag_DVD_20 = 7995398;
    this.kAudioChannelLayoutTag_AudioUnit_4 = 7077892;
    this.kAudioChannelLayoutTag_AudioUnit_5 = 7143429;
    this.kAudioChannelLayoutTag_AudioUnit_6 = 7208966;
    this.kAudioChannelLayoutTag_AudioUnit_8 = 7274504;
    this.kAudioChannelLayoutTag_AudioUnit_5_0 = 7733253;
    this.kAudioChannelLayoutTag_AudioUnit_6_0 = 9109510;
    this.kAudioChannelLayoutTag_AudioUnit_7_0 = 9175047;
    this.kAudioChannelLayoutTag_AudioUnit_7_0_Front = 9699335;
    this.kAudioChannelLayoutTag_AudioUnit_5_1 = 7929862;
    this.kAudioChannelLayoutTag_AudioUnit_6_1 = 8192007;
    this.kAudioChannelLayoutTag_AudioUnit_7_1 = 8388616;
    this.kAudioChannelLayoutTag_AudioUnit_7_1_Front = 8257544;
    this.kAudioChannelLayoutTag_AAC_3_0 = 7471107;
    this.kAudioChannelLayoutTag_AAC_Quadraphonic = 7077892;
    this.kAudioChannelLayoutTag_AAC_4_0 = 7602180;
    this.kAudioChannelLayoutTag_AAC_5_0 = 7864325;
    this.kAudioChannelLayoutTag_AAC_5_1 = 8126470;
    this.kAudioChannelLayoutTag_AAC_6_0 = 9240582;
    this.kAudioChannelLayoutTag_AAC_6_1 = 9306119;
    this.kAudioChannelLayoutTag_AAC_7_0 = 9371655;
    this.kAudioChannelLayoutTag_AAC_7_1 = 8323080;
    this.kAudioChannelLayoutTag_AAC_Octagonal = 9437192;
    this.kAudioChannelLayoutTag_TMH_10_2_std = 9502736;
    this.kAudioChannelLayoutTag_TMH_10_2_full = 9568277;
    this.kAudioChannelLayoutTag_AC3_1_0_1 = 9764866;
    this.kAudioChannelLayoutTag_AC3_3_0 = 9830403;
    this.kAudioChannelLayoutTag_AC3_3_1 = 9895940;
    this.kAudioChannelLayoutTag_AC3_3_0_1 = 9961476;
    this.kAudioChannelLayoutTag_AC3_2_1_1 = 10027012;
    this.kAudioChannelLayoutTag_AC3_3_1_1 = 10092549;
    this.kAudioChannelLayoutTag_DiscreteInOrder = 9633792;
    this.kAudioChannelLayoutTag_Unknown = -65536;
    this.kMPEG4Object_AAC_Main = 1;
    this.kMPEG4Object_AAC_LC = 2;
    this.kMPEG4Object_AAC_SSR = 3;
    this.kMPEG4Object_AAC_LTP = 4;
    this.kMPEG4Object_AAC_SBR = 5;
    this.kMPEG4Object_AAC_Scalable = 6;
    this.kMPEG4Object_TwinVQ = 7;
    this.kMPEG4Object_CELP = 8;
    this.kMPEG4Object_HVXC = 9;
}

// Based on /System/Library/Frameworks/CoreAudio.framework/Headers/AudioHardware.h
function AudioHardware_h(lib) {
    CFRunLoop_h.call(this, lib);
    CoreAudioTypes_h.call(this, lib);
    MacTypes_h.call(this, lib);

    if (this._AUDIOHARDWARE_H)
        return;
    this._AUDIOHARDWARE_H = true;

    this.kAudioHardwareNoError = 0;
    this.kAudioHardwareNotRunningError = 1937010544;
    this.kAudioHardwareUnspecifiedError = 2003329396;
    this.kAudioHardwareUnknownPropertyError = 2003332927;
    this.kAudioHardwareBadPropertySizeError = 561211770;
    this.kAudioHardwareIllegalOperationError = 1852797029;
    this.kAudioHardwareBadObjectError = 560947818;
    this.kAudioHardwareBadDeviceError = 560227702;
    this.kAudioHardwareBadStreamError = 561214578;
    this.kAudioHardwareUnsupportedOperationError = 1970171760;
    this.kAudioDeviceUnsupportedFormatError = 560226676;
    this.kAudioDevicePermissionsError = 560492391;
    this.AudioObjectPropertySelector = this.UInt32;
    this.AudioObjectPropertyScope = this.UInt32;
    this.AudioObjectPropertyElement = this.UInt32;
    this.AudioObjectPropertyAddress = new ctypes.StructType("AudioObjectPropertyAddress", [{mSelector: this.AudioObjectPropertySelector}, {mScope: this.AudioObjectPropertyScope}, {mElement: this.AudioObjectPropertyElement}]);
    this.kAudioObjectPropertySelectorWildcard = 707406378;
    this.kAudioObjectPropertyScopeWildcard = 707406378;
    this.kAudioObjectPropertyElementWildcard = -1;
    this.kAudioPropertyWildcardPropertyID = 707406378;
    this.kAudioPropertyWildcardSection = 255;
    this.kAudioPropertyWildcardChannel = -1;
    this.AudioClassID = this.UInt32;
    this.AudioObjectID = this.UInt32;
    this.AudioObjectPropertyListenerProc = new ctypes.FunctionType(ctypes.default_abi, this.OSStatus, [this.AudioObjectID, this.UInt32, this.AudioObjectPropertyAddress.ptr, ctypes.void_t.ptr]).ptr;
    this.kAudioObjectPropertyScopeGlobal = 1735159650;
    this.kAudioObjectPropertyElementMaster = 0;
    this.kAudioObjectClassID = 1634689642;
    this.kAudioObjectClassIDWildcard = 707406378;
    this.kAudioObjectUnknown = 0;
    this.kAudioObjectPropertyClass = 1668047219;
    this.kAudioObjectPropertyOwner = 1937007734;
    this.kAudioObjectPropertyCreator = 1869638759;
    this.kAudioObjectPropertyName = 1819173229;
    this.kAudioObjectPropertyManufacturer = 1819107691;
    this.kAudioObjectPropertyElementName = 1818454126;
    this.kAudioObjectPropertyElementCategoryName = 1818452846;
    this.kAudioObjectPropertyElementNumberName = 1818455662;
    this.kAudioObjectPropertyOwnedObjects = 1870098020;
    this.kAudioObjectPropertyListenerAdded = 1818850145;
    this.kAudioObjectPropertyListenerRemoved = 1818850162;
    this.AudioObjectShow = lib.declare("AudioObjectShow", ctypes.default_abi, ctypes.void_t, this.AudioObjectID);
    this.AudioObjectHasProperty = lib.declare("AudioObjectHasProperty", ctypes.default_abi, this.Boolean, this.AudioObjectID, this.AudioObjectPropertyAddress.ptr);
    this.AudioObjectIsPropertySettable = lib.declare("AudioObjectIsPropertySettable", ctypes.default_abi, this.OSStatus, this.AudioObjectID, this.AudioObjectPropertyAddress.ptr, this.Boolean.ptr);
    this.AudioObjectGetPropertyDataSize = lib.declare("AudioObjectGetPropertyDataSize", ctypes.default_abi, this.OSStatus, this.AudioObjectID, this.AudioObjectPropertyAddress.ptr, this.UInt32, ctypes.void_t.ptr, this.UInt32.ptr);
    this.AudioObjectGetPropertyData = lib.declare("AudioObjectGetPropertyData", ctypes.default_abi, this.OSStatus, this.AudioObjectID, this.AudioObjectPropertyAddress.ptr, this.UInt32, ctypes.void_t.ptr, this.UInt32.ptr, ctypes.void_t.ptr);
    this.AudioObjectSetPropertyData = lib.declare("AudioObjectSetPropertyData", ctypes.default_abi, this.OSStatus, this.AudioObjectID, this.AudioObjectPropertyAddress.ptr, this.UInt32, ctypes.void_t.ptr, this.UInt32, ctypes.void_t.ptr);
    this.AudioObjectAddPropertyListener = lib.declare("AudioObjectAddPropertyListener", ctypes.default_abi, this.OSStatus, this.AudioObjectID, this.AudioObjectPropertyAddress.ptr, this.AudioObjectPropertyListenerProc, ctypes.void_t.ptr);
    this.AudioObjectRemovePropertyListener = lib.declare("AudioObjectRemovePropertyListener", ctypes.default_abi, this.OSStatus, this.AudioObjectID, this.AudioObjectPropertyAddress.ptr, this.AudioObjectPropertyListenerProc, ctypes.void_t.ptr);
    this.kAudioControlClassID = 1633907820;
    this.kAudioLevelControlClassID = 1818588780;
    this.kAudioBooleanControlClassID = 1953458028;
    this.kAudioSelectorControlClassID = 1936483188;
    this.kAudioStereoPanControlClassID = 1936744814;
    this.kAudioVolumeControlClassID = 1986817381;
    this.kAudioLFEVolumeControlClassID = 1937072758;
    this.kAudioBootChimeVolumeControlClassID = 1886544237;
    this.kAudioMuteControlClassID = 1836414053;
    this.kAudioSoloControlClassID = 1936682095;
    this.kAudioJackControlClassID = 1784767339;
    this.kAudioLFEMuteControlClassID = 1937072749;
    this.kAudioISubOwnerControlClassID = 1635017576;
    this.kAudioDataSourceControlClassID = 1685287523;
    this.kAudioDataDestinationControlClassID = 1684370292;
    this.kAudioClockSourceControlClassID = 1668047723;
    this.kAudioLineLevelControlClassID = 1852601964;
    this.kAudioControlPropertyScope = 1668506480;
    this.kAudioControlPropertyElement = 1667591277;
    this.kAudioControlPropertyVariant = 1668702578;
    this.kAudioLevelControlPropertyScalarValue = 1818456950;
    this.kAudioLevelControlPropertyDecibelValue = 1818453110;
    this.kAudioLevelControlPropertyDecibelRange = 1818453106;
    this.kAudioLevelControlPropertyConvertScalarToDecibels = 1818456932;
    this.kAudioLevelControlPropertyConvertDecibelsToScalar = 1818453107;
    this.kAudioLevelControlPropertyDecibelsToScalarTransferFunction = 1818457190;
    this.kAudioLevelControlTranferFunctionLinear = 0;
    this.kAudioLevelControlTranferFunction1Over3 = 1;
    this.kAudioLevelControlTranferFunction1Over2 = 2;
    this.kAudioLevelControlTranferFunction3Over4 = 3;
    this.kAudioLevelControlTranferFunction3Over2 = 4;
    this.kAudioLevelControlTranferFunction2Over1 = 5;
    this.kAudioLevelControlTranferFunction3Over1 = 6;
    this.kAudioLevelControlTranferFunction4Over1 = 7;
    this.kAudioLevelControlTranferFunction5Over1 = 8;
    this.kAudioLevelControlTranferFunction6Over1 = 9;
    this.kAudioLevelControlTranferFunction7Over1 = 10;
    this.kAudioLevelControlTranferFunction8Over1 = 11;
    this.kAudioLevelControlTranferFunction9Over1 = 12;
    this.kAudioLevelControlTranferFunction10Over1 = 13;
    this.kAudioLevelControlTranferFunction11Over1 = 14;
    this.kAudioLevelControlTranferFunction12Over1 = 15;
    this.kAudioBooleanControlPropertyValue = 1650685548;
    this.kAudioSelectorControlPropertyCurrentItem = 1935893353;
    this.kAudioSelectorControlPropertyAvailableItems = 1935892841;
    this.kAudioSelectorControlPropertyItemName = 1935894894;
    this.kAudioClockSourceControlPropertyItemKind = 1668049771;
    this.kAudioClockSourceItemKindInternal = 1768846368;
    this.kAudioStereoPanControlPropertyValue = 1936745334;
    this.kAudioStereoPanControlPropertyPanningChannels = 1936745315;
    this.AudioHardwarePropertyID = this.AudioObjectPropertySelector;
    this.AudioHardwarePropertyListenerProc = new ctypes.FunctionType(ctypes.default_abi, this.OSStatus, [this.AudioHardwarePropertyID, ctypes.void_t.ptr]).ptr;
    this.kAudioSystemObjectClassID = 1634957683;
    this.kAudioObjectSystemObject = 1;
    this.kAudioHardwarePropertyProcessIsMaster = 1835103092;
    this.kAudioHardwarePropertyIsInitingOrExiting = 1768845172;
    this.kAudioHardwarePropertyUserIDChanged = 1702193508;
    this.kAudioHardwarePropertyDevices = 1684370979;
    this.kAudioHardwarePropertyDefaultInputDevice = 1682533920;
    this.kAudioHardwarePropertyDefaultOutputDevice = 1682929012;
    this.kAudioHardwarePropertyDefaultSystemOutputDevice = 1934587252;
    this.kAudioHardwarePropertyDeviceForUID = 1685416292;
    this.kAudioHardwarePropertyProcessIsAudible = 1886221684;
    this.kAudioHardwarePropertySleepingIsAllowed = 1936483696;
    this.kAudioHardwarePropertyUnloadingIsAllowed = 1970170980;
    this.kAudioHardwarePropertyHogModeIsAllowed = 1752131442;
    this.kAudioHardwarePropertyRunLoop = 1919839344;
    this.kAudioHardwarePropertyPlugInForBundleID = 1885954665;
    this.kAudioHardwarePropertyUserSessionIsActiveOrHeadless = 1970496882;
    this.kAudioHardwarePropertyMixStereoToMono = 1937010031;
    this.kAudioHardwarePropertyBootChimeVolumeScalar = 1650620019;
    this.kAudioHardwarePropertyBootChimeVolumeDecibels = 1650620004;
    this.kAudioHardwarePropertyBootChimeVolumeRangeDecibels = 1650615331;
    this.kAudioHardwarePropertyBootChimeVolumeScalarToDecibels = 1651913316;
    this.kAudioHardwarePropertyBootChimeVolumeDecibelsToScalar = 1650733686;
    this.kAudioHardwarePropertyBootChimeVolumeDecibelsToScalarTransferFunction = 1651930214;
    this.AudioHardwareAddRunLoopSource = lib.declare("AudioHardwareAddRunLoopSource", ctypes.default_abi, this.OSStatus, this.CFRunLoopSourceRef);
    this.AudioHardwareRemoveRunLoopSource = lib.declare("AudioHardwareRemoveRunLoopSource", ctypes.default_abi, this.OSStatus, this.CFRunLoopSourceRef);
    this.AudioHardwareUnload = lib.declare("AudioHardwareUnload", ctypes.default_abi, this.OSStatus);
    this.AudioHardwareGetPropertyInfo = lib.declare("AudioHardwareGetPropertyInfo", ctypes.default_abi, this.OSStatus, this.AudioHardwarePropertyID, this.UInt32.ptr, this.Boolean.ptr);
    this.AudioHardwareGetProperty = lib.declare("AudioHardwareGetProperty", ctypes.default_abi, this.OSStatus, this.AudioHardwarePropertyID, this.UInt32.ptr, ctypes.void_t.ptr);
    this.AudioHardwareSetProperty = lib.declare("AudioHardwareSetProperty", ctypes.default_abi, this.OSStatus, this.AudioHardwarePropertyID, this.UInt32, ctypes.void_t.ptr);
    this.AudioHardwareAddPropertyListener = lib.declare("AudioHardwareAddPropertyListener", ctypes.default_abi, this.OSStatus, this.AudioHardwarePropertyID, this.AudioHardwarePropertyListenerProc, ctypes.void_t.ptr);
    this.AudioHardwareRemovePropertyListener = lib.declare("AudioHardwareRemovePropertyListener", ctypes.default_abi, this.OSStatus, this.AudioHardwarePropertyID, this.AudioHardwarePropertyListenerProc);
    this.kAudioPlugInClassID = 1634757735;
    this.kAudioPlugInPropertyBundleID = 1885956452;
    this.kAudioPlugInCreateAggregateDevice = 1667327847;
    this.kAudioPlugInDestroyAggregateDevice = 1684105063;
    this.AudioDeviceID = this.AudioObjectID;
    this.AudioDevicePropertyID = this.AudioObjectPropertySelector;
    this.AudioDeviceIOProc = new ctypes.FunctionType(ctypes.default_abi, this.OSStatus, [this.AudioDeviceID, this.AudioTimeStamp.ptr, this.AudioBufferList.ptr, this.AudioTimeStamp.ptr, this.AudioBufferList.ptr, this.AudioTimeStamp.ptr, ctypes.void_t.ptr]).ptr;
    this.AudioDeviceIOProcID = this.AudioDeviceIOProc;
    this.AudioHardwareIOProcStreamUsage = new ctypes.StructType("AudioHardwareIOProcStreamUsage", [{mIOProc: ctypes.void_t.ptr}, {mNumberStreams: this.UInt32}, {mStreamIsOn: this.UInt32.array(1)}]);
    this.AudioDevicePropertyListenerProc = new ctypes.FunctionType(ctypes.default_abi, this.OSStatus, [this.AudioDeviceID, this.UInt32, this.Boolean, this.AudioDevicePropertyID, ctypes.void_t.ptr]).ptr;
    this.kAudioDevicePropertyScopeInput = 1768845428;
    this.kAudioDevicePropertyScopeOutput = 1869968496;
    this.kAudioDevicePropertyScopePlayThrough = 1886679669;
    this.kAudioDeviceClassID = 1633969526;
    this.kAudioDeviceUnknown = 0;
    this.kAudioDeviceStartTimeIsInputFlag = 1;
    this.kAudioDeviceStartTimeDontConsultDeviceFlag = 2;
    this.kAudioDeviceStartTimeDontConsultHALFlag = 4;
    this.kAudioDeviceTransportTypeUnknown = 0;
    this.kAudioDeviceTransportTypeBuiltIn = 1651274862;
    this.kAudioDeviceTransportTypeAggregate = 1735554416;
    this.kAudioDeviceTransportTypeAutoAggregate = 1718055536;
    this.kAudioDeviceTransportTypeVirtual = 1986622068;
    this.kAudioDeviceTransportTypePCI = 1885563168;
    this.kAudioDeviceTransportTypeUSB = 1970496032;
    this.kAudioDeviceTransportTypeFireWire = 825440564;
    this.kAudioDeviceTransportTypeBluetooth = 1651275109;
    this.kAudioDevicePropertyPlugIn = 1886156135;
    this.kAudioDevicePropertyConfigurationApplication = 1667330160;
    this.kAudioDevicePropertyDeviceUID = 1969841184;
    this.kAudioDevicePropertyModelUID = 1836411236;
    this.kAudioDevicePropertyTransportType = 1953653102;
    this.kAudioDevicePropertyRelatedDevices = 1634429294;
    this.kAudioDevicePropertyClockDomain = 1668049764;
    this.kAudioDevicePropertyDeviceIsAlive = 1818850926;
    this.kAudioDevicePropertyDeviceHasChanged = 1684629094;
    this.kAudioDevicePropertyDeviceIsRunning = 1735354734;
    this.kAudioDevicePropertyDeviceIsRunningSomewhere = 1735356005;
    this.kAudioDevicePropertyDeviceCanBeDefaultDevice = 1684434036;
    this.kAudioDevicePropertyDeviceCanBeDefaultSystemDevice = 1936092276;
    this.kAudioDeviceProcessorOverload = 1870030194;
    this.kAudioDevicePropertyHogMode = 1869180523;
    this.kAudioDevicePropertyLatency = 1819569763;
    this.kAudioDevicePropertyBufferFrameSize = 1718839674;
    this.kAudioDevicePropertyBufferFrameSizeRange = 1718843939;
    this.kAudioDevicePropertyUsesVariableBufferFrameSizes = 1986425722;
    this.kAudioDevicePropertyStreams = 1937009955;
    this.kAudioDevicePropertySafetyOffset = 1935763060;
    this.kAudioDevicePropertyIOCycleUsage = 1852012899;
    this.kAudioDevicePropertyStreamConfiguration = 1936482681;
    this.kAudioDevicePropertyIOProcStreamUsage = 1937077093;
    this.kAudioDevicePropertyPreferredChannelsForStereo = 1684236338;
    this.kAudioDevicePropertyPreferredChannelLayout = 1936879204;
    this.kAudioDevicePropertyNominalSampleRate = 1853059700;
    this.kAudioDevicePropertyAvailableNominalSampleRates = 1853059619;
    this.kAudioDevicePropertyActualSampleRate = 1634955892;
    this.kAudioDevicePropertyIcon = 1768124270;
    this.kAudioDevicePropertyIsHidden = 1751737454;
    this.kAudioDevicePropertyJackIsConnected = 1784767339;
    this.kAudioDevicePropertyVolumeScalar = 1987013741;
    this.kAudioDevicePropertyVolumeDecibels = 1987013732;
    this.kAudioDevicePropertyVolumeRangeDecibels = 1986290211;
    this.kAudioDevicePropertyVolumeScalarToDecibels = 1983013986;
    this.kAudioDevicePropertyVolumeDecibelsToScalar = 1684157046;
    this.kAudioDevicePropertyVolumeDecibelsToScalarTransferFunction = 1986229350;
    this.kAudioDevicePropertyStereoPan = 1936744814;
    this.kAudioDevicePropertyStereoPanChannels = 1936748067;
    this.kAudioDevicePropertyMute = 1836414053;
    this.kAudioDevicePropertySolo = 1936682095;
    this.kAudioDevicePropertyDataSource = 1936945763;
    this.kAudioDevicePropertyDataSources = 1936941859;
    this.kAudioDevicePropertyDataSourceNameForIDCFString = 1819501422;
    this.kAudioDevicePropertyClockSource = 1668510307;
    this.kAudioDevicePropertyClockSources = 1668506403;
    this.kAudioDevicePropertyClockSourceNameForIDCFString = 1818456942;
    this.kAudioDevicePropertyClockSourceKindForID = 1668506475;
    this.kAudioDevicePropertyPlayThru = 1953002101;
    this.kAudioDevicePropertyPlayThruSolo = 1953002099;
    this.kAudioDevicePropertyPlayThruVolumeScalar = 1836479331;
    this.kAudioDevicePropertyPlayThruVolumeDecibels = 1836475490;
    this.kAudioDevicePropertyPlayThruVolumeRangeDecibels = 1836475427;
    this.kAudioDevicePropertyPlayThruVolumeScalarToDecibels = 1836462692;
    this.kAudioDevicePropertyPlayThruVolumeDecibelsToScalar = 1836462707;
    this.kAudioDevicePropertyPlayThruVolumeDecibelsToScalarTransferFunction = 1836479590;
    this.kAudioDevicePropertyPlayThruStereoPan = 1836281966;
    this.kAudioDevicePropertyPlayThruStereoPanChannels = 1836281891;
    this.kAudioDevicePropertyPlayThruDestination = 1835295859;
    this.kAudioDevicePropertyPlayThruDestinations = 1835295779;
    this.kAudioDevicePropertyPlayThruDestinationNameForIDCFString = 1835295843;
    this.kAudioDevicePropertyChannelNominalLineLevel = 1852601964;
    this.kAudioDevicePropertyChannelNominalLineLevels = 1852601891;
    this.kAudioDevicePropertyChannelNominalLineLevelNameForIDCFString = 1818455660;
    this.kAudioDevicePropertyDriverShouldOwniSub = 1769174370;
    this.kAudioDevicePropertySubVolumeScalar = 1937140845;
    this.kAudioDevicePropertySubVolumeDecibels = 1937140836;
    this.kAudioDevicePropertySubVolumeRangeDecibels = 1937138723;
    this.kAudioDevicePropertySubVolumeScalarToDecibels = 1937125988;
    this.kAudioDevicePropertySubVolumeDecibelsToScalar = 1935946358;
    this.kAudioDevicePropertySubVolumeDecibelsToScalarTransferFunction = 1937142886;
    this.kAudioDevicePropertySubMute = 1936553332;
    this.kAudioDevicePropertyDeviceName = 1851878757;
    this.kAudioDevicePropertyDeviceNameCFString = 1819173229;
    this.kAudioDevicePropertyDeviceManufacturer = 1835101042;
    this.kAudioDevicePropertyDeviceManufacturerCFString = 1819107691;
    this.kAudioDevicePropertyRegisterBufferList = 1919055206;
    this.kAudioDevicePropertyBufferSize = 1651730810;
    this.kAudioDevicePropertyBufferSizeRange = 1651735075;
    this.kAudioDevicePropertyChannelName = 1667788397;
    this.kAudioDevicePropertyChannelNameCFString = 1818454126;
    this.kAudioDevicePropertyChannelCategoryName = 1667460717;
    this.kAudioDevicePropertyChannelCategoryNameCFString = 1818452846;
    this.kAudioDevicePropertyChannelNumberName = 1668181613;
    this.kAudioDevicePropertyChannelNumberNameCFString = 1818455662;
    this.kAudioDevicePropertySupportsMixing = 1835628607;
    this.kAudioDevicePropertyStreamFormat = 1936092532;
    this.kAudioDevicePropertyStreamFormats = 1936092451;
    this.kAudioDevicePropertyStreamFormatSupported = 1936092479;
    this.kAudioDevicePropertyStreamFormatMatch = 1936092525;
    this.kAudioDevicePropertyDataSourceNameForID = 1936941934;
    this.kAudioDevicePropertyClockSourceNameForID = 1668506478;
    this.kAudioDevicePropertyPlayThruDestinationNameForID = 1835295854;
    this.kAudioDevicePropertyChannelNominalLineLevelNameForID = 1668181110;
    this.AudioDeviceCreateIOProcID = lib.declare("AudioDeviceCreateIOProcID", ctypes.default_abi, this.OSStatus, this.AudioDeviceID, this.AudioDeviceIOProc, ctypes.void_t.ptr, this.AudioDeviceIOProcID.ptr);
    this.AudioDeviceDestroyIOProcID = lib.declare("AudioDeviceDestroyIOProcID", ctypes.default_abi, this.OSStatus, this.AudioDeviceID, this.AudioDeviceIOProcID);
    this.AudioDeviceAddIOProc = lib.declare("AudioDeviceAddIOProc", ctypes.default_abi, this.OSStatus, this.AudioDeviceID, this.AudioDeviceIOProc, ctypes.void_t.ptr);
    this.AudioDeviceRemoveIOProc = lib.declare("AudioDeviceRemoveIOProc", ctypes.default_abi, this.OSStatus, this.AudioDeviceID, this.AudioDeviceIOProc);
    this.AudioDeviceStart = lib.declare("AudioDeviceStart", ctypes.default_abi, this.OSStatus, this.AudioDeviceID, this.AudioDeviceIOProcID);
    this.AudioDeviceStartAtTime = lib.declare("AudioDeviceStartAtTime", ctypes.default_abi, this.OSStatus, this.AudioDeviceID, this.AudioDeviceIOProcID, this.AudioTimeStamp.ptr, this.UInt32);
    this.AudioDeviceStop = lib.declare("AudioDeviceStop", ctypes.default_abi, this.OSStatus, this.AudioDeviceID, this.AudioDeviceIOProcID);
    this.AudioDeviceRead = lib.declare("AudioDeviceRead", ctypes.default_abi, this.OSStatus, this.AudioDeviceID, this.AudioTimeStamp.ptr, this.AudioBufferList.ptr);
    this.AudioDeviceGetCurrentTime = lib.declare("AudioDeviceGetCurrentTime", ctypes.default_abi, this.OSStatus, this.AudioDeviceID, this.AudioTimeStamp.ptr);
    this.AudioDeviceTranslateTime = lib.declare("AudioDeviceTranslateTime", ctypes.default_abi, this.OSStatus, this.AudioDeviceID, this.AudioTimeStamp.ptr, this.AudioTimeStamp.ptr);
    this.AudioDeviceGetNearestStartTime = lib.declare("AudioDeviceGetNearestStartTime", ctypes.default_abi, this.OSStatus, this.AudioDeviceID, this.AudioTimeStamp.ptr, this.UInt32);
    this.AudioDeviceGetPropertyInfo = lib.declare("AudioDeviceGetPropertyInfo", ctypes.default_abi, this.OSStatus, this.AudioDeviceID, this.UInt32, this.Boolean, this.AudioDevicePropertyID, this.UInt32.ptr, this.Boolean.ptr);
    this.AudioDeviceGetProperty = lib.declare("AudioDeviceGetProperty", ctypes.default_abi, this.OSStatus, this.AudioDeviceID, this.UInt32, this.Boolean, this.AudioDevicePropertyID, this.UInt32.ptr, ctypes.void_t.ptr);
    this.AudioDeviceSetProperty = lib.declare("AudioDeviceSetProperty", ctypes.default_abi, this.OSStatus, this.AudioDeviceID, this.AudioTimeStamp.ptr, this.UInt32, this.Boolean, this.AudioDevicePropertyID, this.UInt32, ctypes.void_t.ptr);
    this.AudioDeviceAddPropertyListener = lib.declare("AudioDeviceAddPropertyListener", ctypes.default_abi, this.OSStatus, this.AudioDeviceID, this.UInt32, this.Boolean, this.AudioDevicePropertyID, this.AudioDevicePropertyListenerProc, ctypes.void_t.ptr);
    this.AudioDeviceRemovePropertyListener = lib.declare("AudioDeviceRemovePropertyListener", ctypes.default_abi, this.OSStatus, this.AudioDeviceID, this.UInt32, this.Boolean, this.AudioDevicePropertyID, this.AudioDevicePropertyListenerProc);
    this.AudioStreamID = this.AudioObjectID;
    this.AudioStreamRangedDescription = new ctypes.StructType("AudioStreamRangedDescription", [{mFormat: this.AudioStreamBasicDescription}, {mSampleRateRange: this.AudioValueRange}]);
    this.AudioStreamPropertyListenerProc = new ctypes.FunctionType(ctypes.default_abi, this.OSStatus, [this.AudioStreamID, this.UInt32, this.AudioDevicePropertyID, ctypes.void_t.ptr]).ptr;
    this.kAudioStreamClassID = 1634956402;
    this.kAudioStreamUnknown = 0;
    this.kAudioStreamTerminalTypeUnknown = 0;
    this.kAudioStreamTerminalTypeLine = 1818848869;
    this.kAudioStreamTerminalTypeDigitalAudioInterface = 1936745574;
    this.kAudioStreamTerminalTypeSpeaker = 1936747378;
    this.kAudioStreamTerminalTypeHeadphones = 1751412840;
    this.kAudioStreamTerminalTypeLFESpeaker = 1818649971;
    this.kAudioStreamTerminalTypeReceiverSpeaker = 1920168043;
    this.kAudioStreamTerminalTypeMicrophone = 1835623282;
    this.kAudioStreamTerminalTypeHeadsetMicrophone = 1752000867;
    this.kAudioStreamTerminalTypeReceiverMicrophone = 1919773027;
    this.kAudioStreamTerminalTypeTTY = 1953790303;
    this.kAudioStreamPropertyDirection = 1935960434;
    this.kAudioStreamPropertyTerminalType = 1952805485;
    this.kAudioStreamPropertyStartingChannel = 1935894638;
    this.kAudioStreamPropertyLatency = 1819569763;
    this.kAudioStreamPropertyVirtualFormat = 1936092532;
    this.kAudioStreamPropertyAvailableVirtualFormats = 1936092513;
    this.kAudioStreamPropertyPhysicalFormat = 1885762592;
    this.kAudioStreamPropertyAvailablePhysicalFormats = 1885762657;
    this.kAudioStreamPropertyOwningDevice = 1937007734;
    this.kAudioStreamPropertyPhysicalFormats = 1885762595;
    this.kAudioStreamPropertyPhysicalFormatSupported = 1885762623;
    this.kAudioStreamPropertyPhysicalFormatMatch = 1885762669;
    this.AudioStreamGetPropertyInfo = lib.declare("AudioStreamGetPropertyInfo", ctypes.default_abi, this.OSStatus, this.AudioStreamID, this.UInt32, this.AudioDevicePropertyID, this.UInt32.ptr, this.Boolean.ptr);
    this.AudioStreamGetProperty = lib.declare("AudioStreamGetProperty", ctypes.default_abi, this.OSStatus, this.AudioStreamID, this.UInt32, this.AudioDevicePropertyID, this.UInt32.ptr, ctypes.void_t.ptr);
    this.AudioStreamSetProperty = lib.declare("AudioStreamSetProperty", ctypes.default_abi, this.OSStatus, this.AudioStreamID, this.AudioTimeStamp.ptr, this.UInt32, this.AudioDevicePropertyID, this.UInt32, ctypes.void_t.ptr);
    this.AudioStreamAddPropertyListener = lib.declare("AudioStreamAddPropertyListener", ctypes.default_abi, this.OSStatus, this.AudioStreamID, this.UInt32, this.AudioDevicePropertyID, this.AudioStreamPropertyListenerProc, ctypes.void_t.ptr);
    this.AudioStreamRemovePropertyListener = lib.declare("AudioStreamRemovePropertyListener", ctypes.default_abi, this.OSStatus, this.AudioStreamID, this.UInt32, this.AudioDevicePropertyID, this.AudioStreamPropertyListenerProc);
    this.kAudioAggregateDeviceClassID = 1633773415;
    this.kAudioAggregateDevicePropertyFullSubDeviceList = 1735554416;
    this.kAudioAggregateDevicePropertyActiveSubDeviceList = 1634169456;
    this.kAudioAggregateDevicePropertyComposition = 1633906541;
    this.kAudioAggregateDevicePropertyMasterSubDevice = 1634562932;
    this.kAudioSubDeviceClassID = 1634956642;
    this.kAudioSubDeviceDriftCompensationMinQuality = 0;
    this.kAudioSubDeviceDriftCompensationLowQuality = 32;
    this.kAudioSubDeviceDriftCompensationMediumQuality = 64;
    this.kAudioSubDeviceDriftCompensationHighQuality = 96;
    this.kAudioSubDeviceDriftCompensationMaxQuality = 127;
    this.kAudioSubDevicePropertyExtraLatency = 2020373603;
    this.kAudioSubDevicePropertyDriftCompensation = 1685218932;
    this.kAudioSubDevicePropertyDriftCompensationQuality = 1685218929;
}

// Based on /System/Library/Frameworks/CoreAudio.framework/Headers/HostTime.h
function HostTime_h(lib) {
    MacTypes_h.call(this, lib);

    if (this._HOSTTIME_H)
        return;
    this._HOSTTIME_H = true;

    this.AudioGetCurrentHostTime = lib.declare("AudioGetCurrentHostTime", ctypes.default_abi, this.UInt64);
    this.AudioGetHostClockFrequency = lib.declare("AudioGetHostClockFrequency", ctypes.default_abi, this.Float64);
    this.AudioGetHostClockMinimumTimeDelta = lib.declare("AudioGetHostClockMinimumTimeDelta", ctypes.default_abi, this.UInt32);
    this.AudioConvertHostTimeToNanos = lib.declare("AudioConvertHostTimeToNanos", ctypes.default_abi, this.UInt64, this.UInt64);
    this.AudioConvertNanosToHostTime = lib.declare("AudioConvertNanosToHostTime", ctypes.default_abi, this.UInt64, this.UInt64);
}

Components.utils.import("resource://gre/modules/ctypes.jsm");
Components.utils.import("resource://osxtypes/MacTypes.jsm");
Components.utils.import("resource://osxtypes/CoreFoundation.jsm");

const EXPORTED_SYMBOLS = ["CoreAudio", "CoreAudioTypes_h", "AudioHardware_h", "HostTime_h"];

function CoreAudio() {
    let libpath = "/System/Library/Frameworks/CoreAudio.framework/CoreAudio";
    let library = ctypes.open(libpath);
    this.close = function() {
        library.close();
    };
    let lib = {
        declare: function() {
            try {
                return library.declare.apply(library, arguments);
            } catch (ex) {
                dump("Failed to declare " + arguments[0] + "\n");
                return null;
            }
        }
    };

    CoreAudioTypes_h.call(this, lib);
    AudioHardware_h.call(this, lib);
    HostTime_h.call(this, lib);
}
