// Based on /System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/FSEvents.h
function FSEvents_h(lib) {
    CFBase_h.call(this, lib);
    MacTypes_h.call(this, lib);

    if (this._FSEVENTS_H)
        return;
    this._FSEVENTS_H = true;

    this.FSEventStreamCreateFlags = this.UInt32;
    this.kFSEventStreamCreateFlagNone = 0;
    this.kFSEventStreamCreateFlagUseCFTypes = 1;
    this.kFSEventStreamCreateFlagNoDefer = 2;
    this.kFSEventStreamCreateFlagWatchRoot = 4;
    this.kFSEventStreamCreateFlagIgnoreSelf = 8;
    this.FSEventStreamEventFlags = this.UInt32;
    this.kFSEventStreamEventFlagNone = 0;
    this.kFSEventStreamEventFlagMustScanSubDirs = 1;
    this.kFSEventStreamEventFlagUserDropped = 2;
    this.kFSEventStreamEventFlagKernelDropped = 4;
    this.kFSEventStreamEventFlagEventIdsWrapped = 8;
    this.kFSEventStreamEventFlagHistoryDone = 16;
    this.kFSEventStreamEventFlagRootChanged = 32;
    this.kFSEventStreamEventFlagMount = 64;
    this.kFSEventStreamEventFlagUnmount = 128;
    this.FSEventStreamEventId = this.UInt64;
    this.kFSEventStreamEventIdSinceNow = -1;
    this.__FSEventStream = new ctypes.StructType("__FSEventStream");
    this.FSEventStreamRef = this.__FSEventStream.ptr;
    this.ConstFSEventStreamRef = this.__FSEventStream.ptr;
    this.FSEventStreamContext = new ctypes.StructType("FSEventStreamContext", [{version: this.CFIndex}, {info: ctypes.void_t.ptr}, {retain: this.CFAllocatorRetainCallBack}, {release: this.CFAllocatorReleaseCallBack}, {copyDescription: this.CFAllocatorCopyDescriptionCallBack}]);
    // Dropping declaration of 'FSEventStreamCallback': 'size_t' defined out of scope
}

// Based on /System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/TextEncodingConverter.h
function TextEncodingConverter_h(lib) {
    TextCommon_h.call(this, lib);
    MacTypes_h.call(this, lib);

    if (this._TEXTENCODINGCONVERTER_H)
        return;
    this._TEXTENCODINGCONVERTER_H = true;

    this.TECPluginSignature = this.OSType;
    this.TECPluginVersion = this.UInt32;
    this.kTECSignature = 1701733238;
    this.kTECUnicodePluginSignature = 1886744169;
    this.kTECJapanesePluginSignature = 1886023790;
    this.kTECChinesePluginSignature = 1887070319;
    this.kTECKoreanPluginSignature = 1886089074;
    this.OpaqueTECObjectRef = new ctypes.StructType("OpaqueTECObjectRef");
    this.TECObjectRef = this.OpaqueTECObjectRef.ptr;
    this.OpaqueTECSnifferObjectRef = new ctypes.StructType("OpaqueTECSnifferObjectRef");
    this.TECSnifferObjectRef = this.OpaqueTECSnifferObjectRef.ptr;
    this.TECPluginSig = this.OSType;
    this.TECConversionInfo = new ctypes.StructType("TECConversionInfo", [{sourceEncoding: this.TextEncoding}, {destinationEncoding: this.TextEncoding}, {reserved1: this.UInt16}, {reserved2: this.UInt16}]);
    this.TECInternetNameUsageMask = this.UInt32;
    this.kTECInternetNameDefaultUsageMask = 0;
    this.kTECInternetNameStrictUsageMask = 1;
    this.kTECInternetNameTolerantUsageMask = 2;
    this.kTEC_MIBEnumDontCare = -1;
    this.kTECDisableFallbacksBit = 16;
    this.kTECDisableLooseMappingsBit = 17;
    this.kTECDisableFallbacksMask = 65536;
    this.kTECDisableLooseMappingsMask = 131072;
}

// Based on /System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/AVLTree.h
function AVLTree_h(lib) {
    MacTypes_h.call(this, lib);

    if (this._AVLTREE_H)
        return;
    this._AVLTREE_H = true;

    this.AVLVisitStage = this.UInt16;
    this.kAVLPreOrder = 0;
    this.kAVLInOrder = 1;
    this.kAVLPostOrder = 2;
    this.AVLOrder = this.UInt16;
    this.kLeftToRight = 0;
    this.kRightToLeft = 1;
    this.AVLNodeType = this.UInt16;
    this.kAVLIsTree = 0;
    this.kAVLIsLeftBranch = 1;
    this.kAVLIsRightBranch = 2;
    this.kAVLIsLeaf = 3;
    this.kAVLNullNode = 4;
    this.errItemAlreadyInTree = -960;
    this.errNotValidTree = -961;
    this.errItemNotFoundInTree = -962;
    this.errCanNotInsertWhileWalkProcInProgress = -963;
    this.errTreeIsLocked = -964;
    this.AVLTreeStruct = new ctypes.StructType("AVLTreeStruct", [{signature: this.OSType}, {privateStuff: ctypes.unsigned_long.array(8)}]);
    this.AVLTreePtr = this.AVLTreeStruct.ptr;
    this.AVLCompareItemsProcPtr = new ctypes.FunctionType(ctypes.default_abi, this.SInt32, [this.AVLTreePtr, ctypes.void_t.ptr, ctypes.void_t.ptr, this.AVLNodeType]).ptr;
    this.AVLItemSizeProcPtr = new ctypes.FunctionType(ctypes.default_abi, this.ByteCount, [this.AVLTreePtr, ctypes.void_t.ptr]).ptr;
    this.AVLDisposeItemProcPtr = new ctypes.FunctionType(ctypes.default_abi, ctypes.void_t, [this.AVLTreePtr, ctypes.void_t.ptr]).ptr;
    this.AVLWalkProcPtr = new ctypes.FunctionType(ctypes.default_abi, this.OSErr, [this.AVLTreePtr, ctypes.void_t.ptr, this.AVLVisitStage, this.AVLNodeType, this.UInt32, this.SInt32, ctypes.void_t.ptr]).ptr;
    this.AVLCompareItemsUPP = this.AVLCompareItemsProcPtr;
    this.AVLItemSizeUPP = this.AVLItemSizeProcPtr;
    this.AVLDisposeItemUPP = this.AVLDisposeItemProcPtr;
    this.AVLWalkUPP = this.AVLWalkProcPtr;
    // Dropping inline function 'NewAVLCompareItemsUPP'.
    // Dropping inline function 'NewAVLItemSizeUPP'.
    // Dropping inline function 'NewAVLDisposeItemUPP'.
    // Dropping inline function 'NewAVLWalkUPP'.
    // Dropping inline function 'DisposeAVLCompareItemsUPP'.
    // Dropping inline function 'DisposeAVLItemSizeUPP'.
    // Dropping inline function 'DisposeAVLDisposeItemUPP'.
    // Dropping inline function 'DisposeAVLWalkUPP'.
    // Dropping inline function 'InvokeAVLCompareItemsUPP'.
    // Dropping inline function 'InvokeAVLItemSizeUPP'.
    // Dropping inline function 'InvokeAVLDisposeItemUPP'.
    // Dropping inline function 'InvokeAVLWalkUPP'.
}

// Based on /System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Threads.h
function Threads_h(lib) {
    MacTypes_h.call(this, lib);

    if (this._THREADS_H)
        return;
    this._THREADS_H = true;

    this.ThreadState = this.UInt16;
    this.kReadyThreadState = 0;
    this.kStoppedThreadState = 1;
    this.kRunningThreadState = 2;
    this.ThreadTaskRef = ctypes.void_t.ptr;
    this.ThreadStyle = this.UInt32;
    this.kCooperativeThread = 1;
    this.kPreemptiveThread = 2;
    this.ThreadID = ctypes.unsigned_long;
    this.kNoThreadID = 0;
    this.kCurrentThreadID = 1;
    this.kApplicationThreadID = 2;
    this.ThreadOptions = this.UInt32;
    this.kNewSuspend = 1;
    this.kUsePremadeThread = 2;
    this.kCreateIfNeeded = 4;
    this.kFPUNotNeeded = 8;
    this.kExactMatchThread = 16;
    this.SchedulerInfoRec = new ctypes.StructType("SchedulerInfoRec", [{InfoRecSize: this.UInt32}, {CurrentThreadID: this.ThreadID}, {SuggestedThreadID: this.ThreadID}, {InterruptedCoopThreadID: this.ThreadID}]);
    this.SchedulerInfoRecPtr = this.SchedulerInfoRec.ptr;
    this.voidPtr = ctypes.void_t.ptr;
    this.ThreadEntryProcPtr = new ctypes.FunctionType(ctypes.default_abi, this.voidPtr, [ctypes.void_t.ptr]).ptr;
    this.ThreadSchedulerProcPtr = new ctypes.FunctionType(ctypes.default_abi, this.ThreadID, [this.SchedulerInfoRecPtr]).ptr;
    this.ThreadSwitchProcPtr = new ctypes.FunctionType(ctypes.default_abi, ctypes.void_t, [this.ThreadID, ctypes.void_t.ptr]).ptr;
    this.ThreadTerminationProcPtr = new ctypes.FunctionType(ctypes.default_abi, ctypes.void_t, [this.ThreadID, ctypes.void_t.ptr]).ptr;
    this.DebuggerNewThreadProcPtr = new ctypes.FunctionType(ctypes.default_abi, ctypes.void_t, [this.ThreadID]).ptr;
    this.DebuggerDisposeThreadProcPtr = new ctypes.FunctionType(ctypes.default_abi, ctypes.void_t, [this.ThreadID]).ptr;
    this.DebuggerThreadSchedulerProcPtr = new ctypes.FunctionType(ctypes.default_abi, this.ThreadID, [this.SchedulerInfoRecPtr]).ptr;
    this.ThreadEntryUPP = this.ThreadEntryProcPtr;
    this.ThreadSchedulerUPP = this.ThreadSchedulerProcPtr;
    this.ThreadSwitchUPP = this.ThreadSwitchProcPtr;
    this.ThreadTerminationUPP = this.ThreadTerminationProcPtr;
    this.DebuggerNewThreadUPP = this.DebuggerNewThreadProcPtr;
    this.DebuggerDisposeThreadUPP = this.DebuggerDisposeThreadProcPtr;
    this.DebuggerThreadSchedulerUPP = this.DebuggerThreadSchedulerProcPtr;
    // Dropping inline function 'NewThreadEntryUPP'.
    // Dropping inline function 'NewThreadSchedulerUPP'.
    // Dropping inline function 'NewThreadSwitchUPP'.
    // Dropping inline function 'NewThreadTerminationUPP'.
    // Dropping inline function 'NewDebuggerNewThreadUPP'.
    // Dropping inline function 'NewDebuggerDisposeThreadUPP'.
    // Dropping inline function 'NewDebuggerThreadSchedulerUPP'.
    // Dropping inline function 'DisposeThreadEntryUPP'.
    // Dropping inline function 'DisposeThreadSchedulerUPP'.
    // Dropping inline function 'DisposeThreadSwitchUPP'.
    // Dropping inline function 'DisposeThreadTerminationUPP'.
    // Dropping inline function 'DisposeDebuggerNewThreadUPP'.
    // Dropping inline function 'DisposeDebuggerDisposeThreadUPP'.
    // Dropping inline function 'DisposeDebuggerThreadSchedulerUPP'.
    // Dropping inline function 'InvokeThreadEntryUPP'.
    // Dropping inline function 'InvokeThreadSchedulerUPP'.
    // Dropping inline function 'InvokeThreadSwitchUPP'.
    // Dropping inline function 'InvokeThreadTerminationUPP'.
    // Dropping inline function 'InvokeDebuggerNewThreadUPP'.
    // Dropping inline function 'InvokeDebuggerDisposeThreadUPP'.
    // Dropping inline function 'InvokeDebuggerThreadSchedulerUPP'.
    this.ThreadEntryTPP = this.ThreadEntryUPP;
    this.ThreadSchedulerTPP = this.ThreadSchedulerUPP;
    this.ThreadSwitchTPP = this.ThreadSwitchUPP;
    this.ThreadTerminationTPP = this.ThreadTerminationUPP;
    this.DebuggerNewThreadTPP = this.DebuggerNewThreadUPP;
    this.DebuggerDisposeThreadTPP = this.DebuggerDisposeThreadUPP;
    this.DebuggerThreadSchedulerTPP = this.DebuggerThreadSchedulerUPP;
}

// Based on /System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Files.h
function Files_h(lib) {
    UTCUtils_h.call(this, lib);
    CFBase_h.call(this, lib);
    OSUtils_h.call(this, lib);
    CFDictionary_h.call(this, lib);
    TextCommon_h.call(this, lib);
    Finder_h.call(this, lib);
    MacTypes_h.call(this, lib);

    if (this._FILES_H)
        return;
    this._FILES_H = true;

    this.HFSUniStr255 = new ctypes.StructType("HFSUniStr255", [{length: this.UInt16}, {unicode: this.UniChar.array(255)}]);
    this.ConstHFSUniStr255Param = this.HFSUniStr255.ptr;
    this.fsCurPerm = 0;
    this.fsRdPerm = 1;
    this.fsWrPerm = 2;
    this.fsRdWrPerm = 3;
    this.fsRdWrShPerm = 4;
    this.fsRdAccessPerm = 1;
    this.fsWrAccessPerm = 2;
    this.fsRdDenyPerm = 16;
    this.fsWrDenyPerm = 32;
    this.fsRtParID = 1;
    this.fsRtDirID = 2;
    this.fsAtMark = 0;
    this.fsFromStart = 1;
    this.fsFromLEOF = 2;
    this.fsFromMark = 3;
    this.kFSAllowConcurrentAsyncIOBit = 3;
    this.kFSAllowConcurrentAsyncIOMask = 8;
    this.kFSPleaseCacheBit = 4;
    this.kFSPleaseCacheMask = 16;
    this.kFSNoCacheBit = 5;
    this.kFSNoCacheMask = 32;
    this.kFSRdVerifyBit = 6;
    this.kFSRdVerifyMask = 64;
    this.kFSForceReadBit = 6;
    this.kFSForceReadMask = 64;
    this.kFSNewLineBit = 7;
    this.kFSNewLineMask = 128;
    this.kFSNewLineCharMask = 65280;
    this.fsSBPartialName = 1;
    this.fsSBFullName = 2;
    this.fsSBFlAttrib = 4;
    this.fsSBFlFndrInfo = 8;
    this.fsSBFlLgLen = 32;
    this.fsSBFlPyLen = 64;
    this.fsSBFlRLgLen = 128;
    this.fsSBFlRPyLen = 256;
    this.fsSBFlCrDat = 512;
    this.fsSBFlMdDat = 1024;
    this.fsSBFlBkDat = 2048;
    this.fsSBFlXFndrInfo = 4096;
    this.fsSBFlParID = 8192;
    this.fsSBNegate = 16384;
    this.fsSBDrUsrWds = 8;
    this.fsSBDrNmFls = 16;
    this.fsSBDrCrDat = 512;
    this.fsSBDrMdDat = 1024;
    this.fsSBDrBkDat = 2048;
    this.fsSBDrFndrInfo = 4096;
    this.fsSBDrParID = 8192;
    this.fsSBNodeID = 32768;
    this.fsSBAttributeModDate = 65536;
    this.fsSBAccessDate = 131072;
    this.fsSBPermissions = 262144;
    this.fsSBSkipPackageContents = 524288;
    this.fsSBSkipHiddenItems = 1048576;
    this.fsSBUserID = 2097152;
    this.fsSBGroupID = 4194304;
    this.fsSBPartialNameBit = 0;
    this.fsSBFullNameBit = 1;
    this.fsSBFlAttribBit = 2;
    this.fsSBFlFndrInfoBit = 3;
    this.fsSBFlLgLenBit = 5;
    this.fsSBFlPyLenBit = 6;
    this.fsSBFlRLgLenBit = 7;
    this.fsSBFlRPyLenBit = 8;
    this.fsSBFlCrDatBit = 9;
    this.fsSBFlMdDatBit = 10;
    this.fsSBFlBkDatBit = 11;
    this.fsSBFlXFndrInfoBit = 12;
    this.fsSBFlParIDBit = 13;
    this.fsSBNegateBit = 14;
    this.fsSBDrUsrWdsBit = 3;
    this.fsSBDrNmFlsBit = 4;
    this.fsSBDrCrDatBit = 9;
    this.fsSBDrMdDatBit = 10;
    this.fsSBDrBkDatBit = 11;
    this.fsSBDrFndrInfoBit = 12;
    this.fsSBDrParIDBit = 13;
    this.fsSBNodeIDBit = 15;
    this.fsSBAttributeModDateBit = 16;
    this.fsSBAccessDateBit = 17;
    this.fsSBPermissionsBit = 18;
    this.fsSBSkipPackageContentsBit = 19;
    this.fsSBSkipHiddenItemsBit = 20;
    this.fsSBUserIDBit = 21;
    this.fsSBGroupIDBit = 22;
    this.bLimitFCBs = 31;
    this.bLocalWList = 30;
    this.bNoMiniFndr = 29;
    this.bNoVNEdit = 28;
    this.bNoLclSync = 27;
    this.bTrshOffLine = 26;
    this.bNoSwitchTo = 25;
    this.bNoDeskItems = 20;
    this.bNoBootBlks = 19;
    this.bAccessCntl = 18;
    this.bNoSysDir = 17;
    this.bHasExtFSVol = 16;
    this.bHasOpenDeny = 15;
    this.bHasCopyFile = 14;
    this.bHasMoveRename = 13;
    this.bHasDesktopMgr = 12;
    this.bHasShortName = 11;
    this.bHasFolderLock = 10;
    this.bHasPersonalAccessPrivileges = 9;
    this.bHasUserGroupList = 8;
    this.bHasCatSearch = 7;
    this.bHasFileIDs = 6;
    this.bHasBTreeMgr = 5;
    this.bHasBlankAccessPrivileges = 4;
    this.bSupportsAsyncRequests = 3;
    this.bSupportsTrashVolumeCache = 2;
    this.bHasDirectIO = 1;
    this.bIsEjectable = 0;
    this.bSupportsHFSPlusAPIs = 1;
    this.bSupportsFSCatalogSearch = 2;
    this.bSupportsFSExchangeObjects = 3;
    this.bSupports2TBFiles = 4;
    this.bSupportsLongNames = 5;
    this.bSupportsMultiScriptNames = 6;
    this.bSupportsNamedForks = 7;
    this.bSupportsSubtreeIterators = 8;
    this.bL2PCanMapFileBlocks = 9;
    this.bParentModDateChanges = 10;
    this.bAncestorModDateChanges = 11;
    this.bSupportsSymbolicLinks = 13;
    this.bIsAutoMounted = 14;
    this.bAllowCDiDataHandler = 17;
    this.bSupportsExclusiveLocks = 18;
    this.bSupportsJournaling = 19;
    this.bNoVolumeSizes = 20;
    this.bIsOnInternalBus = 21;
    this.bIsCaseSensitive = 22;
    this.bIsCasePreserving = 23;
    this.bDoNotDisplay = 24;
    this.bIsRemovable = 25;
    this.bNoRootTimes = 26;
    this.bIsOnExternalBus = 27;
    this.bSupportsExtendedFileSecurity = 28;
    this.kWidePosOffsetBit = 8;
    this.kUseWidePositioning = 256;
    this.kMaximumBlocksIn4GB = 8388607;
    this.fsUnixPriv = 1;
    this.kNoUserAuthentication = 1;
    this.kPassword = 2;
    this.kEncryptPassword = 3;
    this.kTwoWayEncryptPassword = 6;
    this.knoUser = 0;
    this.kadministratorUser = 1;
    this.knoGroup = 0;
    this.FSVolumeRefNum = this.SInt16;
    this.FSIORefNum = this.SInt16;
    this.kFSInvalidVolumeRefNum = 0;
    this.FSRef = new ctypes.StructType("FSRef", [{hidden: this.UInt8.array(80)}]);
    this.FSRefPtr = this.FSRef.ptr;
    this.__FSFileSecurity = new ctypes.StructType("__FSFileSecurity");
    this.FSFileSecurityRef = this.__FSFileSecurity.ptr;
    this.CatPositionRec = new ctypes.StructType("CatPositionRec", [{initialize: this.SInt32}, {priv: this.SInt16.array(6)}]);
    this.FSSpec = new ctypes.StructType("FSSpec", [{vRefNum: this.FSVolumeRefNum}, {parID: this.SInt32}, {name: this.StrFileName}]);
    this.FSSpecPtr = this.FSSpec.ptr;
    this.FSSpecHandle = this.FSSpecPtr.ptr;
    this.FSSpecArrayPtr = this.FSSpecPtr;
    this.ConstFSSpecPtr = this.FSSpec.ptr;
    this.ParmBlkPtr = this.ParamBlockRec.ptr;
    this.IOCompletionProcPtr = new ctypes.FunctionType(ctypes.default_abi, ctypes.void_t, [this.ParmBlkPtr]).ptr;
    this.IOCompletionUPP = this.IOCompletionProcPtr;
    this.IOParam = new ctypes.StructType("IOParam", [{qLink: this.QElemPtr}, {qType: this.SInt16}, {ioTrap: this.SInt16}, {ioCmdAddr: this.Ptr}, {ioCompletion: this.IOCompletionUPP}, {ioResult: this.OSErr}, {ioNamePtr: this.StringPtr}, {ioVRefNum: this.FSVolumeRefNum}, {ioRefNum: this.FSIORefNum}, {ioVersNum: this.SInt8}, {ioPermssn: this.SInt8}, {ioMisc: this.Ptr}, {ioBuffer: this.Ptr}, {ioReqCount: this.SInt32}, {ioActCount: this.SInt32}, {ioPosMode: this.SInt16}, {ioPosOffset: this.SInt32}]);
    this.IOParamPtr = this.IOParam.ptr;
    this.FileParam = new ctypes.StructType("FileParam", [{qLink: this.QElemPtr}, {qType: this.SInt16}, {ioTrap: this.SInt16}, {ioCmdAddr: this.Ptr}, {ioCompletion: this.IOCompletionUPP}, {ioResult: this.OSErr}, {ioNamePtr: this.StringPtr}, {ioVRefNum: this.FSVolumeRefNum}, {ioFRefNum: this.FSIORefNum}, {ioFVersNum: this.SInt8}, {filler1: this.SInt8}, {ioFDirIndex: this.SInt16}, {ioFlAttrib: this.SInt8}, {ioFlVersNum: this.SInt8}, {ioFlFndrInfo: this.FInfo}, {ioFlNum: this.UInt32}, {ioFlStBlk: this.UInt16}, {ioFlLgLen: this.SInt32}, {ioFlPyLen: this.SInt32}, {ioFlRStBlk: this.UInt16}, {ioFlRLgLen: this.SInt32}, {ioFlRPyLen: this.SInt32}, {ioFlCrDat: this.UInt32}, {ioFlMdDat: this.UInt32}]);
    this.FileParamPtr = this.FileParam.ptr;
    this.VolumeParam = new ctypes.StructType("VolumeParam", [{qLink: this.QElemPtr}, {qType: this.SInt16}, {ioTrap: this.SInt16}, {ioCmdAddr: this.Ptr}, {ioCompletion: this.IOCompletionUPP}, {ioResult: this.OSErr}, {ioNamePtr: this.StringPtr}, {ioVRefNum: this.FSVolumeRefNum}, {filler2: this.UInt32}, {ioVolIndex: this.SInt16}, {ioVCrDate: this.UInt32}, {ioVLsBkUp: this.UInt32}, {ioVAtrb: this.UInt16}, {ioVNmFls: this.UInt16}, {ioVDirSt: this.UInt16}, {ioVBlLn: this.SInt16}, {ioVNmAlBlks: this.UInt16}, {ioVAlBlkSiz: this.UInt32}, {ioVClpSiz: this.UInt32}, {ioAlBlSt: this.UInt16}, {ioVNxtFNum: this.UInt32}, {ioVFrBlk: this.UInt16}]);
    this.VolumeParamPtr = this.VolumeParam.ptr;
    this.CntrlParam = new ctypes.StructType("CntrlParam", [{qLink: this.QElemPtr}, {qType: this.SInt16}, {ioTrap: this.SInt16}, {ioCmdAddr: this.Ptr}, {ioCompletion: this.IOCompletionUPP}, {ioResult: this.OSErr}, {ioNamePtr: this.StringPtr}, {ioVRefNum: this.FSVolumeRefNum}, {ioCRefNum: this.FSIORefNum}, {csCode: this.SInt16}, {csParam: this.SInt16.array(11)}]);
    this.CntrlParamPtr = this.CntrlParam.ptr;
    this.SlotDevParam = new ctypes.StructType("SlotDevParam", [{qLink: this.QElemPtr}, {qType: this.SInt16}, {ioTrap: this.SInt16}, {ioCmdAddr: this.Ptr}, {ioCompletion: this.IOCompletionUPP}, {ioResult: this.OSErr}, {ioNamePtr: this.StringPtr}, {ioVRefNum: this.FSVolumeRefNum}, {ioSRefNum: this.FSIORefNum}, {ioSVersNum: this.SInt8}, {ioSPermssn: this.SInt8}, {ioSMix: this.Ptr}, {ioSFlags: this.SInt16}, {ioSlot: this.SInt8}, {ioID: this.SInt8}]);
    this.SlotDevParamPtr = this.SlotDevParam.ptr;
    this.MultiDevParam = new ctypes.StructType("MultiDevParam", [{qLink: this.QElemPtr}, {qType: this.SInt16}, {ioTrap: this.SInt16}, {ioCmdAddr: this.Ptr}, {ioCompletion: this.IOCompletionUPP}, {ioResult: this.OSErr}, {ioNamePtr: this.StringPtr}, {ioVRefNum: this.FSVolumeRefNum}, {ioMRefNum: this.FSIORefNum}, {ioMVersNum: this.SInt8}, {ioMPermssn: this.SInt8}, {ioMMix: this.Ptr}, {ioMFlags: this.SInt16}, {ioSEBlkPtr: this.Ptr}]);
    this.MultiDevParamPtr = this.MultiDevParam.ptr;
    this.ParamBlockRec = new ctypes.StructType("ParamBlockRec", [{ioParam: this.IOParam}, {fileParam: this.FileParam}, {volumeParam: this.VolumeParam}, {cntrlParam: this.CntrlParam}, {slotDevParam: this.SlotDevParam}, {multiDevParam: this.MultiDevParam}]);
    this.HFileInfo = new ctypes.StructType("HFileInfo", [{qLink: this.QElemPtr}, {qType: this.SInt16}, {ioTrap: this.SInt16}, {ioCmdAddr: this.Ptr}, {ioCompletion: this.IOCompletionUPP}, {ioResult: this.OSErr}, {ioNamePtr: this.StringPtr}, {ioVRefNum: this.FSVolumeRefNum}, {ioFRefNum: this.FSIORefNum}, {ioFVersNum: this.SInt8}, {filler1: this.SInt8}, {ioFDirIndex: this.SInt16}, {ioFlAttrib: this.SInt8}, {ioACUser: this.SInt8}, {ioFlFndrInfo: this.FInfo}, {ioDirID: this.SInt32}, {ioFlStBlk: this.UInt16}, {ioFlLgLen: this.SInt32}, {ioFlPyLen: this.SInt32}, {ioFlRStBlk: this.UInt16}, {ioFlRLgLen: this.SInt32}, {ioFlRPyLen: this.SInt32}, {ioFlCrDat: this.UInt32}, {ioFlMdDat: this.UInt32}, {ioFlBkDat: this.UInt32}, {ioFlXFndrInfo: this.FXInfo}, {ioFlParID: this.SInt32}, {ioFlClpSiz: this.SInt32}]);
    this.DirInfo = new ctypes.StructType("DirInfo", [{qLink: this.QElemPtr}, {qType: this.SInt16}, {ioTrap: this.SInt16}, {ioCmdAddr: this.Ptr}, {ioCompletion: this.IOCompletionUPP}, {ioResult: this.OSErr}, {ioNamePtr: this.StringPtr}, {ioVRefNum: this.FSVolumeRefNum}, {ioFRefNum: this.FSIORefNum}, {ioFVersNum: this.SInt8}, {filler1: this.SInt8}, {ioFDirIndex: this.SInt16}, {ioFlAttrib: this.SInt8}, {ioACUser: this.SInt8}, {ioDrUsrWds: this.DInfo}, {ioDrDirID: this.SInt32}, {ioDrNmFls: this.UInt16}, {filler3: this.SInt16.array(9)}, {ioDrCrDat: this.UInt32}, {ioDrMdDat: this.UInt32}, {ioDrBkDat: this.UInt32}, {ioDrFndrInfo: this.DXInfo}, {ioDrParID: this.SInt32}]);
    this.CInfoPBRec = new ctypes.StructType("CInfoPBRec", [{hFileInfo: this.HFileInfo}, {dirInfo: this.DirInfo}]);
    this.CInfoPBPtr = this.CInfoPBRec.ptr;
    this.XCInfoPBRec = new ctypes.StructType("XCInfoPBRec", [{qLink: this.QElemPtr}, {qType: this.SInt16}, {ioTrap: this.SInt16}, {ioCmdAddr: this.Ptr}, {ioCompletion: this.ProcPtr}, {ioResult: this.OSErr}, {ioNamePtr: this.StringPtr}, {ioVRefNum: this.FSVolumeRefNum}, {filler1: this.SInt32}, {ioShortNamePtr: this.StringPtr}, {filler2: this.SInt16}, {ioPDType: this.SInt16}, {ioPDAuxType: this.SInt32}, {filler3: this.SInt32.array(2)}, {ioDirID: this.SInt32}]);
    this.XCInfoPBPtr = this.XCInfoPBRec.ptr;
    this.DTPBRec = new ctypes.StructType("DTPBRec", [{qLink: this.QElemPtr}, {qType: this.SInt16}, {ioTrap: this.SInt16}, {ioCmdAddr: this.Ptr}, {ioCompletion: this.IOCompletionUPP}, {ioResult: this.OSErr}, {ioNamePtr: this.StringPtr}, {ioVRefNum: this.FSVolumeRefNum}, {ioDTRefNum: this.FSIORefNum}, {ioIndex: this.SInt16}, {ioTagInfo: this.SInt32}, {ioDTBuffer: this.Ptr}, {ioDTReqCount: this.SInt32}, {ioDTActCount: this.SInt32}, {ioFiller1: this.SInt8}, {ioIconType: this.UInt8}, {ioFiller2: this.SInt16}, {ioDirID: this.SInt32}, {ioFileCreator: this.OSType}, {ioFileType: this.OSType}, {ioFiller3: this.SInt32}, {ioDTLgLen: this.SInt32}, {ioDTPyLen: this.SInt32}, {ioFiller4: this.SInt16.array(14)}, {ioAPPLParID: this.SInt32}]);
    this.DTPBPtr = this.DTPBRec.ptr;
    this.HIOParam = new ctypes.StructType("HIOParam", [{qLink: this.QElemPtr}, {qType: this.SInt16}, {ioTrap: this.SInt16}, {ioCmdAddr: this.Ptr}, {ioCompletion: this.IOCompletionUPP}, {ioResult: this.OSErr}, {ioNamePtr: this.StringPtr}, {ioVRefNum: this.FSVolumeRefNum}, {ioRefNum: this.FSIORefNum}, {ioVersNum: this.SInt8}, {ioPermssn: this.SInt8}, {ioMisc: this.Ptr}, {ioBuffer: this.Ptr}, {ioReqCount: this.SInt32}, {ioActCount: this.SInt32}, {ioPosMode: this.SInt16}, {ioPosOffset: this.SInt32}]);
    this.HIOParamPtr = this.HIOParam.ptr;
    this.HFileParam = new ctypes.StructType("HFileParam", [{qLink: this.QElemPtr}, {qType: this.SInt16}, {ioTrap: this.SInt16}, {ioCmdAddr: this.Ptr}, {ioCompletion: this.IOCompletionUPP}, {ioResult: this.OSErr}, {ioNamePtr: this.StringPtr}, {ioVRefNum: this.FSVolumeRefNum}, {ioFRefNum: this.FSIORefNum}, {ioFVersNum: this.SInt8}, {filler1: this.SInt8}, {ioFDirIndex: this.SInt16}, {ioFlAttrib: this.SInt8}, {ioFlVersNum: this.SInt8}, {ioFlFndrInfo: this.FInfo}, {ioDirID: this.SInt32}, {ioFlStBlk: this.UInt16}, {ioFlLgLen: this.SInt32}, {ioFlPyLen: this.SInt32}, {ioFlRStBlk: this.UInt16}, {ioFlRLgLen: this.SInt32}, {ioFlRPyLen: this.SInt32}, {ioFlCrDat: this.UInt32}, {ioFlMdDat: this.UInt32}]);
    this.HFileParamPtr = this.HFileParam.ptr;
    this.HVolumeParam = new ctypes.StructType("HVolumeParam", [{qLink: this.QElemPtr}, {qType: this.SInt16}, {ioTrap: this.SInt16}, {ioCmdAddr: this.Ptr}, {ioCompletion: this.IOCompletionUPP}, {ioResult: this.OSErr}, {ioNamePtr: this.StringPtr}, {ioVRefNum: this.FSVolumeRefNum}, {filler2: this.SInt32}, {ioVolIndex: this.SInt16}, {ioVCrDate: this.UInt32}, {ioVLsMod: this.UInt32}, {ioVAtrb: this.SInt16}, {ioVNmFls: this.UInt16}, {ioVBitMap: this.UInt16}, {ioAllocPtr: this.UInt16}, {ioVNmAlBlks: this.UInt16}, {ioVAlBlkSiz: this.UInt32}, {ioVClpSiz: this.UInt32}, {ioAlBlSt: this.UInt16}, {ioVNxtCNID: this.UInt32}, {ioVFrBlk: this.UInt16}, {ioVSigWord: this.UInt16}, {ioVDrvInfo: this.SInt16}, {ioVDRefNum: this.FSIORefNum}, {ioVFSID: this.SInt16}, {ioVBkUp: this.UInt32}, {ioVSeqNum: this.SInt16}, {ioVWrCnt: this.UInt32}, {ioVFilCnt: this.UInt32}, {ioVDirCnt: this.UInt32}, {ioVFndrInfo: this.SInt32.array(8)}]);
    this.HVolumeParamPtr = this.HVolumeParam.ptr;
    this.XIOParam = new ctypes.StructType("XIOParam", [{qLink: this.QElemPtr}, {qType: this.SInt16}, {ioTrap: this.SInt16}, {ioCmdAddr: this.Ptr}, {ioCompletion: this.IOCompletionUPP}, {ioResult: this.OSErr}, {ioNamePtr: this.StringPtr}, {ioVRefNum: this.FSVolumeRefNum}, {ioRefNum: this.FSIORefNum}, {ioVersNum: this.SInt8}, {ioPermssn: this.SInt8}, {ioMisc: this.Ptr}, {ioBuffer: this.Ptr}, {ioReqCount: this.SInt32}, {ioActCount: this.SInt32}, {ioPosMode: this.SInt16}, {ioWPosOffset: this.wide}]);
    this.XIOParamPtr = this.XIOParam.ptr;
    this.XVolumeParam = new ctypes.StructType("XVolumeParam", [{qLink: this.QElemPtr}, {qType: this.SInt16}, {ioTrap: this.SInt16}, {ioCmdAddr: this.Ptr}, {ioCompletion: this.IOCompletionUPP}, {ioResult: this.OSErr}, {ioNamePtr: this.StringPtr}, {ioVRefNum: this.FSVolumeRefNum}, {ioXVersion: this.UInt32}, {ioVolIndex: this.SInt16}, {ioVCrDate: this.UInt32}, {ioVLsMod: this.UInt32}, {ioVAtrb: this.SInt16}, {ioVNmFls: this.UInt16}, {ioVBitMap: this.UInt16}, {ioAllocPtr: this.UInt16}, {ioVNmAlBlks: this.UInt16}, {ioVAlBlkSiz: this.UInt32}, {ioVClpSiz: this.UInt32}, {ioAlBlSt: this.UInt16}, {ioVNxtCNID: this.UInt32}, {ioVFrBlk: this.UInt16}, {ioVSigWord: this.UInt16}, {ioVDrvInfo: this.SInt16}, {ioVDRefNum: this.SInt16}, {ioVFSID: this.SInt16}, {ioVBkUp: this.UInt32}, {ioVSeqNum: this.SInt16}, {ioVWrCnt: this.UInt32}, {ioVFilCnt: this.UInt32}, {ioVDirCnt: this.UInt32}, {ioVFndrInfo: this.SInt32.array(8)}, {ioVTotalBytes: this.UInt64}, {ioVFreeBytes: this.UInt64}]);
    this.XVolumeParamPtr = this.XVolumeParam.ptr;
    this.AccessParam = new ctypes.StructType("AccessParam", [{qLink: this.QElemPtr}, {qType: this.SInt16}, {ioTrap: this.SInt16}, {ioCmdAddr: this.Ptr}, {ioCompletion: this.IOCompletionUPP}, {ioResult: this.OSErr}, {ioNamePtr: this.StringPtr}, {ioVRefNum: this.FSVolumeRefNum}, {ioRefNum: this.FSIORefNum}, {ioDenyModes: this.SInt16}, {filler4: this.SInt16}, {filler5: this.SInt8}, {ioACUser: this.SInt8}, {filler6: this.SInt32}, {ioACOwnerID: this.SInt32}, {ioACGroupID: this.SInt32}, {ioACAccess: this.SInt32}, {ioDirID: this.SInt32}]);
    this.AccessParamPtr = this.AccessParam.ptr;
    this.ObjParam = new ctypes.StructType("ObjParam", [{qLink: this.QElemPtr}, {qType: this.SInt16}, {ioTrap: this.SInt16}, {ioCmdAddr: this.Ptr}, {ioCompletion: this.IOCompletionUPP}, {ioResult: this.OSErr}, {ioNamePtr: this.StringPtr}, {ioVRefNum: this.FSVolumeRefNum}, {filler7: this.SInt16}, {ioObjType: this.SInt16}, {ioObjNamePtr: this.StringPtr}, {ioObjID: this.SInt32}]);
    this.ObjParamPtr = this.ObjParam.ptr;
    this.CopyParam = new ctypes.StructType("CopyParam", [{qLink: this.QElemPtr}, {qType: this.SInt16}, {ioTrap: this.SInt16}, {ioCmdAddr: this.Ptr}, {ioCompletion: this.IOCompletionUPP}, {ioResult: this.OSErr}, {ioNamePtr: this.StringPtr}, {ioVRefNum: this.FSVolumeRefNum}, {ioDstVRefNum: this.FSVolumeRefNum}, {filler8: this.SInt16}, {ioNewName: this.StringPtr}, {ioCopyName: this.StringPtr}, {ioNewDirID: this.SInt32}, {filler14: this.SInt32}, {filler15: this.SInt32}, {ioDirID: this.SInt32}]);
    this.CopyParamPtr = this.CopyParam.ptr;
    this.WDParam = new ctypes.StructType("WDParam", [{qLink: this.QElemPtr}, {qType: this.SInt16}, {ioTrap: this.SInt16}, {ioCmdAddr: this.Ptr}, {ioCompletion: this.IOCompletionUPP}, {ioResult: this.OSErr}, {ioNamePtr: this.StringPtr}, {ioVRefNum: this.FSVolumeRefNum}, {ioWDCreated: this.SInt16}, {ioWDIndex: this.SInt16}, {ioWDProcID: this.SInt32}, {ioWDVRefNum: this.FSVolumeRefNum}, {filler10: this.SInt16}, {filler11: this.SInt32}, {filler12: this.SInt32}, {filler13: this.SInt32}, {ioWDDirID: this.SInt32}]);
    this.WDParamPtr = this.WDParam.ptr;
    this.FIDParam = new ctypes.StructType("FIDParam", [{qLink: this.QElemPtr}, {qType: this.SInt16}, {ioTrap: this.SInt16}, {ioCmdAddr: this.Ptr}, {ioCompletion: this.IOCompletionUPP}, {ioResult: this.OSErr}, {ioNamePtr: this.StringPtr}, {ioVRefNum: this.FSVolumeRefNum}, {filler14: this.SInt32}, {ioDestNamePtr: this.StringPtr}, {filler15: this.SInt32}, {ioDestDirID: this.SInt32}, {filler16: this.SInt32}, {filler17: this.SInt32}, {ioSrcDirID: this.SInt32}, {filler18: this.SInt16}, {ioFileID: this.SInt32}]);
    this.FIDParamPtr = this.FIDParam.ptr;
    this.ForeignPrivParam = new ctypes.StructType("ForeignPrivParam", [{qLink: this.QElemPtr}, {qType: this.SInt16}, {ioTrap: this.SInt16}, {ioCmdAddr: this.Ptr}, {ioCompletion: this.IOCompletionUPP}, {ioResult: this.OSErr}, {ioNamePtr: this.StringPtr}, {ioVRefNum: this.FSVolumeRefNum}, {ioFiller21: this.SInt32}, {ioFiller22: this.SInt32}, {ioForeignPrivBuffer: this.Ptr}, {ioForeignPrivActCount: this.SInt32}, {ioForeignPrivReqCount: this.SInt32}, {ioFiller23: this.SInt32}, {ioForeignPrivDirID: this.SInt32}, {ioForeignPrivInfo1: this.SInt32}, {ioForeignPrivInfo2: this.SInt32}, {ioForeignPrivInfo3: this.SInt32}, {ioForeignPrivInfo4: this.SInt32}]);
    this.ForeignPrivParamPtr = this.ForeignPrivParam.ptr;
    this.CSParam = new ctypes.StructType("CSParam", [{qLink: this.QElemPtr}, {qType: this.SInt16}, {ioTrap: this.SInt16}, {ioCmdAddr: this.Ptr}, {ioCompletion: this.IOCompletionUPP}, {ioResult: this.OSErr}, {ioNamePtr: this.StringPtr}, {ioVRefNum: this.FSVolumeRefNum}, {ioMatchPtr: this.FSSpecPtr}, {ioReqMatchCount: this.SInt32}, {ioActMatchCount: this.SInt32}, {ioSearchBits: this.SInt32}, {ioSearchInfo1: this.CInfoPBPtr}, {ioSearchInfo2: this.CInfoPBPtr}, {ioSearchTime: this.SInt32}, {ioCatPosition: this.CatPositionRec}, {ioOptBuffer: this.Ptr}, {ioOptBufSize: this.SInt32}]);
    this.CSParamPtr = this.CSParam.ptr;
    this.HParamBlockRec = new ctypes.StructType("HParamBlockRec", [{ioParam: this.HIOParam}, {fileParam: this.HFileParam}, {volumeParam: this.HVolumeParam}, {accessParam: this.AccessParam}, {objParam: this.ObjParam}, {copyParam: this.CopyParam}, {wdParam: this.WDParam}, {fidParam: this.FIDParam}, {csParam: this.CSParam}, {foreignPrivParam: this.ForeignPrivParam}]);
    this.HParmBlkPtr = this.HParamBlockRec.ptr;
    this.CMovePBRec = new ctypes.StructType("CMovePBRec", [{qLink: this.QElemPtr}, {qType: this.SInt16}, {ioTrap: this.SInt16}, {ioCmdAddr: this.Ptr}, {ioCompletion: this.IOCompletionUPP}, {ioResult: this.OSErr}, {ioNamePtr: this.StringPtr}, {ioVRefNum: this.FSVolumeRefNum}, {filler1: this.SInt32}, {ioNewName: this.StringPtr}, {filler2: this.SInt32}, {ioNewDirID: this.SInt32}, {filler3: this.SInt32.array(2)}, {ioDirID: this.SInt32}]);
    this.CMovePBPtr = this.CMovePBRec.ptr;
    this.WDPBRec = new ctypes.StructType("WDPBRec", [{qLink: this.QElemPtr}, {qType: this.SInt16}, {ioTrap: this.SInt16}, {ioCmdAddr: this.Ptr}, {ioCompletion: this.IOCompletionUPP}, {ioResult: this.OSErr}, {ioNamePtr: this.StringPtr}, {ioVRefNum: this.FSVolumeRefNum}, {filler1: this.SInt16}, {ioWDIndex: this.SInt16}, {ioWDProcID: this.SInt32}, {ioWDVRefNum: this.FSVolumeRefNum}, {filler2: this.SInt16.array(7)}, {ioWDDirID: this.SInt32}]);
    this.WDPBPtr = this.WDPBRec.ptr;
    this.FCBPBRec = new ctypes.StructType("FCBPBRec", [{qLink: this.QElemPtr}, {qType: this.SInt16}, {ioTrap: this.SInt16}, {ioCmdAddr: this.Ptr}, {ioCompletion: this.IOCompletionUPP}, {ioResult: this.OSErr}, {ioNamePtr: this.StringPtr}, {ioVRefNum: this.FSVolumeRefNum}, {ioRefNum: this.FSIORefNum}, {filler: this.SInt16}, {ioFCBIndx: this.SInt16}, {filler1: this.SInt16}, {ioFCBFlNm: this.SInt32}, {ioFCBFlags: this.SInt16}, {ioFCBStBlk: this.UInt16}, {ioFCBEOF: this.SInt32}, {ioFCBPLen: this.SInt32}, {ioFCBCrPs: this.SInt32}, {ioFCBVRefNum: this.FSVolumeRefNum}, {ioFCBClpSiz: this.SInt32}, {ioFCBParID: this.SInt32}]);
    this.FCBPBPtr = this.FCBPBRec.ptr;
    this.VCB = new ctypes.StructType("VCB", [{qLink: this.QElemPtr}, {qType: this.SInt16}, {vcbFlags: this.SInt16}, {vcbSigWord: this.UInt16}, {vcbCrDate: this.UInt32}, {vcbLsMod: this.UInt32}, {vcbAtrb: this.SInt16}, {vcbNmFls: this.UInt16}, {vcbVBMSt: this.SInt16}, {vcbAllocPtr: this.SInt16}, {vcbNmAlBlks: this.UInt16}, {vcbAlBlkSiz: this.SInt32}, {vcbClpSiz: this.SInt32}, {vcbAlBlSt: this.SInt16}, {vcbNxtCNID: this.SInt32}, {vcbFreeBks: this.UInt16}, {vcbVN: this.Str27}, {vcbDrvNum: this.SInt16}, {vcbDRefNum: this.FSIORefNum}, {vcbFSID: this.SInt16}, {vcbVRefNum: this.FSVolumeRefNum}, {vcbMAdr: this.Ptr}, {vcbBufAdr: this.Ptr}, {vcbMLen: this.SInt16}, {vcbDirIndex: this.SInt16}, {vcbDirBlk: this.SInt16}, {vcbVolBkUp: this.UInt32}, {vcbVSeqNum: this.UInt16}, {vcbWrCnt: this.SInt32}, {vcbXTClpSiz: this.SInt32}, {vcbCTClpSiz: this.SInt32}, {vcbNmRtDirs: this.UInt16}, {vcbFilCnt: this.SInt32}, {vcbDirCnt: this.SInt32}, {vcbFndrInfo: this.SInt32.array(8)}, {vcbVCSize: this.UInt16}, {vcbVBMCSiz: this.UInt16}, {vcbCtlCSiz: this.UInt16}, {vcbXTAlBlks: this.UInt16}, {vcbCTAlBlks: this.UInt16}, {vcbXTRef: this.SInt16}, {vcbCTRef: this.SInt16}, {vcbCtlBuf: this.Ptr}, {vcbDirIDM: this.SInt32}, {vcbOffsM: this.SInt16}]);
    this.VCBPtr = this.VCB.ptr;
    this.DrvQEl = new ctypes.StructType("DrvQEl", [{qLink: this.QElemPtr}, {qType: this.SInt16}, {dQDrive: this.SInt16}, {dQRefNum: this.SInt16}, {dQFSID: this.SInt16}, {dQDrvSz: this.UInt16}, {dQDrvSz2: this.UInt16}]);
    this.DrvQElPtr = this.DrvQEl.ptr;
    this.FSPermissionInfo = new ctypes.StructType("FSPermissionInfo", [{userID: this.UInt32}, {groupID: this.UInt32}, {reserved1: this.UInt8}, {userAccess: this.UInt8}, {mode: this.UInt16}, {fileSec: this.FSFileSecurityRef}]);
    this.FSCatalogInfoBitmap = this.UInt32;
    this.kFSCatInfoNone = 0;
    this.kFSCatInfoTextEncoding = 1;
    this.kFSCatInfoNodeFlags = 2;
    this.kFSCatInfoVolume = 4;
    this.kFSCatInfoParentDirID = 8;
    this.kFSCatInfoNodeID = 16;
    this.kFSCatInfoCreateDate = 32;
    this.kFSCatInfoContentMod = 64;
    this.kFSCatInfoAttrMod = 128;
    this.kFSCatInfoAccessDate = 256;
    this.kFSCatInfoBackupDate = 512;
    this.kFSCatInfoPermissions = 1024;
    this.kFSCatInfoFinderInfo = 2048;
    this.kFSCatInfoFinderXInfo = 4096;
    this.kFSCatInfoValence = 8192;
    this.kFSCatInfoDataSizes = 16384;
    this.kFSCatInfoRsrcSizes = 32768;
    this.kFSCatInfoSharingFlags = 65536;
    this.kFSCatInfoUserPrivs = 131072;
    this.kFSCatInfoUserAccess = 524288;
    this.kFSCatInfoSetOwnership = 1048576;
    this.kFSCatInfoFSFileSecurityRef = 4194304;
    this.kFSCatInfoAllDates = 992;
    this.kFSCatInfoGettableInfo = 262143;
    this.kFSCatInfoSettableInfo = 8163;
    this.kFSCatInfoReserved = -262144;
    this.kFSNodeLockedBit = 0;
    this.kFSNodeLockedMask = 1;
    this.kFSNodeResOpenBit = 2;
    this.kFSNodeResOpenMask = 4;
    this.kFSNodeDataOpenBit = 3;
    this.kFSNodeDataOpenMask = 8;
    this.kFSNodeIsDirectoryBit = 4;
    this.kFSNodeIsDirectoryMask = 16;
    this.kFSNodeCopyProtectBit = 6;
    this.kFSNodeCopyProtectMask = 64;
    this.kFSNodeForkOpenBit = 7;
    this.kFSNodeForkOpenMask = 128;
    this.kFSNodeHardLinkBit = 8;
    this.kFSNodeHardLinkMask = 256;
    this.kFSNodeInSharedBit = 2;
    this.kFSNodeInSharedMask = 4;
    this.kFSNodeIsMountedBit = 3;
    this.kFSNodeIsMountedMask = 8;
    this.kFSNodeIsSharePointBit = 5;
    this.kFSNodeIsSharePointMask = 32;
    this.FSCatalogInfo = new ctypes.StructType("FSCatalogInfo", [{nodeFlags: this.UInt16}, {volume: this.FSVolumeRefNum}, {parentDirID: this.UInt32}, {nodeID: this.UInt32}, {sharingFlags: this.UInt8}, {userPrivileges: this.UInt8}, {reserved1: this.UInt8}, {reserved2: this.UInt8}, {createDate: this.UTCDateTime}, {contentModDate: this.UTCDateTime}, {attributeModDate: this.UTCDateTime}, {accessDate: this.UTCDateTime}, {backupDate: this.UTCDateTime}, {permissions: this.UInt32.array(4)}, {finderInfo: this.UInt8.array(16)}, {extFinderInfo: this.UInt8.array(16)}, {dataLogicalSize: this.UInt64}, {dataPhysicalSize: this.UInt64}, {rsrcLogicalSize: this.UInt64}, {rsrcPhysicalSize: this.UInt64}, {valence: this.UInt32}, {textEncodingHint: this.TextEncoding}]);
    this.FSCatalogInfoPtr = this.FSCatalogInfo.ptr;
    this.FSRefParam = new ctypes.StructType("FSRefParam", [{qLink: this.QElemPtr}, {qType: this.SInt16}, {ioTrap: this.SInt16}, {ioCmdAddr: this.Ptr}, {ioCompletion: this.IOCompletionUPP}, {ioResult: this.OSErr}, {ioNamePtr: this.ConstStringPtr}, {ioVRefNum: this.FSVolumeRefNum}, {reserved1: this.SInt16}, {reserved2: this.UInt8}, {reserved3: this.UInt8}, {ref: this.FSRef.ptr}, {whichInfo: this.FSCatalogInfoBitmap}, {catInfo: this.FSCatalogInfo.ptr}, {nameLength: this.UniCharCount}, {name: this.UniChar.ptr}, {ioDirID: this.UInt32}, {spec: this.FSSpecPtr}, {parentRef: this.FSRef.ptr}, {newRef: this.FSRef.ptr}, {textEncodingHint: this.TextEncoding}, {outName: this.HFSUniStr255.ptr}]);
    this.FSRefParamPtr = this.FSRefParam.ptr;
    this.FSRefForkIOParam = new ctypes.StructType("FSRefForkIOParam", [{qLink: this.QElemPtr}, {qType: this.SInt16}, {ioTrap: this.SInt16}, {ioCmdAddr: this.Ptr}, {ioCompletion: this.IOCompletionUPP}, {ioResult: this.OSErr}, {parentRef: this.FSRef.ptr}, {nameLength: this.UniCharCount}, {name: this.UniChar.ptr}, {whichInfo: this.FSCatalogInfoBitmap}, {catInfo: this.FSCatalogInfo.ptr}, {forkNameLength: this.UniCharCount}, {forkName: this.UniChar.ptr}, {permissions: this.SInt8}, {reserved1: this.UInt8}, {forkRefNum: this.FSIORefNum}, {newRef: this.FSRef.ptr}]);
    this.FSRefForkIOParamPtr = this.FSRefForkIOParam.ptr;
    this.OpaqueFSIterator = new ctypes.StructType("OpaqueFSIterator");
    this.FSIterator = this.OpaqueFSIterator.ptr;
    this.kFSIterateFlat = 0;
    this.kFSIterateSubtree = 1;
    this.kFSIterateDelete = 2;
    this.kFSIterateReserved = -4;
    this.FSIteratorFlags = this.OptionBits;
    this.FSSearchParams = new ctypes.StructType("FSSearchParams", [{searchTime: this.Duration}, {searchBits: this.OptionBits}, {searchNameLength: this.UniCharCount}, {searchName: this.UniChar.ptr}, {searchInfo1: this.FSCatalogInfo.ptr}, {searchInfo2: this.FSCatalogInfo.ptr}]);
    this.FSSearchParamsPtr = this.FSSearchParams.ptr;
    this.FSCatalogBulkParam = new ctypes.StructType("FSCatalogBulkParam", [{qLink: this.QElemPtr}, {qType: this.SInt16}, {ioTrap: this.SInt16}, {ioCmdAddr: this.Ptr}, {ioCompletion: this.IOCompletionUPP}, {ioResult: this.OSErr}, {containerChanged: this.Boolean}, {reserved: this.UInt8}, {iteratorFlags: this.FSIteratorFlags}, {iterator: this.FSIterator}, {container: this.FSRef.ptr}, {maximumItems: this.ItemCount}, {actualItems: this.ItemCount}, {whichInfo: this.FSCatalogInfoBitmap}, {catalogInfo: this.FSCatalogInfo.ptr}, {refs: this.FSRef.ptr}, {specs: this.FSSpecPtr}, {names: this.HFSUniStr255.ptr}, {searchParams: this.FSSearchParams.ptr}]);
    this.FSCatalogBulkParamPtr = this.FSCatalogBulkParam.ptr;
    this.FSAllocationFlags = this.UInt16;
    this.kFSAllocDefaultFlags = 0;
    this.kFSAllocAllOrNothingMask = 1;
    this.kFSAllocContiguousMask = 2;
    this.kFSAllocNoRoundUpMask = 4;
    this.kFSAllocReservedMask = 65528;
    this.FSForkIOParam = new ctypes.StructType("FSForkIOParam", [{qLink: this.QElemPtr}, {qType: this.SInt16}, {ioTrap: this.SInt16}, {ioCmdAddr: this.Ptr}, {ioCompletion: this.IOCompletionUPP}, {ioResult: this.OSErr}, {reserved1: ctypes.void_t.ptr}, {reserved2: this.SInt16}, {forkRefNum: this.FSIORefNum}, {reserved3: this.UInt8}, {permissions: this.SInt8}, {ref: this.FSRef.ptr}, {buffer: this.Ptr}, {requestCount: this.UInt32}, {actualCount: this.UInt32}, {positionMode: this.UInt16}, {positionOffset: this.SInt64}, {allocationFlags: this.FSAllocationFlags}, {allocationAmount: this.UInt64}, {forkNameLength: this.UniCharCount}, {forkName: this.UniChar.ptr}, {forkIterator: this.CatPositionRec}, {outForkName: this.HFSUniStr255.ptr}]);
    this.FSForkIOParamPtr = this.FSForkIOParam.ptr;
    this.FSForkInfoFlags = this.UInt8;
    this.FSForkInfo = new ctypes.StructType("FSForkInfo", [{flags: this.FSForkInfoFlags}, {permissions: this.SInt8}, {volume: this.FSVolumeRefNum}, {reserved2: this.UInt32}, {nodeID: this.UInt32}, {forkID: this.UInt32}, {currentPosition: this.UInt64}, {logicalEOF: this.UInt64}, {physicalEOF: this.UInt64}, {process: this.UInt64}]);
    this.FSForkInfoPtr = this.FSForkInfo.ptr;
    this.FSForkCBInfoParam = new ctypes.StructType("FSForkCBInfoParam", [{qLink: this.QElemPtr}, {qType: this.SInt16}, {ioTrap: this.SInt16}, {ioCmdAddr: this.Ptr}, {ioCompletion: this.IOCompletionUPP}, {ioResult: this.OSErr}, {desiredRefNum: this.FSIORefNum}, {volumeRefNum: this.FSVolumeRefNum}, {iterator: this.FSIORefNum}, {actualRefNum: this.FSVolumeRefNum}, {ref: this.FSRef.ptr}, {forkInfo: this.FSForkInfo.ptr}, {forkName: this.HFSUniStr255.ptr}]);
    this.FSForkCBInfoParamPtr = this.FSForkCBInfoParam.ptr;
    this.FSRangeLockParam = new ctypes.StructType("FSRangeLockParam", [{qLink: this.QElemPtr}, {qType: this.SInt16}, {ioTrap: this.SInt16}, {ioCmdAddr: this.Ptr}, {ioCompletion: this.IOCompletionUPP}, {ioResult: this.OSErr}, {forkRefNum: this.FSIORefNum}, {requestCount: this.UInt64}, {positionMode: this.UInt16}, {positionOffset: this.SInt64}, {rangeStart: this.UInt64}]);
    this.FSRangeLockParamPtr = this.FSRangeLockParam.ptr;
    this.FSVolumeInfoBitmap = this.UInt32;
    this.kFSVolInfoNone = 0;
    this.kFSVolInfoCreateDate = 1;
    this.kFSVolInfoModDate = 2;
    this.kFSVolInfoBackupDate = 4;
    this.kFSVolInfoCheckedDate = 8;
    this.kFSVolInfoFileCount = 16;
    this.kFSVolInfoDirCount = 32;
    this.kFSVolInfoSizes = 64;
    this.kFSVolInfoBlocks = 128;
    this.kFSVolInfoNextAlloc = 256;
    this.kFSVolInfoRsrcClump = 512;
    this.kFSVolInfoDataClump = 1024;
    this.kFSVolInfoNextID = 2048;
    this.kFSVolInfoFinderInfo = 4096;
    this.kFSVolInfoFlags = 8192;
    this.kFSVolInfoFSInfo = 16384;
    this.kFSVolInfoDriveInfo = 32768;
    this.kFSVolInfoGettableInfo = 65535;
    this.kFSVolInfoSettableInfo = 12292;
    this.kFSVolFlagDefaultVolumeBit = 5;
    this.kFSVolFlagDefaultVolumeMask = 32;
    this.kFSVolFlagFilesOpenBit = 6;
    this.kFSVolFlagFilesOpenMask = 64;
    this.kFSVolFlagHardwareLockedBit = 7;
    this.kFSVolFlagHardwareLockedMask = 128;
    this.kFSVolFlagJournalingActiveBit = 14;
    this.kFSVolFlagJournalingActiveMask = 16384;
    this.kFSVolFlagSoftwareLockedBit = 15;
    this.kFSVolFlagSoftwareLockedMask = 32768;
    this.FSVolumeInfo = new ctypes.StructType("FSVolumeInfo", [{createDate: this.UTCDateTime}, {modifyDate: this.UTCDateTime}, {backupDate: this.UTCDateTime}, {checkedDate: this.UTCDateTime}, {fileCount: this.UInt32}, {folderCount: this.UInt32}, {totalBytes: this.UInt64}, {freeBytes: this.UInt64}, {blockSize: this.UInt32}, {totalBlocks: this.UInt32}, {freeBlocks: this.UInt32}, {nextAllocation: this.UInt32}, {rsrcClumpSize: this.UInt32}, {dataClumpSize: this.UInt32}, {nextCatalogID: this.UInt32}, {finderInfo: this.UInt8.array(32)}, {flags: this.UInt16}, {filesystemID: this.UInt16}, {signature: this.UInt16}, {driveNumber: this.UInt16}, {driverRefNum: this.FSIORefNum}]);
    this.FSVolumeInfoPtr = this.FSVolumeInfo.ptr;
    this.FSVolumeInfoParam = new ctypes.StructType("FSVolumeInfoParam", [{qLink: this.QElemPtr}, {qType: this.SInt16}, {ioTrap: this.SInt16}, {ioCmdAddr: this.Ptr}, {ioCompletion: this.IOCompletionUPP}, {ioResult: this.OSErr}, {ioNamePtr: this.StringPtr}, {ioVRefNum: this.FSVolumeRefNum}, {volumeIndex: this.UInt32}, {whichInfo: this.FSVolumeInfoBitmap}, {volumeInfo: this.FSVolumeInfo.ptr}, {volumeName: this.HFSUniStr255.ptr}, {ref: this.FSRef.ptr}]);
    this.FSVolumeInfoParamPtr = this.FSVolumeInfoParam.ptr;
    this.GetVolParmsInfoBuffer = new ctypes.StructType("GetVolParmsInfoBuffer", [{vMVersion: this.SInt16}, {vMAttrib: this.SInt32}, {vMLocalHand: this.Handle}, {vMServerAdr: this.SInt32}, {vMVolumeGrade: this.SInt32}, {vMForeignPrivID: this.SInt16}, {vMExtendedAttributes: this.SInt32}, {vMDeviceID: ctypes.void_t.ptr}, {vMMaxNameLength: this.UniCharCount}]);
    this.VolumeType = this.OSType;
    this.AppleShareMediaType = 1634103405;
    this.VolMountInfoHeader = new ctypes.StructType("VolMountInfoHeader", [{length: this.SInt16}, {media: this.VolumeType}]);
    this.VolMountInfoPtr = this.VolMountInfoHeader.ptr;
    this.VolumeMountInfoHeader = new ctypes.StructType("VolumeMountInfoHeader", [{length: this.SInt16}, {media: this.VolumeType}, {flags: this.SInt16}]);
    this.VolumeMountInfoHeaderPtr = this.VolumeMountInfoHeader.ptr;
    this.volMountNoLoginMsgFlagBit = 0;
    this.volMountNoLoginMsgFlagMask = 1;
    this.volMountExtendedFlagsBit = 7;
    this.volMountExtendedFlagsMask = 128;
    this.volMountInteractBit = 15;
    this.volMountInteractMask = 32768;
    this.volMountChangedBit = 14;
    this.volMountChangedMask = 16384;
    this.volMountFSReservedMask = 255;
    this.volMountSysReservedMask = 65280;
    this.AFPVolMountInfo = new ctypes.StructType("AFPVolMountInfo", [{length: this.SInt16}, {media: this.VolumeType}, {flags: this.SInt16}, {nbpInterval: this.SInt8}, {nbpCount: this.SInt8}, {uamType: this.SInt16}, {zoneNameOffset: this.SInt16}, {serverNameOffset: this.SInt16}, {volNameOffset: this.SInt16}, {userNameOffset: this.SInt16}, {userPasswordOffset: this.SInt16}, {volPasswordOffset: this.SInt16}, {AFPData: ctypes.char.array(144)}]);
    this.AFPVolMountInfoPtr = this.AFPVolMountInfo.ptr;
    this.AFPXVolMountInfo = new ctypes.StructType("AFPXVolMountInfo", [{length: this.SInt16}, {media: this.VolumeType}, {flags: this.SInt16}, {nbpInterval: this.SInt8}, {nbpCount: this.SInt8}, {uamType: this.SInt16}, {zoneNameOffset: this.SInt16}, {serverNameOffset: this.SInt16}, {volNameOffset: this.SInt16}, {userNameOffset: this.SInt16}, {userPasswordOffset: this.SInt16}, {volPasswordOffset: this.SInt16}, {extendedFlags: this.SInt16}, {uamNameOffset: this.SInt16}, {alternateAddressOffset: this.SInt16}, {AFPData: ctypes.char.array(176)}]);
    this.AFPXVolMountInfoPtr = this.AFPXVolMountInfo.ptr;
    this.kAFPExtendedFlagsAlternateAddressMask = 1;
    this.kAFPTagTypeIP = 1;
    this.kAFPTagTypeIPPort = 2;
    this.kAFPTagTypeDDP = 3;
    this.kAFPTagTypeDNS = 4;
    this.kAFPTagLengthIP = 6;
    this.kAFPTagLengthIPPort = 8;
    this.kAFPTagLengthDDP = 6;
    this.AFPTagData = new ctypes.StructType("AFPTagData", [{fLength: this.UInt8}, {fType: this.UInt8}, {fData: this.UInt8.array(1)}]);
    this.AFPAlternateAddress = new ctypes.StructType("AFPAlternateAddress", [{fVersion: this.UInt8}, {fAddressCount: this.UInt8}, {fAddressList: this.UInt8.array(1)}]);
    this.kLargeIconSize = 256;
    this.kLarge4BitIconSize = 512;
    this.kLarge8BitIconSize = 1024;
    this.kSmallIconSize = 64;
    this.kSmall4BitIconSize = 128;
    this.kSmall8BitIconSize = 256;
    // Dropping inline function 'NewIOCompletionUPP'.
    // Dropping inline function 'DisposeIOCompletionUPP'.
    // Dropping inline function 'InvokeIOCompletionUPP'.
    this.kFSReplaceObjectDefaultOptions = 0;
    this.kFSReplaceObjectReplaceMetadata = 1;
    this.kFSReplaceObjectSaveOriginalAsABackup = 2;
    this.kFSReplaceObjectReplacePermissionInfo = 4;
    this.kFSReplaceObjectPreservePermissionInfo = 8;
    this.kFSReplaceObjectDoNotCheckObjectWriteAccess = 16;
    this.kFSPathMakeRefDefaultOptions = 0;
    this.kFSPathMakeRefDoNotFollowLeafSymlink = 1;
    this.FNMessage = this.UInt32;
    this.kFNDirectoryModifiedMessage = 1;
    this.OpaqueFNSubscriptionRef = new ctypes.StructType("OpaqueFNSubscriptionRef");
    this.FNSubscriptionRef = this.OpaqueFNSubscriptionRef.ptr;
    this.kFNNoImplicitAllSubscription = 1;
    this.kFNNotifyInBackground = 2;
    this.FNSubscriptionProcPtr = new ctypes.FunctionType(ctypes.default_abi, ctypes.void_t, [this.FNMessage, this.OptionBits, ctypes.void_t.ptr, this.FNSubscriptionRef]).ptr;
    this.FNSubscriptionUPP = this.FNSubscriptionProcPtr;
    // Dropping inline function 'NewFNSubscriptionUPP'.
    // Dropping inline function 'DisposeFNSubscriptionUPP'.
    // Dropping inline function 'InvokeFNSubscriptionUPP'.
    this.kAsyncMountInProgress = 1;
    this.kAsyncMountComplete = 2;
    this.kAsyncUnmountInProgress = 3;
    this.kAsyncUnmountComplete = 4;
    this.kAsyncEjectInProgress = 5;
    this.kAsyncEjectComplete = 6;
    this.FSMountStatus = this.UInt32;
    this.FSEjectStatus = this.UInt32;
    this.FSUnmountStatus = this.UInt32;
    this.OpaqueFSVolumeOperation = new ctypes.StructType("OpaqueFSVolumeOperation");
    this.FSVolumeOperation = this.OpaqueFSVolumeOperation.ptr;
    this.FSVolumeMountProcPtr = new ctypes.FunctionType(ctypes.default_abi, ctypes.void_t, [this.FSVolumeOperation, ctypes.void_t.ptr, this.OSStatus, this.FSVolumeRefNum]).ptr;
    // Dropping declaration of 'FSVolumeUnmountProcPtr': 'pid_t' defined out of scope
    // Dropping declaration of 'FSVolumeEjectProcPtr': 'pid_t' defined out of scope
    this.FSVolumeMountUPP = this.FSVolumeMountProcPtr;
    this.FSVolumeUnmountUPP = this.FSVolumeUnmountProcPtr;
    this.FSVolumeEjectUPP = this.FSVolumeEjectProcPtr;
    // Dropping inline function 'NewFSVolumeMountUPP'.
    // Dropping inline function 'NewFSVolumeUnmountUPP'.
    // Dropping inline function 'NewFSVolumeEjectUPP'.
    // Dropping inline function 'DisposeFSVolumeMountUPP'.
    // Dropping inline function 'DisposeFSVolumeUnmountUPP'.
    // Dropping inline function 'DisposeFSVolumeEjectUPP'.
    // Dropping inline function 'InvokeFSVolumeMountUPP'.
    // Dropping inline function 'InvokeFSVolumeUnmountUPP'.
    // Dropping inline function 'InvokeFSVolumeEjectUPP'.
    this.kFSMountServerMarkDoNotDisplay = 1;
    this.kFSMountServerMountOnMountDir = 4;
    this.kFSMountServerMountWithoutNotification = 2;
    this.kFSEjectVolumeForceEject = 1;
    this.kFSUnmountVolumeForceUnmount = 1;
    this.__FSFileOperation = new ctypes.StructType("__FSFileOperation");
    this.FSFileOperationRef = this.__FSFileOperation.ptr;
    this.FSFileOperationStage = this.UInt32;
    this.FSFileOperationClientContext = new ctypes.StructType("FSFileOperationClientContext", [{version: this.CFIndex}, {info: ctypes.void_t.ptr}, {retain: this.CFAllocatorRetainCallBack}, {release: this.CFAllocatorReleaseCallBack}, {copyDescription: this.CFAllocatorCopyDescriptionCallBack}]);
    this.FSFileOperationStatusProcPtr = new ctypes.FunctionType(ctypes.default_abi, ctypes.void_t, [this.FSFileOperationRef, this.FSRef.ptr, this.FSFileOperationStage, this.OSStatus, this.CFDictionaryRef, ctypes.void_t.ptr]).ptr;
    this.FSPathFileOperationStatusProcPtr = new ctypes.FunctionType(ctypes.default_abi, ctypes.void_t, [this.FSFileOperationRef, ctypes.char.ptr, this.FSFileOperationStage, this.OSStatus, this.CFDictionaryRef, ctypes.void_t.ptr]).ptr;
    this.kFSFileOperationDefaultOptions = 0;
    this.kFSFileOperationOverwrite = 1;
    this.kFSFileOperationSkipSourcePermissionErrors = 2;
    this.kFSFileOperationDoNotMoveAcrossVolumes = 4;
    this.kFSFileOperationSkipPreflight = 8;
    this.kFSOperationStageUndefined = 0;
    this.kFSOperationStagePreflighting = 1;
    this.kFSOperationStageRunning = 2;
    this.kFSOperationStageComplete = 3;
    this.pleaseCacheBit = 4;
    this.pleaseCacheMask = 16;
    this.noCacheBit = 5;
    this.noCacheMask = 32;
    this.rdVerifyBit = 6;
    this.rdVerifyMask = 64;
    this.rdVerify = 64;
    this.forceReadBit = 6;
    this.forceReadMask = 64;
    this.newLineBit = 7;
    this.newLineMask = 128;
    this.newLineCharMask = 65280;
    this.kOwnerID2Name = 1;
    this.kGroupID2Name = 2;
    this.kOwnerName2ID = 3;
    this.kGroupName2ID = 4;
    this.kReturnNextUser = 1;
    this.kReturnNextGroup = 2;
    this.kReturnNextUG = 3;
    this.kVCBFlagsIdleFlushBit = 3;
    this.kVCBFlagsIdleFlushMask = 8;
    this.kVCBFlagsHFSPlusAPIsBit = 4;
    this.kVCBFlagsHFSPlusAPIsMask = 16;
    this.kVCBFlagsHardwareGoneBit = 5;
    this.kVCBFlagsHardwareGoneMask = 32;
    this.kVCBFlagsVolumeDirtyBit = 15;
    this.kVCBFlagsVolumeDirtyMask = 32768;
    this.kioVAtrbDefaultVolumeBit = 5;
    this.kioVAtrbDefaultVolumeMask = 32;
    this.kioVAtrbFilesOpenBit = 6;
    this.kioVAtrbFilesOpenMask = 64;
    this.kioVAtrbHardwareLockedBit = 7;
    this.kioVAtrbHardwareLockedMask = 128;
    this.kioVAtrbSoftwareLockedBit = 15;
    this.kioVAtrbSoftwareLockedMask = 32768;
    this.kioFlAttribLockedBit = 0;
    this.kioFlAttribLockedMask = 1;
    this.kioFlAttribResOpenBit = 2;
    this.kioFlAttribResOpenMask = 4;
    this.kioFlAttribDataOpenBit = 3;
    this.kioFlAttribDataOpenMask = 8;
    this.kioFlAttribDirBit = 4;
    this.kioFlAttribDirMask = 16;
    this.ioDirFlg = 4;
    this.ioDirMask = 16;
    this.kioFlAttribCopyProtBit = 6;
    this.kioFlAttribCopyProtMask = 64;
    this.kioFlAttribFileOpenBit = 7;
    this.kioFlAttribFileOpenMask = 128;
    this.kioFlAttribInSharedBit = 2;
    this.kioFlAttribInSharedMask = 4;
    this.kioFlAttribMountedBit = 3;
    this.kioFlAttribMountedMask = 8;
    this.kioFlAttribSharePointBit = 5;
    this.kioFlAttribSharePointMask = 32;
    this.kioFCBWriteBit = 8;
    this.kioFCBWriteMask = 256;
    this.kioFCBResourceBit = 9;
    this.kioFCBResourceMask = 512;
    this.kioFCBWriteLockedBit = 10;
    this.kioFCBWriteLockedMask = 1024;
    this.kioFCBLargeFileBit = 11;
    this.kioFCBLargeFileMask = 2048;
    this.kioFCBSharedWriteBit = 12;
    this.kioFCBSharedWriteMask = 4096;
    this.kioFCBFileLockedBit = 13;
    this.kioFCBFileLockedMask = 8192;
    this.kioFCBOwnClumpBit = 14;
    this.kioFCBOwnClumpMask = 16384;
    this.kioFCBModifiedBit = 15;
    this.kioFCBModifiedMask = 32768;
    this.kForkInfoFlagsWriteBit = 0;
    this.kForkInfoFlagsWriteMask = 1;
    this.kForkInfoFlagsResourceBit = 1;
    this.kForkInfoFlagsResourceMask = 2;
    this.kForkInfoFlagsWriteLockedBit = 2;
    this.kForkInfoFlagsWriteLockedMask = 4;
    this.kForkInfoFlagsLargeFileBit = 3;
    this.kForkInfoFlagsLargeFileMask = 8;
    this.kForkInfoFlagsSharedWriteBit = 4;
    this.kForkInfoFlagsSharedWriteMask = 16;
    this.kForkInfoFlagsFileLockedBit = 5;
    this.kForkInfoFlagsFileLockedMask = 32;
    this.kForkInfoFlagsOwnClumpBit = 6;
    this.kForkInfoFlagsOwnClumpMask = 64;
    this.kForkInfoFlagsModifiedBit = 7;
    this.kForkInfoFlagsModifiedMask = 128;
    this.kioACUserNoSeeFolderBit = 0;
    this.kioACUserNoSeeFolderMask = 1;
    this.kioACUserNoSeeFilesBit = 1;
    this.kioACUserNoSeeFilesMask = 2;
    this.kioACUserNoMakeChangesBit = 2;
    this.kioACUserNoMakeChangesMask = 4;
    this.kioACUserNotOwnerBit = 7;
    this.kioACUserNotOwnerMask = 128;
    this.kioACAccessOwnerBit = 31;
    this.kioACAccessOwnerMask = -2147483648;
    this.kioACAccessBlankAccessBit = 28;
    this.kioACAccessBlankAccessMask = 268435456;
    this.kioACAccessUserWriteBit = 26;
    this.kioACAccessUserWriteMask = 67108864;
    this.kioACAccessUserReadBit = 25;
    this.kioACAccessUserReadMask = 33554432;
    this.kioACAccessUserSearchBit = 24;
    this.kioACAccessUserSearchMask = 16777216;
    this.kioACAccessEveryoneWriteBit = 18;
    this.kioACAccessEveryoneWriteMask = 262144;
    this.kioACAccessEveryoneReadBit = 17;
    this.kioACAccessEveryoneReadMask = 131072;
    this.kioACAccessEveryoneSearchBit = 16;
    this.kioACAccessEveryoneSearchMask = 65536;
    this.kioACAccessGroupWriteBit = 10;
    this.kioACAccessGroupWriteMask = 1024;
    this.kioACAccessGroupReadBit = 9;
    this.kioACAccessGroupReadMask = 512;
    this.kioACAccessGroupSearchBit = 8;
    this.kioACAccessGroupSearchMask = 256;
    this.kioACAccessOwnerWriteBit = 2;
    this.kioACAccessOwnerWriteMask = 4;
    this.kioACAccessOwnerReadBit = 1;
    this.kioACAccessOwnerReadMask = 2;
    this.kioACAccessOwnerSearchBit = 0;
    this.kioACAccessOwnerSearchMask = 1;
    this.kfullPrivileges = 458759;
    this.kownerPrivileges = 7;
    this.kLargeIcon = 1;
    this.kLarge4BitIcon = 2;
    this.kLarge8BitIcon = 3;
    this.kSmallIcon = 4;
    this.kSmall4BitIcon = 5;
    this.kSmall8BitIcon = 6;
    this.kicnsIconFamily = 239;
}

// Based on /System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/UnicodeConverter.h
function UnicodeConverter_h(lib) {
    TextCommon_h.call(this, lib);
    MacTypes_h.call(this, lib);

    if (this._UNICODECONVERTER_H)
        return;
    this._UNICODECONVERTER_H = true;

    this.OpaqueTextToUnicodeInfo = new ctypes.StructType("OpaqueTextToUnicodeInfo");
    this.TextToUnicodeInfo = this.OpaqueTextToUnicodeInfo.ptr;
    this.OpaqueUnicodeToTextInfo = new ctypes.StructType("OpaqueUnicodeToTextInfo");
    this.UnicodeToTextInfo = this.OpaqueUnicodeToTextInfo.ptr;
    this.OpaqueUnicodeToTextRunInfo = new ctypes.StructType("OpaqueUnicodeToTextRunInfo");
    this.UnicodeToTextRunInfo = this.OpaqueUnicodeToTextRunInfo.ptr;
    this.ConstTextToUnicodeInfo = this.TextToUnicodeInfo;
    this.ConstUnicodeToTextInfo = this.UnicodeToTextInfo;
    this.UnicodeMapVersion = this.SInt32;
    this.kUnicodeUseLatestMapping = -1;
    this.kUnicodeUseHFSPlusMapping = 4;
    this.UnicodeMapping = new ctypes.StructType("UnicodeMapping", [{unicodeEncoding: this.TextEncoding}, {otherEncoding: this.TextEncoding}, {mappingVersion: this.UnicodeMapVersion}]);
    this.UnicodeMappingPtr = this.UnicodeMapping.ptr;
    this.ConstUnicodeMappingPtr = this.UnicodeMapping.ptr;
    this.kUnicodeUseFallbacksBit = 0;
    this.kUnicodeKeepInfoBit = 1;
    this.kUnicodeDirectionalityBits = 2;
    this.kUnicodeVerticalFormBit = 4;
    this.kUnicodeLooseMappingsBit = 5;
    this.kUnicodeStringUnterminatedBit = 6;
    this.kUnicodeTextRunBit = 7;
    this.kUnicodeKeepSameEncodingBit = 8;
    this.kUnicodeForceASCIIRangeBit = 9;
    this.kUnicodeNoHalfwidthCharsBit = 10;
    this.kUnicodeTextRunHeuristicsBit = 11;
    this.kUnicodeMapLineFeedToReturnBit = 12;
    this.kUnicodeUseExternalEncodingFormBit = 13;
    this.kUnicodeUseFallbacksMask = 1;
    this.kUnicodeKeepInfoMask = 2;
    this.kUnicodeDirectionalityMask = 12;
    this.kUnicodeVerticalFormMask = 16;
    this.kUnicodeLooseMappingsMask = 32;
    this.kUnicodeStringUnterminatedMask = 64;
    this.kUnicodeTextRunMask = 128;
    this.kUnicodeKeepSameEncodingMask = 256;
    this.kUnicodeForceASCIIRangeMask = 512;
    this.kUnicodeNoHalfwidthCharsMask = 1024;
    this.kUnicodeTextRunHeuristicsMask = 2048;
    this.kUnicodeMapLineFeedToReturnMask = 4096;
    this.kUnicodeUseExternalEncodingFormMask = 8192;
    this.kUnicodeDefaultDirection = 0;
    this.kUnicodeLeftToRight = 1;
    this.kUnicodeRightToLeft = 2;
    this.kUnicodeDefaultDirectionMask = 0;
    this.kUnicodeLeftToRightMask = 4;
    this.kUnicodeRightToLeftMask = 8;
    this.kUnicodeMatchUnicodeBaseBit = 0;
    this.kUnicodeMatchUnicodeVariantBit = 1;
    this.kUnicodeMatchUnicodeFormatBit = 2;
    this.kUnicodeMatchOtherBaseBit = 3;
    this.kUnicodeMatchOtherVariantBit = 4;
    this.kUnicodeMatchOtherFormatBit = 5;
    this.kUnicodeMatchUnicodeBaseMask = 1;
    this.kUnicodeMatchUnicodeVariantMask = 2;
    this.kUnicodeMatchUnicodeFormatMask = 4;
    this.kUnicodeMatchOtherBaseMask = 8;
    this.kUnicodeMatchOtherVariantMask = 16;
    this.kUnicodeMatchOtherFormatMask = 32;
    this.kUnicodeFallbackSequencingBits = 0;
    this.kUnicodeFallbackSequencingMask = 3;
    this.kUnicodeFallbackInterruptSafeMask = 4;
    this.kUnicodeFallbackDefaultOnly = 0;
    this.kUnicodeFallbackCustomOnly = 1;
    this.kUnicodeFallbackDefaultFirst = 2;
    this.kUnicodeFallbackCustomFirst = 3;
    this.UnicodeToTextFallbackProcPtr = new ctypes.FunctionType(ctypes.default_abi, this.OSStatus, [ctypes.unsigned_short.ptr, this.ByteCount, this.ByteCount.ptr, this.TextPtr, this.ByteCount, this.ByteCount.ptr, this.LogicalAddress, this.ConstUnicodeMappingPtr]).ptr;
    this.UnicodeToTextFallbackUPP = this.UnicodeToTextFallbackProcPtr;
    // Dropping inline function 'NewUnicodeToTextFallbackUPP'.
    // Dropping inline function 'DisposeUnicodeToTextFallbackUPP'.
    // Dropping inline function 'InvokeUnicodeToTextFallbackUPP'.
}

// Based on /System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/TextCommon.h
function TextCommon_h(lib) {
    MacTypes_h.call(this, lib);

    if (this._TEXTCOMMON_H)
        return;
    this._TEXTCOMMON_H = true;

    this.kTextFlushDefault = 0;
    this.kTextCenter = 1;
    this.kTextFlushRight = -1;
    this.kTextFlushLeft = -2;
    this.TextEncodingBase = this.UInt32;
    this.kTextEncodingMacRoman = 0;
    this.kTextEncodingMacJapanese = 1;
    this.kTextEncodingMacChineseTrad = 2;
    this.kTextEncodingMacKorean = 3;
    this.kTextEncodingMacArabic = 4;
    this.kTextEncodingMacHebrew = 5;
    this.kTextEncodingMacGreek = 6;
    this.kTextEncodingMacCyrillic = 7;
    this.kTextEncodingMacDevanagari = 9;
    this.kTextEncodingMacGurmukhi = 10;
    this.kTextEncodingMacGujarati = 11;
    this.kTextEncodingMacOriya = 12;
    this.kTextEncodingMacBengali = 13;
    this.kTextEncodingMacTamil = 14;
    this.kTextEncodingMacTelugu = 15;
    this.kTextEncodingMacKannada = 16;
    this.kTextEncodingMacMalayalam = 17;
    this.kTextEncodingMacSinhalese = 18;
    this.kTextEncodingMacBurmese = 19;
    this.kTextEncodingMacKhmer = 20;
    this.kTextEncodingMacThai = 21;
    this.kTextEncodingMacLaotian = 22;
    this.kTextEncodingMacGeorgian = 23;
    this.kTextEncodingMacArmenian = 24;
    this.kTextEncodingMacChineseSimp = 25;
    this.kTextEncodingMacTibetan = 26;
    this.kTextEncodingMacMongolian = 27;
    this.kTextEncodingMacEthiopic = 28;
    this.kTextEncodingMacCentralEurRoman = 29;
    this.kTextEncodingMacVietnamese = 30;
    this.kTextEncodingMacExtArabic = 31;
    this.kTextEncodingMacSymbol = 33;
    this.kTextEncodingMacDingbats = 34;
    this.kTextEncodingMacTurkish = 35;
    this.kTextEncodingMacCroatian = 36;
    this.kTextEncodingMacIcelandic = 37;
    this.kTextEncodingMacRomanian = 38;
    this.kTextEncodingMacCeltic = 39;
    this.kTextEncodingMacGaelic = 40;
    this.kTextEncodingMacKeyboardGlyphs = 41;
    this.kTextEncodingMacTradChinese = 2;
    this.kTextEncodingMacRSymbol = 8;
    this.kTextEncodingMacSimpChinese = 25;
    this.kTextEncodingMacGeez = 28;
    this.kTextEncodingMacEastEurRoman = 29;
    this.kTextEncodingMacUninterp = 32;
    this.kTextEncodingMacUnicode = 126;
    this.kTextEncodingMacFarsi = 140;
    this.kTextEncodingMacUkrainian = 152;
    this.kTextEncodingMacInuit = 236;
    this.kTextEncodingMacVT100 = 252;
    this.kTextEncodingMacHFS = 255;
    this.kTextEncodingUnicodeDefault = 256;
    this.kTextEncodingUnicodeV1_1 = 257;
    this.kTextEncodingISO10646_1993 = 257;
    this.kTextEncodingUnicodeV2_0 = 259;
    this.kTextEncodingUnicodeV2_1 = 259;
    this.kTextEncodingUnicodeV3_0 = 260;
    this.kTextEncodingUnicodeV3_1 = 261;
    this.kTextEncodingUnicodeV3_2 = 262;
    this.kTextEncodingUnicodeV4_0 = 264;
    this.kTextEncodingUnicodeV5_0 = 266;
    this.kTextEncodingUnicodeV5_1 = 267;
    this.kTextEncodingISOLatin1 = 513;
    this.kTextEncodingISOLatin2 = 514;
    this.kTextEncodingISOLatin3 = 515;
    this.kTextEncodingISOLatin4 = 516;
    this.kTextEncodingISOLatinCyrillic = 517;
    this.kTextEncodingISOLatinArabic = 518;
    this.kTextEncodingISOLatinGreek = 519;
    this.kTextEncodingISOLatinHebrew = 520;
    this.kTextEncodingISOLatin5 = 521;
    this.kTextEncodingISOLatin6 = 522;
    this.kTextEncodingISOLatin7 = 525;
    this.kTextEncodingISOLatin8 = 526;
    this.kTextEncodingISOLatin9 = 527;
    this.kTextEncodingISOLatin10 = 528;
    this.kTextEncodingDOSLatinUS = 1024;
    this.kTextEncodingDOSGreek = 1029;
    this.kTextEncodingDOSBalticRim = 1030;
    this.kTextEncodingDOSLatin1 = 1040;
    this.kTextEncodingDOSGreek1 = 1041;
    this.kTextEncodingDOSLatin2 = 1042;
    this.kTextEncodingDOSCyrillic = 1043;
    this.kTextEncodingDOSTurkish = 1044;
    this.kTextEncodingDOSPortuguese = 1045;
    this.kTextEncodingDOSIcelandic = 1046;
    this.kTextEncodingDOSHebrew = 1047;
    this.kTextEncodingDOSCanadianFrench = 1048;
    this.kTextEncodingDOSArabic = 1049;
    this.kTextEncodingDOSNordic = 1050;
    this.kTextEncodingDOSRussian = 1051;
    this.kTextEncodingDOSGreek2 = 1052;
    this.kTextEncodingDOSThai = 1053;
    this.kTextEncodingDOSJapanese = 1056;
    this.kTextEncodingDOSChineseSimplif = 1057;
    this.kTextEncodingDOSKorean = 1058;
    this.kTextEncodingDOSChineseTrad = 1059;
    this.kTextEncodingWindowsLatin1 = 1280;
    this.kTextEncodingWindowsANSI = 1280;
    this.kTextEncodingWindowsLatin2 = 1281;
    this.kTextEncodingWindowsCyrillic = 1282;
    this.kTextEncodingWindowsGreek = 1283;
    this.kTextEncodingWindowsLatin5 = 1284;
    this.kTextEncodingWindowsHebrew = 1285;
    this.kTextEncodingWindowsArabic = 1286;
    this.kTextEncodingWindowsBalticRim = 1287;
    this.kTextEncodingWindowsVietnamese = 1288;
    this.kTextEncodingWindowsKoreanJohab = 1296;
    this.kTextEncodingUS_ASCII = 1536;
    this.kTextEncodingANSEL = 1537;
    this.kTextEncodingJIS_X0201_76 = 1568;
    this.kTextEncodingJIS_X0208_83 = 1569;
    this.kTextEncodingJIS_X0208_90 = 1570;
    this.kTextEncodingJIS_X0212_90 = 1571;
    this.kTextEncodingJIS_C6226_78 = 1572;
    this.kTextEncodingShiftJIS_X0213 = 1576;
    this.kTextEncodingJIS_X0213_MenKuTen = 1577;
    this.kTextEncodingGB_2312_80 = 1584;
    this.kTextEncodingGBK_95 = 1585;
    this.kTextEncodingGB_18030_2000 = 1586;
    this.kTextEncodingKSC_5601_87 = 1600;
    this.kTextEncodingKSC_5601_92_Johab = 1601;
    this.kTextEncodingCNS_11643_92_P1 = 1617;
    this.kTextEncodingCNS_11643_92_P2 = 1618;
    this.kTextEncodingCNS_11643_92_P3 = 1619;
    this.kTextEncodingISO_2022_JP = 2080;
    this.kTextEncodingISO_2022_JP_2 = 2081;
    this.kTextEncodingISO_2022_JP_1 = 2082;
    this.kTextEncodingISO_2022_JP_3 = 2083;
    this.kTextEncodingISO_2022_CN = 2096;
    this.kTextEncodingISO_2022_CN_EXT = 2097;
    this.kTextEncodingISO_2022_KR = 2112;
    this.kTextEncodingEUC_JP = 2336;
    this.kTextEncodingEUC_CN = 2352;
    this.kTextEncodingEUC_TW = 2353;
    this.kTextEncodingEUC_KR = 2368;
    this.kTextEncodingShiftJIS = 2561;
    this.kTextEncodingKOI8_R = 2562;
    this.kTextEncodingBig5 = 2563;
    this.kTextEncodingMacRomanLatin1 = 2564;
    this.kTextEncodingHZ_GB_2312 = 2565;
    this.kTextEncodingBig5_HKSCS_1999 = 2566;
    this.kTextEncodingVISCII = 2567;
    this.kTextEncodingKOI8_U = 2568;
    this.kTextEncodingBig5_E = 2569;
    this.kTextEncodingNextStepLatin = 2817;
    this.kTextEncodingNextStepJapanese = 2818;
    this.kTextEncodingEBCDIC_LatinCore = 3073;
    this.kTextEncodingEBCDIC_CP037 = 3074;
    this.kTextEncodingMultiRun = 4095;
    this.kTextEncodingUnknown = 65535;
    this.kTextEncodingEBCDIC_US = 3073;
    this.TextEncodingVariant = this.UInt32;
    this.kTextEncodingDefaultVariant = 0;
    this.kMacRomanDefaultVariant = 0;
    this.kMacRomanCurrencySignVariant = 1;
    this.kMacRomanEuroSignVariant = 2;
    this.kMacCyrillicDefaultVariant = 0;
    this.kMacCyrillicCurrSignStdVariant = 1;
    this.kMacCyrillicCurrSignUkrVariant = 2;
    this.kMacCyrillicEuroSignVariant = 3;
    this.kMacIcelandicStdDefaultVariant = 0;
    this.kMacIcelandicTTDefaultVariant = 1;
    this.kMacIcelandicStdCurrSignVariant = 2;
    this.kMacIcelandicTTCurrSignVariant = 3;
    this.kMacIcelandicStdEuroSignVariant = 4;
    this.kMacIcelandicTTEuroSignVariant = 5;
    this.kMacCroatianDefaultVariant = 0;
    this.kMacCroatianCurrencySignVariant = 1;
    this.kMacCroatianEuroSignVariant = 2;
    this.kMacRomanianDefaultVariant = 0;
    this.kMacRomanianCurrencySignVariant = 1;
    this.kMacRomanianEuroSignVariant = 2;
    this.kMacJapaneseStandardVariant = 0;
    this.kMacJapaneseStdNoVerticalsVariant = 1;
    this.kMacJapaneseBasicVariant = 2;
    this.kMacJapanesePostScriptScrnVariant = 3;
    this.kMacJapanesePostScriptPrintVariant = 4;
    this.kMacJapaneseVertAtKuPlusTenVariant = 5;
    this.kMacArabicStandardVariant = 0;
    this.kMacArabicTrueTypeVariant = 1;
    this.kMacArabicThuluthVariant = 2;
    this.kMacArabicAlBayanVariant = 3;
    this.kMacFarsiStandardVariant = 0;
    this.kMacFarsiTrueTypeVariant = 1;
    this.kMacHebrewStandardVariant = 0;
    this.kMacHebrewFigureSpaceVariant = 1;
    this.kMacGreekDefaultVariant = 0;
    this.kMacGreekNoEuroSignVariant = 1;
    this.kMacGreekEuroSignVariant = 2;
    this.kMacVT100DefaultVariant = 0;
    this.kMacVT100CurrencySignVariant = 1;
    this.kMacVT100EuroSignVariant = 2;
    this.kUnicodeNoSubset = 0;
    this.kUnicodeNormalizationFormD = 5;
    this.kUnicodeNormalizationFormC = 3;
    this.kUnicodeHFSPlusDecompVariant = 8;
    this.kUnicodeHFSPlusCompVariant = 9;
    this.kISOLatin1StandardVariant = 0;
    this.kISOLatin1MusicCDVariant = 1;
    this.kISOLatinArabicImplicitOrderVariant = 0;
    this.kISOLatinArabicVisualOrderVariant = 1;
    this.kISOLatinArabicExplicitOrderVariant = 2;
    this.kISOLatinHebrewImplicitOrderVariant = 0;
    this.kISOLatinHebrewVisualOrderVariant = 1;
    this.kISOLatinHebrewExplicitOrderVariant = 2;
    this.kWindowsLatin1StandardVariant = 0;
    this.kWindowsLatin1PalmVariant = 1;
    this.kDOSJapaneseStandardVariant = 0;
    this.kDOSJapanesePalmVariant = 1;
    this.kEUC_CN_BasicVariant = 0;
    this.kEUC_CN_DOSVariant = 1;
    this.kEUC_KR_BasicVariant = 0;
    this.kEUC_KR_DOSVariant = 1;
    this.kShiftJIS_BasicVariant = 0;
    this.kShiftJIS_DOSVariant = 1;
    this.kShiftJIS_MusicCDVariant = 2;
    this.kBig5_BasicVariant = 0;
    this.kBig5_StandardVariant = 1;
    this.kBig5_ETenVariant = 2;
    this.kBig5_DOSVariant = 3;
    this.kMacRomanLatin1DefaultVariant = 0;
    this.kMacRomanLatin1StandardVariant = 2;
    this.kMacRomanLatin1TurkishVariant = 6;
    this.kMacRomanLatin1CroatianVariant = 8;
    this.kMacRomanLatin1IcelandicVariant = 11;
    this.kMacRomanLatin1RomanianVariant = 14;
    this.kUnicodeNoCompatibilityVariant = 1;
    this.kUnicodeNoCorporateVariant = 4;
    this.kMacRomanStandardVariant = 0;
    this.kMacIcelandicStandardVariant = 0;
    this.kMacIcelandicTrueTypeVariant = 1;
    this.kJapaneseStandardVariant = 0;
    this.kJapaneseStdNoVerticalsVariant = 1;
    this.kJapaneseBasicVariant = 2;
    this.kJapanesePostScriptScrnVariant = 3;
    this.kJapanesePostScriptPrintVariant = 4;
    this.kJapaneseVertAtKuPlusTenVariant = 5;
    this.kTextEncodingShiftJIS_X0213_00 = 1576;
    this.kHebrewStandardVariant = 0;
    this.kHebrewFigureSpaceVariant = 1;
    this.kUnicodeCanonicalDecompVariant = 2;
    this.kUnicodeMaxDecomposedVariant = 2;
    this.kUnicodeCanonicalCompVariant = 3;
    this.kUnicodeNoComposedVariant = 3;
    this.TextEncodingFormat = this.UInt32;
    this.kTextEncodingDefaultFormat = 0;
    this.kUnicodeUTF16Format = 0;
    this.kUnicodeUTF7Format = 1;
    this.kUnicodeUTF8Format = 2;
    this.kUnicodeUTF32Format = 3;
    this.kUnicodeUTF16BEFormat = 4;
    this.kUnicodeUTF16LEFormat = 5;
    this.kUnicodeUTF32BEFormat = 6;
    this.kUnicodeUTF32LEFormat = 7;
    this.kUnicodeSCSUFormat = 8;
    this.kUnicode16BitFormat = 0;
    this.kUnicode32BitFormat = 3;
    this.TextEncoding = this.UInt32;
    this.TextEncodingNameSelector = this.UInt32;
    this.kTextEncodingFullName = 0;
    this.kTextEncodingBaseName = 1;
    this.kTextEncodingVariantName = 2;
    this.kTextEncodingFormatName = 3;
    this.TextEncodingRun = new ctypes.StructType("TextEncodingRun", [{offset: this.ByteOffset}, {textEncoding: this.TextEncoding}]);
    this.TextEncodingRunPtr = this.TextEncodingRun.ptr;
    this.ConstTextEncodingRunPtr = this.TextEncodingRun.ptr;
    this.ScriptCodeRun = new ctypes.StructType("ScriptCodeRun", [{offset: this.ByteOffset}, {script: this.ScriptCode}]);
    this.ScriptCodeRunPtr = this.ScriptCodeRun.ptr;
    this.ConstScriptCodeRunPtr = this.ScriptCodeRun.ptr;
    this.TextPtr = this.UInt8.ptr;
    this.ConstTextPtr = this.UInt8.ptr;
    this.UniCharArrayPtr = ctypes.unsigned_short.ptr;
    this.ConstUniCharArrayPtr = this.UniChar.ptr;
    this.UniCharArrayHandle = this.UniCharArrayPtr.ptr;
    this.UniCharArrayOffset = ctypes.unsigned_long;
    this.kTextScriptDontCare = -128;
    this.kTextLanguageDontCare = -128;
    this.kTextRegionDontCare = -128;
    this.TECInfo = new ctypes.StructType("TECInfo", [{format: this.UInt16}, {tecVersion: this.UInt16}, {tecTextConverterFeatures: this.UInt32}, {tecUnicodeConverterFeatures: this.UInt32}, {tecTextCommonFeatures: this.UInt32}, {tecTextEncodingsFolderName: this.Str31}, {tecExtensionFileName: this.Str31}, {tecLowestTEFileVersion: this.UInt16}, {tecHighestTEFileVersion: this.UInt16}]);
    this.TECInfoPtr = this.TECInfo.ptr;
    this.TECInfoHandle = this.TECInfoPtr.ptr;
    this.kTECInfoCurrentFormat = 2;
    this.kTECKeepInfoFixBit = 0;
    this.kTECFallbackTextLengthFixBit = 1;
    this.kTECTextRunBitClearFixBit = 2;
    this.kTECTextToUnicodeScanFixBit = 3;
    this.kTECAddForceASCIIChangesBit = 4;
    this.kTECPreferredEncodingFixBit = 5;
    this.kTECAddTextRunHeuristicsBit = 6;
    this.kTECAddFallbackInterruptBit = 7;
    this.kTECKeepInfoFixMask = 1;
    this.kTECFallbackTextLengthFixMask = 2;
    this.kTECTextRunBitClearFixMask = 4;
    this.kTECTextToUnicodeScanFixMask = 8;
    this.kTECAddForceASCIIChangesMask = 16;
    this.kTECPreferredEncodingFixMask = 32;
    this.kTECAddTextRunHeuristicsMask = 64;
    this.kTECAddFallbackInterruptMask = 128;
    this.kUnicodeByteOrderMark = 65279;
    this.kUnicodeObjectReplacement = 65532;
    this.kUnicodeReplacementChar = 65533;
    this.kUnicodeSwappedByteOrderMark = 65534;
    this.kUnicodeNotAChar = 65535;
    this.UCCharPropertyType = this.SInt32;
    this.kUCCharPropTypeGenlCategory = 1;
    this.kUCCharPropTypeCombiningClass = 2;
    this.kUCCharPropTypeBidiCategory = 3;
    this.kUCCharPropTypeDecimalDigitValue = 4;
    this.UCCharPropertyValue = this.UInt32;
    this.kUCGenlCatOtherNotAssigned = 0;
    this.kUCGenlCatOtherControl = 1;
    this.kUCGenlCatOtherFormat = 2;
    this.kUCGenlCatOtherSurrogate = 3;
    this.kUCGenlCatOtherPrivateUse = 4;
    this.kUCGenlCatMarkNonSpacing = 5;
    this.kUCGenlCatMarkSpacingCombining = 6;
    this.kUCGenlCatMarkEnclosing = 7;
    this.kUCGenlCatNumberDecimalDigit = 8;
    this.kUCGenlCatNumberLetter = 9;
    this.kUCGenlCatNumberOther = 10;
    this.kUCGenlCatSeparatorSpace = 11;
    this.kUCGenlCatSeparatorLine = 12;
    this.kUCGenlCatSeparatorParagraph = 13;
    this.kUCGenlCatLetterUppercase = 14;
    this.kUCGenlCatLetterLowercase = 15;
    this.kUCGenlCatLetterTitlecase = 16;
    this.kUCGenlCatLetterModifier = 17;
    this.kUCGenlCatLetterOther = 18;
    this.kUCGenlCatPunctConnector = 20;
    this.kUCGenlCatPunctDash = 21;
    this.kUCGenlCatPunctOpen = 22;
    this.kUCGenlCatPunctClose = 23;
    this.kUCGenlCatPunctInitialQuote = 24;
    this.kUCGenlCatPunctFinalQuote = 25;
    this.kUCGenlCatPunctOther = 26;
    this.kUCGenlCatSymbolMath = 28;
    this.kUCGenlCatSymbolCurrency = 29;
    this.kUCGenlCatSymbolModifier = 30;
    this.kUCGenlCatSymbolOther = 31;
    this.kUCBidiCatNotApplicable = 0;
    this.kUCBidiCatLeftRight = 1;
    this.kUCBidiCatRightLeft = 2;
    this.kUCBidiCatEuroNumber = 3;
    this.kUCBidiCatEuroNumberSeparator = 4;
    this.kUCBidiCatEuroNumberTerminator = 5;
    this.kUCBidiCatArabicNumber = 6;
    this.kUCBidiCatCommonNumberSeparator = 7;
    this.kUCBidiCatBlockSeparator = 8;
    this.kUCBidiCatSegmentSeparator = 9;
    this.kUCBidiCatWhitespace = 10;
    this.kUCBidiCatOtherNeutral = 11;
    this.kUCBidiCatRightLeftArabic = 12;
    this.kUCBidiCatLeftRightEmbedding = 13;
    this.kUCBidiCatRightLeftEmbedding = 14;
    this.kUCBidiCatLeftRightOverride = 15;
    this.kUCBidiCatRightLeftOverride = 16;
    this.kUCBidiCatPopDirectionalFormat = 17;
    this.kUCBidiCatNonSpacingMark = 18;
    this.kUCBidiCatBoundaryNeutral = 19;
    this.kUCHighSurrogateRangeStart = 55296;
    this.kUCHighSurrogateRangeEnd = 56319;
    this.kUCLowSurrogateRangeStart = 56320;
    this.kUCLowSurrogateRangeEnd = 57343;
    // Dropping inline function 'UCIsSurrogateHighCharacter'.
    // Dropping inline function 'UCIsSurrogateLowCharacter'.
    // Dropping inline function 'UCGetUnicodeScalarValueForSurrogatePair'.
}

// Based on /System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Aliases.h
function Aliases_h(lib) {
    UTCUtils_h.call(this, lib);
    Files_h.call(this, lib);
    MacTypes_h.call(this, lib);

    if (this._ALIASES_H)
        return;
    this._ALIASES_H = true;

    this.FSAliasInfoBitmap = this.UInt32;
    this.kFSAliasInfoNone = 0;
    this.kFSAliasInfoVolumeCreateDate = 1;
    this.kFSAliasInfoTargetCreateDate = 2;
    this.kFSAliasInfoFinderInfo = 4;
    this.kFSAliasInfoIsDirectory = 8;
    this.kFSAliasInfoIDs = 16;
    this.kFSAliasInfoFSInfo = 32;
    this.kFSAliasInfoVolumeFlags = 64;
    this.rAliasType = 1634494835;
    this.kARMMountVol = 1;
    this.kARMNoUI = 2;
    this.kARMMultVols = 8;
    this.kARMSearch = 256;
    this.kARMSearchMore = 512;
    this.kARMSearchRelFirst = 1024;
    this.kARMTryFileIDFirst = 2048;
    this.asiZoneName = -3;
    this.asiServerName = -2;
    this.asiVolumeName = -1;
    this.asiAliasName = 0;
    this.asiParentName = 1;
    this.kResolveAliasFileNoUI = 1;
    this.kResolveAliasTryFileIDFirst = 2;
    this.AliasRecord = new ctypes.StructType("AliasRecord", [{hidden: this.UInt8.array(6)}]);
    this.AliasPtr = this.AliasRecord.ptr;
    this.AliasHandle = this.AliasPtr.ptr;
    this.FSAliasInfo = new ctypes.StructType("FSAliasInfo", [{volumeCreateDate: this.UTCDateTime}, {targetCreateDate: this.UTCDateTime}, {fileType: this.OSType}, {fileCreator: this.OSType}, {parentDirID: this.UInt32}, {nodeID: this.UInt32}, {filesystemID: this.UInt16}, {signature: this.UInt16}, {volumeIsBootVolume: this.Boolean}, {volumeIsAutomounted: this.Boolean}, {volumeIsEjectable: this.Boolean}, {volumeHasPersistentFileIDs: this.Boolean}, {isDirectory: this.Boolean}]);
    this.FSAliasInfoPtr = this.FSAliasInfo.ptr;
    this.AliasInfoType = ctypes.short;
    this.AliasFilterProcPtr = new ctypes.FunctionType(ctypes.default_abi, this.Boolean, [this.CInfoPBPtr, this.Boolean.ptr, this.Ptr]).ptr;
    this.AliasFilterUPP = this.AliasFilterProcPtr;
    // Dropping inline function 'NewAliasFilterUPP'.
    // Dropping inline function 'DisposeAliasFilterUPP'.
    // Dropping inline function 'InvokeAliasFilterUPP'.
    this.FSAliasFilterProcPtr = new ctypes.FunctionType(ctypes.default_abi, this.Boolean, [this.FSRef.ptr, this.Boolean.ptr, this.Ptr]).ptr;
}

// Based on /System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/LowMem.h
function LowMem_h(lib) {

    if (this._LOWMEM_H)
        return;
    this._LOWMEM_H = true;

}

// Based on /System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Script.h
function Script_h(lib) {
    MacTypes_h.call(this, lib);

    if (this._SCRIPT_H)
        return;
    this._SCRIPT_H = true;

    this.smSystemScript = -1;
    this.smCurrentScript = -2;
    this.smAllScripts = -3;
    this.smRoman = 0;
    this.smJapanese = 1;
    this.smTradChinese = 2;
    this.smKorean = 3;
    this.smArabic = 4;
    this.smHebrew = 5;
    this.smGreek = 6;
    this.smCyrillic = 7;
    this.smRSymbol = 8;
    this.smDevanagari = 9;
    this.smGurmukhi = 10;
    this.smGujarati = 11;
    this.smOriya = 12;
    this.smBengali = 13;
    this.smTamil = 14;
    this.smTelugu = 15;
    this.smKannada = 16;
    this.smMalayalam = 17;
    this.smSinhalese = 18;
    this.smBurmese = 19;
    this.smKhmer = 20;
    this.smThai = 21;
    this.smLao = 22;
    this.smGeorgian = 23;
    this.smArmenian = 24;
    this.smSimpChinese = 25;
    this.smTibetan = 26;
    this.smMongolian = 27;
    this.smEthiopic = 28;
    this.smGeez = 28;
    this.smCentralEuroRoman = 29;
    this.smVietnamese = 30;
    this.smExtArabic = 31;
    this.smUninterp = 32;
    this.smUnicodeScript = 126;
    this.smChinese = 2;
    this.smRussian = 7;
    this.smLaotian = 22;
    this.smAmharic = 28;
    this.smSlavic = 29;
    this.smEastEurRoman = 29;
    this.smSindhi = 31;
    this.smKlingon = 32;
    this.langEnglish = 0;
    this.langFrench = 1;
    this.langGerman = 2;
    this.langItalian = 3;
    this.langDutch = 4;
    this.langSwedish = 5;
    this.langSpanish = 6;
    this.langDanish = 7;
    this.langPortuguese = 8;
    this.langNorwegian = 9;
    this.langHebrew = 10;
    this.langJapanese = 11;
    this.langArabic = 12;
    this.langFinnish = 13;
    this.langGreek = 14;
    this.langIcelandic = 15;
    this.langMaltese = 16;
    this.langTurkish = 17;
    this.langCroatian = 18;
    this.langTradChinese = 19;
    this.langUrdu = 20;
    this.langHindi = 21;
    this.langThai = 22;
    this.langKorean = 23;
    this.langLithuanian = 24;
    this.langPolish = 25;
    this.langHungarian = 26;
    this.langEstonian = 27;
    this.langLatvian = 28;
    this.langSami = 29;
    this.langFaroese = 30;
    this.langFarsi = 31;
    this.langPersian = 31;
    this.langRussian = 32;
    this.langSimpChinese = 33;
    this.langFlemish = 34;
    this.langIrishGaelic = 35;
    this.langAlbanian = 36;
    this.langRomanian = 37;
    this.langCzech = 38;
    this.langSlovak = 39;
    this.langSlovenian = 40;
    this.langYiddish = 41;
    this.langSerbian = 42;
    this.langMacedonian = 43;
    this.langBulgarian = 44;
    this.langUkrainian = 45;
    this.langByelorussian = 46;
    this.langBelorussian = 46;
    this.langUzbek = 47;
    this.langKazakh = 48;
    this.langAzerbaijani = 49;
    this.langAzerbaijanAr = 50;
    this.langArmenian = 51;
    this.langGeorgian = 52;
    this.langMoldavian = 53;
    this.langKirghiz = 54;
    this.langTajiki = 55;
    this.langTurkmen = 56;
    this.langMongolian = 57;
    this.langMongolianCyr = 58;
    this.langPashto = 59;
    this.langKurdish = 60;
    this.langKashmiri = 61;
    this.langSindhi = 62;
    this.langTibetan = 63;
    this.langNepali = 64;
    this.langSanskrit = 65;
    this.langMarathi = 66;
    this.langBengali = 67;
    this.langAssamese = 68;
    this.langGujarati = 69;
    this.langPunjabi = 70;
    this.langOriya = 71;
    this.langMalayalam = 72;
    this.langKannada = 73;
    this.langTamil = 74;
    this.langTelugu = 75;
    this.langSinhalese = 76;
    this.langBurmese = 77;
    this.langKhmer = 78;
    this.langLao = 79;
    this.langVietnamese = 80;
    this.langIndonesian = 81;
    this.langTagalog = 82;
    this.langMalayRoman = 83;
    this.langMalayArabic = 84;
    this.langAmharic = 85;
    this.langTigrinya = 86;
    this.langOromo = 87;
    this.langSomali = 88;
    this.langSwahili = 89;
    this.langKinyarwanda = 90;
    this.langRuanda = 90;
    this.langRundi = 91;
    this.langNyanja = 92;
    this.langChewa = 92;
    this.langMalagasy = 93;
    this.langEsperanto = 94;
    this.langWelsh = 128;
    this.langBasque = 129;
    this.langCatalan = 130;
    this.langLatin = 131;
    this.langQuechua = 132;
    this.langGuarani = 133;
    this.langAymara = 134;
    this.langTatar = 135;
    this.langUighur = 136;
    this.langDzongkha = 137;
    this.langJavaneseRom = 138;
    this.langSundaneseRom = 139;
    this.langGalician = 140;
    this.langAfrikaans = 141;
    this.langBreton = 142;
    this.langInuktitut = 143;
    this.langScottishGaelic = 144;
    this.langManxGaelic = 145;
    this.langIrishGaelicScript = 146;
    this.langTongan = 147;
    this.langGreekAncient = 148;
    this.langGreenlandic = 149;
    this.langAzerbaijanRoman = 150;
    this.langNynorsk = 151;
    this.langUnspecified = 32767;
    this.langPortugese = 8;
    this.langMalta = 16;
    this.langYugoslavian = 18;
    this.langChinese = 19;
    this.langLettish = 28;
    this.langLapponian = 29;
    this.langLappish = 29;
    this.langSaamisk = 29;
    this.langFaeroese = 30;
    this.langIrish = 35;
    this.langGalla = 87;
    this.langAfricaans = 141;
    this.langGreekPoly = 148;
    this.verUS = 0;
    this.verFrance = 1;
    this.verBritain = 2;
    this.verGermany = 3;
    this.verItaly = 4;
    this.verNetherlands = 5;
    this.verFlemish = 6;
    this.verSweden = 7;
    this.verSpain = 8;
    this.verDenmark = 9;
    this.verPortugal = 10;
    this.verFrCanada = 11;
    this.verNorway = 12;
    this.verIsrael = 13;
    this.verJapan = 14;
    this.verAustralia = 15;
    this.verArabic = 16;
    this.verFinland = 17;
    this.verFrSwiss = 18;
    this.verGrSwiss = 19;
    this.verGreece = 20;
    this.verIceland = 21;
    this.verMalta = 22;
    this.verCyprus = 23;
    this.verTurkey = 24;
    this.verYugoCroatian = 25;
    this.verNetherlandsComma = 26;
    this.verFlemishPoint = 27;
    this.verCanadaComma = 28;
    this.verCanadaPoint = 29;
    this.vervariantPortugal = 30;
    this.vervariantNorway = 31;
    this.vervariantDenmark = 32;
    this.verIndiaHindi = 33;
    this.verPakistanUrdu = 34;
    this.verTurkishModified = 35;
    this.verItalianSwiss = 36;
    this.verInternational = 37;
    this.verRomania = 39;
    this.verGreekAncient = 40;
    this.verLithuania = 41;
    this.verPoland = 42;
    this.verHungary = 43;
    this.verEstonia = 44;
    this.verLatvia = 45;
    this.verSami = 46;
    this.verFaroeIsl = 47;
    this.verIran = 48;
    this.verRussia = 49;
    this.verIreland = 50;
    this.verKorea = 51;
    this.verChina = 52;
    this.verTaiwan = 53;
    this.verThailand = 54;
    this.verScriptGeneric = 55;
    this.verCzech = 56;
    this.verSlovak = 57;
    this.verEastAsiaGeneric = 58;
    this.verMagyar = 59;
    this.verBengali = 60;
    this.verBelarus = 61;
    this.verUkraine = 62;
    this.verGreeceAlt = 64;
    this.verSerbian = 65;
    this.verSlovenian = 66;
    this.verMacedonian = 67;
    this.verCroatia = 68;
    this.verGermanReformed = 70;
    this.verBrazil = 71;
    this.verBulgaria = 72;
    this.verCatalonia = 73;
    this.verMultilingual = 74;
    this.verScottishGaelic = 75;
    this.verManxGaelic = 76;
    this.verBreton = 77;
    this.verNunavut = 78;
    this.verWelsh = 79;
    this.verIrishGaelicScript = 81;
    this.verEngCanada = 82;
    this.verBhutan = 83;
    this.verArmenian = 84;
    this.verGeorgian = 85;
    this.verSpLatinAmerica = 86;
    this.verTonga = 88;
    this.verFrenchUniversal = 91;
    this.verAustria = 92;
    this.verGujarati = 94;
    this.verPunjabi = 95;
    this.verIndiaUrdu = 96;
    this.verVietnam = 97;
    this.verFrBelgium = 98;
    this.verUzbek = 99;
    this.verSingapore = 100;
    this.verNynorsk = 101;
    this.verAfrikaans = 102;
    this.verEsperanto = 103;
    this.verMarathi = 104;
    this.verTibetan = 105;
    this.verNepal = 106;
    this.verGreenland = 107;
    this.verIrelandEnglish = 108;
    this.verFrBelgiumLux = 6;
    this.verBelgiumLux = 6;
    this.verArabia = 16;
    this.verYugoslavia = 25;
    this.verBelgiumLuxPoint = 27;
    this.verIndia = 33;
    this.verPakistan = 34;
    this.verRumania = 39;
    this.verGreecePoly = 40;
    this.verLapland = 46;
    this.verFaeroeIsl = 47;
    this.verGenericFE = 58;
    this.verFarEastGeneric = 58;
    this.verByeloRussian = 61;
    this.verUkrania = 62;
    this.verAlternateGr = 64;
    this.verSerbia = 65;
    this.verSlovenia = 66;
    this.verMacedonia = 67;
    this.verBrittany = 77;
    this.verWales = 79;
    this.verArmenia = 84;
    this.verGeorgia = 85;
    this.verAustriaGerman = 92;
    this.verTibet = 105;
    this.minCountry = 0;
    this.maxCountry = 108;
    this.calGregorian = 0;
    this.calArabicCivil = 1;
    this.calArabicLunar = 2;
    this.calJapanese = 3;
    this.calJewish = 4;
    this.calCoptic = 5;
    this.calPersian = 6;
    this.intWestern = 0;
    this.intArabic = 1;
    this.intRoman = 2;
    this.intJapanese = 3;
    this.intEuropean = 4;
    this.intOutputMask = 32768;
    this.smSingleByte = 0;
    this.smFirstByte = -1;
    this.smLastByte = 1;
    this.smMiddleByte = 2;
    this.smcTypeMask = 15;
    this.smcReserved = 240;
    this.smcClassMask = 3840;
    this.smcOrientationMask = 4096;
    this.smcRightMask = 8192;
    this.smcUpperMask = 16384;
    this.smcDoubleMask = 32768;
    this.smCharPunct = 0;
    this.smCharAscii = 1;
    this.smCharEuro = 7;
    this.smCharExtAscii = 7;
    this.smCharKatakana = 2;
    this.smCharHiragana = 3;
    this.smCharIdeographic = 4;
    this.smCharTwoByteGreek = 5;
    this.smCharTwoByteRussian = 6;
    this.smCharBidirect = 8;
    this.smCharContextualLR = 9;
    this.smCharNonContextualLR = 10;
    this.smCharHangul = 12;
    this.smCharJamo = 13;
    this.smCharBopomofo = 14;
    this.smCharGanaKana = 15;
    this.smCharFISKana = 2;
    this.smCharFISGana = 3;
    this.smCharFISIdeo = 4;
    this.smCharFISGreek = 5;
    this.smCharFISRussian = 6;
    this.smPunctNormal = 0;
    this.smPunctNumber = 256;
    this.smPunctSymbol = 512;
    this.smPunctBlank = 768;
    this.smPunctRepeat = 1024;
    this.smPunctGraphic = 1280;
    this.smKanaSmall = 256;
    this.smKanaHardOK = 512;
    this.smKanaSoftOK = 768;
    this.smIdeographicLevel1 = 0;
    this.smIdeographicLevel2 = 256;
    this.smIdeographicUser = 512;
    this.smFISClassLvl1 = 0;
    this.smFISClassLvl2 = 256;
    this.smFISClassUser = 512;
    this.smJamoJaeum = 0;
    this.smJamoBogJaeum = 256;
    this.smJamoMoeum = 512;
    this.smJamoBogMoeum = 768;
    this.smCharHorizontal = 0;
    this.smCharVertical = 4096;
    this.smCharLeft = 0;
    this.smCharRight = 8192;
    this.smCharLower = 0;
    this.smCharUpper = 16384;
    this.smChar1byte = 0;
    this.smChar2byte = 32768;
    this.smTransAscii = 0;
    this.smTransNative = 1;
    this.smTransCase = 254;
    this.smTransSystem = 255;
    this.smTransAscii1 = 2;
    this.smTransAscii2 = 3;
    this.smTransKana1 = 4;
    this.smTransKana2 = 5;
    this.smTransGana2 = 7;
    this.smTransHangul2 = 8;
    this.smTransJamo2 = 9;
    this.smTransBopomofo2 = 10;
    this.smTransLower = 16384;
    this.smTransUpper = 32768;
    this.smTransRuleBaseFormat = 1;
    this.smTransHangulFormat = 2;
    this.smTransPreDoubleByting = 1;
    this.smTransPreLowerCasing = 2;
    this.smMaskAll = -1;
    this.smMaskAscii = 1;
    this.smMaskNative = 2;
    this.smMaskAscii1 = 4;
    this.smMaskAscii2 = 8;
    this.smMaskKana1 = 16;
    this.smMaskKana2 = 32;
    this.smMaskGana2 = 128;
    this.smMaskHangul2 = 256;
    this.smMaskJamo2 = 512;
    this.smMaskBopomofo2 = 1024;
    this.iuSystemScript = -1;
    this.iuCurrentScript = -2;
    this.smKeyNextScript = -1;
    this.smKeySysScript = -2;
    this.smKeySwapScript = -3;
    this.smKeyNextKybd = -4;
    this.smKeySwapKybd = -5;
    this.smKeyDisableKybds = -6;
    this.smKeyEnableKybds = -7;
    this.smKeyToggleInline = -8;
    this.smKeyToggleDirection = -9;
    this.smKeyNextInputMethod = -10;
    this.smKeySwapInputMethod = -11;
    this.smKeyDisableKybdSwitch = -12;
    this.smKeySetDirLeftRight = -15;
    this.smKeySetDirRightLeft = -16;
    this.smKeyRoman = -17;
    this.smKeyForceKeyScriptBit = 7;
    this.smKeyForceKeyScriptMask = 128;
    this.romanSysFond = 16383;
    this.romanAppFond = 3;
    this.romanFlags = 7;
    this.smFondStart = 16384;
    this.smFondEnd = 49152;
    this.smUprHalfCharSet = 128;
    this.diaeresisUprY = 217;
    this.fraction = 218;
    this.intlCurrency = 219;
    this.leftSingGuillemet = 220;
    this.rightSingGuillemet = 221;
    this.fiLigature = 222;
    this.flLigature = 223;
    this.dblDagger = 224;
    this.centeredDot = 225;
    this.baseSingQuote = 226;
    this.baseDblQuote = 227;
    this.perThousand = 228;
    this.circumflexUprA = 229;
    this.circumflexUprE = 230;
    this.acuteUprA = 231;
    this.diaeresisUprE = 232;
    this.graveUprE = 233;
    this.acuteUprI = 234;
    this.circumflexUprI = 235;
    this.diaeresisUprI = 236;
    this.graveUprI = 237;
    this.acuteUprO = 238;
    this.circumflexUprO = 239;
    this.appleLogo = 240;
    this.graveUprO = 241;
    this.acuteUprU = 242;
    this.circumflexUprU = 243;
    this.graveUprU = 244;
    this.dotlessLwrI = 245;
    this.circumflex = 246;
    this.tilde = 247;
    this.macron = 248;
    this.breveMark = 249;
    this.overDot = 250;
    this.ringMark = 251;
    this.cedilla = 252;
    this.doubleAcute = 253;
    this.ogonek = 254;
    this.hachek = 255;
    this.tokenIntl = 4;
    this.tokenEmpty = -1;
    this.tokenUnknown = 0;
    this.tokenWhite = 1;
    this.tokenLeftLit = 2;
    this.tokenRightLit = 3;
    this.tokenAlpha = 4;
    this.tokenNumeric = 5;
    this.tokenNewLine = 6;
    this.tokenLeftComment = 7;
    this.tokenRightComment = 8;
    this.tokenLiteral = 9;
    this.tokenEscape = 10;
    this.tokenAltNum = 11;
    this.tokenRealNum = 12;
    this.tokenAltReal = 13;
    this.tokenReserve1 = 14;
    this.tokenReserve2 = 15;
    this.tokenLeftParen = 16;
    this.tokenRightParen = 17;
    this.tokenLeftBracket = 18;
    this.tokenRightBracket = 19;
    this.tokenLeftCurly = 20;
    this.tokenRightCurly = 21;
    this.tokenLeftEnclose = 22;
    this.tokenRightEnclose = 23;
    this.tokenPlus = 24;
    this.tokenMinus = 25;
    this.tokenAsterisk = 26;
    this.tokenDivide = 27;
    this.tokenPlusMinus = 28;
    this.tokenSlash = 29;
    this.tokenBackSlash = 30;
    this.tokenLess = 31;
    this.tokenGreat = 32;
    this.tokenEqual = 33;
    this.tokenLessEqual2 = 34;
    this.tokenLessEqual1 = 35;
    this.tokenGreatEqual2 = 36;
    this.tokenGreatEqual1 = 37;
    this.token2Equal = 38;
    this.tokenColonEqual = 39;
    this.tokenNotEqual = 40;
    this.tokenLessGreat = 41;
    this.tokenExclamEqual = 42;
    this.tokenExclam = 43;
    this.tokenTilde = 44;
    this.tokenComma = 45;
    this.tokenPeriod = 46;
    this.tokenLeft2Quote = 47;
    this.tokenRight2Quote = 48;
    this.tokenLeft1Quote = 49;
    this.tokenRight1Quote = 50;
    this.token2Quote = 51;
    this.token1Quote = 52;
    this.tokenSemicolon = 53;
    this.tokenPercent = 54;
    this.tokenCaret = 55;
    this.tokenUnderline = 56;
    this.tokenAmpersand = 57;
    this.tokenAtSign = 58;
    this.tokenBar = 59;
    this.tokenQuestion = 60;
    this.tokenPi = 61;
    this.tokenRoot = 62;
    this.tokenSigma = 63;
    this.tokenIntegral = 64;
    this.tokenMicro = 65;
    this.tokenCapPi = 66;
    this.tokenInfinity = 67;
    this.tokenColon = 68;
    this.tokenHash = 69;
    this.tokenDollar = 70;
    this.tokenNoBreakSpace = 71;
    this.tokenFraction = 72;
    this.tokenIntlCurrency = 73;
    this.tokenLeftSingGuillemet = 74;
    this.tokenRightSingGuillemet = 75;
    this.tokenPerThousand = 76;
    this.tokenEllipsis = 77;
    this.tokenCenterDot = 78;
    this.tokenNil = 127;
    this.delimPad = -2;
    this.tokenTilda = 44;
    this.tokenCarat = 55;
    this.smWordSelectTable = 0;
    this.smWordWrapTable = 1;
    this.smNumberPartsTable = 2;
    this.smUnTokenTable = 3;
    this.smWhiteSpaceList = 4;
    this.iuWordSelectTable = 0;
    this.iuWordWrapTable = 1;
    this.iuNumberPartsTable = 2;
    this.iuUnTokenTable = 3;
    this.iuWhiteSpaceList = 4;
    this.tokenOK = 0;
    this.tokenOverflow = 1;
    this.stringOverflow = 2;
    this.badDelim = 3;
    this.badEnding = 4;
    this.crash = 5;
    this.TokenResults = this.SInt8;
    this.CharByteTable = ctypes.char.array(256);
    this.ScriptTokenType = ctypes.short;
    this.DelimType = this.ScriptTokenType.array(2);
    this.CommentType = this.ScriptTokenType.array(4);
    this.TokenRec = new ctypes.StructType("TokenRec", [{theToken: this.ScriptTokenType}, {position: this.Ptr}, {length: ctypes.long}, {stringPosition: this.StringPtr}]);
    this.TokenRecPtr = this.TokenRec.ptr;
    this.TokenBlock = new ctypes.StructType("TokenBlock", [{source: this.Ptr}, {sourceLength: ctypes.long}, {tokenList: this.Ptr}, {tokenLength: ctypes.long}, {tokenCount: ctypes.long}, {stringList: this.Ptr}, {stringLength: ctypes.long}, {stringCount: ctypes.long}, {doString: this.Boolean}, {doAppend: this.Boolean}, {doAlphanumeric: this.Boolean}, {doNest: this.Boolean}, {leftDelims: this.ScriptTokenType.array(2)}, {rightDelims: this.ScriptTokenType.array(2)}, {leftComment: this.ScriptTokenType.array(4)}, {rightComment: this.ScriptTokenType.array(4)}, {escapeCode: this.ScriptTokenType}, {decimalCode: this.ScriptTokenType}, {itlResource: this.Handle}, {reserved: ctypes.long.array(8)}]);
    this.TokenBlockPtr = this.TokenBlock.ptr;
    this.smNotInstalled = 0;
    this.smBadVerb = -1;
    this.smBadScript = -2;
    this.smfShowIcon = 31;
    this.smfDualCaret = 30;
    this.smfNameTagEnab = 29;
    this.smfUseAssocFontInfo = 28;
    this.smfDisableKeyScriptSync = 27;
    this.smfDisableKeyScriptSyncMask = 134217728;
    this.smSysScript = 18;
    this.smKeyScript = 22;
    this.smKCHRCache = 38;
    this.smRegionCode = 40;
    this.smVersion = 0;
    this.smMunged = 2;
    this.smEnabled = 4;
    this.smBidirect = 6;
    this.smFontForce = 8;
    this.smIntlForce = 10;
    this.smForced = 12;
    this.smDefault = 14;
    this.smPrint = 16;
    this.smLastScript = 20;
    this.smSysRef = 24;
    this.smKeyCache = 26;
    this.smKeySwap = 28;
    this.smGenFlags = 30;
    this.smOverride = 32;
    this.smCharPortion = 34;
    this.smDoubleByte = 36;
    this.smKeyDisableState = 42;
    this.smRedrawChar = 0;
    this.smRedrawWord = 1;
    this.smRedrawLine = -1;
    this.smsfIntellCP = 0;
    this.smsfSingByte = 1;
    this.smsfNatCase = 2;
    this.smsfContext = 3;
    this.smsfNoForceFont = 4;
    this.smsfB0Digits = 5;
    this.smsfAutoInit = 6;
    this.smsfUnivExt = 7;
    this.smsfSynchUnstyledTE = 8;
    this.smsfForms = 13;
    this.smsfLigatures = 14;
    this.smsfReverse = 15;
    this.smScriptVersion = 0;
    this.smScriptMunged = 2;
    this.smScriptEnabled = 4;
    this.smScriptRight = 6;
    this.smScriptJust = 8;
    this.smScriptRedraw = 10;
    this.smScriptSysFond = 12;
    this.smScriptAppFond = 14;
    this.smScriptBundle = 16;
    this.smScriptNumber = 16;
    this.smScriptDate = 18;
    this.smScriptSort = 20;
    this.smScriptFlags = 22;
    this.smScriptToken = 24;
    this.smScriptEncoding = 26;
    this.smScriptLang = 28;
    this.smScriptNumDate = 30;
    this.smScriptKeys = 32;
    this.smScriptIcon = 34;
    this.smScriptPrint = 36;
    this.smScriptTrap = 38;
    this.smScriptCreator = 40;
    this.smScriptFile = 42;
    this.smScriptName = 44;
    this.smScriptMonoFondSize = 78;
    this.smScriptPrefFondSize = 80;
    this.smScriptSmallFondSize = 82;
    this.smScriptSysFondSize = 84;
    this.smScriptAppFondSize = 86;
    this.smScriptHelpFondSize = 88;
    this.smScriptValidStyles = 90;
    this.smScriptAliasStyle = 92;
    this.smLayoutCache = -309;
    this.smOldVerbSupport = -311;
    this.smSetKashidas = -291;
    this.smSetKashProp = -287;
    this.smScriptSysBase = -281;
    this.smScriptAppBase = -283;
    this.smScriptFntBase = -285;
    this.smScriptLigatures = -263;
    this.smScriptNumbers = -267;
}

// Based on /System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Math64.h
function Math64_h(lib) {

    if (this._MATH64_H)
        return;
    this._MATH64_H = true;

    // Dropping inline function 'SInt64ToWide'.
    // Dropping inline function 'WideToSInt64'.
    // Dropping inline function 'UInt64ToUnsignedWide'.
    // Dropping inline function 'UnsignedWideToUInt64'.
}

// Based on /System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Multiprocessing.h
function Multiprocessing_h(lib) {
    MacTypes_h.call(this, lib);

    if (this._MULTIPROCESSING_H)
        return;
    this._MULTIPROCESSING_H = true;

    this.MPLibrary_MajorVersion = 2;
    this.MPLibrary_MinorVersion = 3;
    this.MPLibrary_Release = 1;
    this.MPLibrary_DevelopmentRevision = 1;
    this.OpaqueMPProcessID = new ctypes.StructType("OpaqueMPProcessID");
    this.MPProcessID = this.OpaqueMPProcessID.ptr;
    this.OpaqueMPTaskID = new ctypes.StructType("OpaqueMPTaskID");
    this.MPTaskID = this.OpaqueMPTaskID.ptr;
    this.OpaqueMPQueueID = new ctypes.StructType("OpaqueMPQueueID");
    this.MPQueueID = this.OpaqueMPQueueID.ptr;
    this.OpaqueMPSemaphoreID = new ctypes.StructType("OpaqueMPSemaphoreID");
    this.MPSemaphoreID = this.OpaqueMPSemaphoreID.ptr;
    this.OpaqueMPCriticalRegionID = new ctypes.StructType("OpaqueMPCriticalRegionID");
    this.MPCriticalRegionID = this.OpaqueMPCriticalRegionID.ptr;
    this.OpaqueMPTimerID = new ctypes.StructType("OpaqueMPTimerID");
    this.MPTimerID = this.OpaqueMPTimerID.ptr;
    this.OpaqueMPEventID = new ctypes.StructType("OpaqueMPEventID");
    this.MPEventID = this.OpaqueMPEventID.ptr;
    this.OpaqueMPAddressSpaceID = new ctypes.StructType("OpaqueMPAddressSpaceID");
    this.MPAddressSpaceID = this.OpaqueMPAddressSpaceID.ptr;
    this.OpaqueMPNotificationID = new ctypes.StructType("OpaqueMPNotificationID");
    this.MPNotificationID = this.OpaqueMPNotificationID.ptr;
    this.OpaqueMPCoherenceID = new ctypes.StructType("OpaqueMPCoherenceID");
    this.MPCoherenceID = this.OpaqueMPCoherenceID.ptr;
    this.OpaqueMPCpuID = new ctypes.StructType("OpaqueMPCpuID");
    this.MPCpuID = this.OpaqueMPCpuID.ptr;
    this.OpaqueMPAreaID = new ctypes.StructType("OpaqueMPAreaID");
    this.MPAreaID = this.OpaqueMPAreaID.ptr;
    this.OpaqueMPConsoleID = new ctypes.StructType("OpaqueMPConsoleID");
    this.MPConsoleID = this.OpaqueMPConsoleID.ptr;
    this.OpaqueMPOpaqueID = new ctypes.StructType("OpaqueMPOpaqueID");
    this.MPOpaqueID = this.OpaqueMPOpaqueID.ptr;
    this.kOpaqueAnyID = 0;
    this.kOpaqueProcessID = 1;
    this.kOpaqueTaskID = 2;
    this.kOpaqueTimerID = 3;
    this.kOpaqueQueueID = 4;
    this.kOpaqueSemaphoreID = 5;
    this.kOpaqueCriticalRegionID = 6;
    this.kOpaqueCpuID = 7;
    this.kOpaqueAddressSpaceID = 8;
    this.kOpaqueEventID = 9;
    this.kOpaqueCoherenceID = 10;
    this.kOpaqueAreaID = 11;
    this.kOpaqueNotificationID = 12;
    this.kOpaqueConsoleID = 13;
    this.MPOpaqueIDClass = this.UInt32;
    this.kMPNoID = 0;
    this.MPTaskOptions = this.OptionBits;
    this.TaskStorageIndex = this.ItemCount;
    this.TaskStorageValue = this.LogicalAddress;
    this.MPSemaphoreCount = this.ItemCount;
    this.MPTaskWeight = this.UInt32;
    this.MPEventFlags = this.UInt32;
    this.MPExceptionKind = this.UInt32;
    this.MPTaskStateKind = this.UInt32;
    this.MPPageSizeClass = this.UInt32;
    this.kDurationImmediate = 0;
    this.kDurationForever = 2147483647;
    this.kDurationMillisecond = 1;
    this.kDurationMicrosecond = -1;
    this.kMPCreateTaskSuspendedMask = 1;
    this.kMPCreateTaskTakesAllExceptionsMask = 2;
    this.kMPCreateTaskNotDebuggableMask = 4;
    this.kMPCreateTaskValidOptionsMask = 7;
    this.TaskProc = new ctypes.FunctionType(ctypes.default_abi, this.OSStatus, [ctypes.void_t.ptr]).ptr;
    this.kMPPreserveTimerIDMask = 1;
    this.kMPTimeIsDeltaMask = 2;
    this.kMPTimeIsDurationMask = 4;
    this.kMPMaxAllocSize = 1073741824;
    this.kMPAllocateDefaultAligned = 0;
    this.kMPAllocate8ByteAligned = 3;
    this.kMPAllocate16ByteAligned = 4;
    this.kMPAllocate32ByteAligned = 5;
    this.kMPAllocate1024ByteAligned = 10;
    this.kMPAllocate4096ByteAligned = 12;
    this.kMPAllocateMaxAlignment = 16;
    this.kMPAllocateAltiVecAligned = 4;
    this.kMPAllocateVMXAligned = 4;
    this.kMPAllocateVMPageAligned = 254;
    this.kMPAllocateInterlockAligned = 255;
    this.kMPAllocateClearMask = 1;
    this.kMPAllocateGloballyMask = 2;
    this.kMPAllocateResidentMask = 4;
    this.kMPAllocateNoGrowthMask = 16;
    this.kMPAllocateNoCreateMask = 32;
    this.kMPTaskStateRegisters = 0;
    this.kMPTaskStateFPU = 1;
    this.kMPTaskStateVectors = 2;
    this.kMPTaskStateMachine = 3;
    this.kMPTaskState32BitMemoryException = 4;
    this.kMPTaskStateTaskInfo = 5;
    this.kMPTaskPropagate = 0;
    this.kMPTaskResumeStep = 1;
    this.kMPTaskResumeBranch = 2;
    this.kMPTaskResumeMask = 0;
    this.kMPTaskPropagateMask = 1;
    this.kMPTaskResumeStepMask = 2;
    this.kMPTaskResumeBranchMask = 4;
    this.kMPTaskBlocked = 0;
    this.kMPTaskReady = 1;
    this.kMPTaskRunning = 2;
    this.kMPTaskInfoVersion = 3;
    this.MPTaskInfoVersion2 = new ctypes.StructType("MPTaskInfoVersion2", [{version: this.PBVersion}, {name: this.OSType}, {queueName: this.OSType}, {runState: this.UInt16}, {lastCPU: this.UInt16}, {weight: this.UInt32}, {processID: this.MPProcessID}, {cpuTime: this.AbsoluteTime}, {schedTime: this.AbsoluteTime}, {creationTime: this.AbsoluteTime}, {codePageFaults: this.ItemCount}, {dataPageFaults: this.ItemCount}, {preemptions: this.ItemCount}, {cpuID: this.MPCpuID}]);
    this.MPTaskInfo = new ctypes.StructType("MPTaskInfo", [{version: this.PBVersion}, {name: this.OSType}, {queueName: this.OSType}, {runState: this.UInt16}, {lastCPU: this.UInt16}, {weight: this.UInt32}, {processID: this.MPProcessID}, {cpuTime: this.AbsoluteTime}, {schedTime: this.AbsoluteTime}, {creationTime: this.AbsoluteTime}, {codePageFaults: this.ItemCount}, {dataPageFaults: this.ItemCount}, {preemptions: this.ItemCount}, {cpuID: this.MPCpuID}, {blockedObject: this.MPOpaqueID}, {spaceID: this.MPAddressSpaceID}, {stackBase: this.LogicalAddress}, {stackLimit: this.LogicalAddress}, {stackCurr: this.LogicalAddress}]);
    this.MPDebuggerLevel = this.UInt32;
    this.kMPLowLevelDebugger = 0;
    this.kMPMidLevelDebugger = 268435456;
    this.kMPHighLevelDebugger = 536870912;
    this.MPRemoteProcedure = new ctypes.FunctionType(ctypes.default_abi, ctypes.void_t.ptr, [ctypes.void_t.ptr]).ptr;
    this.MPRemoteContext = this.UInt8;
    this.kMPAnyRemoteContext = 0;
    this.kMPOwningProcessRemoteContext = 1;
    this.kMPInterruptRemoteContext = 2;
    this.kMPAsyncInterruptRemoteContext = 3;
    this.MPIsFullyInitializedProc = new ctypes.FunctionType(ctypes.default_abi, this.Boolean, []).ptr;
}

// Based on /System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Resources.h
function Resources_h(lib) {
    Files_h.call(this, lib);
    MacTypes_h.call(this, lib);

    if (this._RESOURCES_H)
        return;
    this._RESOURCES_H = true;

    this.ResID = this.SInt16;
    this.ResAttributes = this.SInt16;
    this.ResFileAttributes = this.SInt16;
    this.ResourceCount = this.SInt16;
    this.ResourceIndex = this.SInt16;
    this.ResFileRefNum = this.FSIORefNum;
    this.resSysRefBit = 7;
    this.resSysHeapBit = 6;
    this.resPurgeableBit = 5;
    this.resLockedBit = 4;
    this.resProtectedBit = 3;
    this.resPreloadBit = 2;
    this.resChangedBit = 1;
    this.resSysHeap = 64;
    this.resPurgeable = 32;
    this.resLocked = 16;
    this.resProtected = 8;
    this.resPreload = 4;
    this.resChanged = 2;
    this.mapReadOnlyBit = 7;
    this.mapCompactBit = 6;
    this.mapChangedBit = 5;
    this.mapReadOnly = 128;
    this.mapCompact = 64;
    this.mapChanged = 32;
    this.kResFileNotOpened = -1;
    this.kSystemResFile = 0;
    this.ResErrProcPtr = new ctypes.FunctionType(ctypes.default_abi, ctypes.void_t, [this.OSErr]).ptr;
    this.ResErrUPP = this.ResErrProcPtr;
    // Dropping inline function 'NewResErrUPP'.
    // Dropping inline function 'DisposeResErrUPP'.
    // Dropping inline function 'InvokeResErrUPP'.
    this.ResourceEndianFilterPtr = new ctypes.FunctionType(ctypes.default_abi, this.OSErr, [this.Handle, this.Boolean]).ptr;
    this.RsrcChainLocation = this.SInt16;
    this.kRsrcChainBelowSystemMap = 0;
    this.kRsrcChainBelowApplicationMap = 1;
    this.kRsrcChainAboveApplicationMap = 2;
    this.kRsrcChainAboveAllMaps = 4;
}

// Based on /System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/CodeFragments.h
function CodeFragments_h(lib) {
    Files_h.call(this, lib);
    Multiprocessing_h.call(this, lib);
    MacTypes_h.call(this, lib);
    CFBundle_h.call(this, lib);

    if (this._CODEFRAGMENTS_H)
        return;
    this._CODEFRAGMENTS_H = true;

    this.kCFragResourceType = 1667658343;
    this.kCFragResourceID = 0;
    this.kCFragLibraryFileType = 1936223330;
    this.kCFragAllFileTypes = -1;
    this.CFragArchitecture = this.OSType;
    this.kPowerPCCFragArch = 1886875747;
    this.kMotorola68KCFragArch = 1832269931;
    this.kAnyCFragArch = 1061109567;
    this.kCompiledCFragArch = 1852796517;
    this.CFragVersionNumber = this.UInt32;
    this.kNullCFragVersion = 0;
    this.kWildcardCFragVersion = -1;
    this.CFragUsage = this.UInt8;
    this.kImportLibraryCFrag = 0;
    this.kApplicationCFrag = 1;
    this.kDropInAdditionCFrag = 2;
    this.kStubLibraryCFrag = 3;
    this.kWeakStubLibraryCFrag = 4;
    this.kIsCompleteCFrag = 0;
    this.kFirstCFragUpdate = 1;
    this.kCFragGoesToEOF = 0;
    this.CFragLocatorKind = this.UInt8;
    this.kMemoryCFragLocator = 0;
    this.kDataForkCFragLocator = 1;
    this.kResourceCFragLocator = 2;
    this.kNamedFragmentCFragLocator = 4;
    this.kCFBundleCFragLocator = 5;
    this.kCFBundlePreCFragLocator = 6;
    this.CFragUsage1Union = new ctypes.StructType("CFragUsage1Union", [{appStackSize: this.UInt32}]);
    this.CFragUsage2Union = new ctypes.StructType("CFragUsage2Union", [{appSubdirID: this.SInt16}, {libFlags: this.UInt16}]);
    this.kCFragLibUsageMapPrivatelyMask = 1;
    this.CFragWhere1Union = new ctypes.StructType("CFragWhere1Union", [{spaceID: this.UInt32}]);
    this.CFragWhere2Union = new ctypes.StructType("CFragWhere2Union", [{reserved: this.UInt16}]);
    this.kDefaultCFragNameLen = 16;
    this.CFragResourceMember = new ctypes.StructType("CFragResourceMember", [{architecture: this.CFragArchitecture}, {reservedA: this.UInt16}, {reservedB: this.UInt8}, {updateLevel: this.UInt8}, {currentVersion: this.CFragVersionNumber}, {oldDefVersion: this.CFragVersionNumber}, {uUsage1: this.CFragUsage1Union}, {uUsage2: this.CFragUsage2Union}, {usage: this.CFragUsage}, {where: this.CFragLocatorKind}, {offset: this.UInt32}, {length: this.UInt32}, {uWhere1: this.CFragWhere1Union}, {uWhere2: this.CFragWhere2Union}, {extensionCount: this.UInt16}, {memberSize: this.UInt16}, {name: ctypes.unsigned_char.array(16)}]);
    this.CFragResourceMemberPtr = this.CFragResourceMember.ptr;
    this.CFragResourceExtensionHeader = new ctypes.StructType("CFragResourceExtensionHeader", [{extensionKind: this.UInt16}, {extensionSize: this.UInt16}]);
    this.CFragResourceExtensionHeaderPtr = this.CFragResourceExtensionHeader.ptr;
    this.CFragResourceSearchExtension = new ctypes.StructType("CFragResourceSearchExtension", [{header: this.CFragResourceExtensionHeader}, {libKind: this.OSType}, {qualifiers: ctypes.unsigned_char.array(1)}]);
    this.CFragResourceSearchExtensionPtr = this.CFragResourceSearchExtension.ptr;
    this.kCFragResourceSearchExtensionKind = 12526;
    this.CFragResource = new ctypes.StructType("CFragResource", [{reservedA: this.UInt32}, {reservedB: this.UInt32}, {reservedC: this.UInt16}, {version: this.UInt16}, {reservedD: this.UInt32}, {reservedE: this.UInt32}, {reservedF: this.UInt32}, {reservedG: this.UInt32}, {reservedH: this.UInt16}, {memberCount: this.UInt16}, {firstMember: this.CFragResourceMember}]);
    this.CFragResourcePtr = this.CFragResource.ptr;
    this.CFragResourceHandle = this.CFragResourcePtr.ptr;
    this.kCurrCFragResourceVersion = 1;
    this.CFragContextID = this.MPProcessID;
    this.OpaqueCFragConnectionID = new ctypes.StructType("OpaqueCFragConnectionID");
    this.CFragConnectionID = this.OpaqueCFragConnectionID.ptr;
    this.OpaqueCFragClosureID = new ctypes.StructType("OpaqueCFragClosureID");
    this.CFragClosureID = this.OpaqueCFragClosureID.ptr;
    this.OpaqueCFragContainerID = new ctypes.StructType("OpaqueCFragContainerID");
    this.CFragContainerID = this.OpaqueCFragContainerID.ptr;
    this.CFragLoadOptions = this.OptionBits;
    this.kReferenceCFrag = 1;
    this.kFindCFrag = 2;
    this.kPrivateCFragCopy = 5;
    this.kUnresolvedCFragSymbolAddress = 0;
    this.CFragSymbolClass = this.UInt8;
    this.kCodeCFragSymbol = 0;
    this.kDataCFragSymbol = 1;
    this.kTVectorCFragSymbol = 2;
    this.kTOCCFragSymbol = 3;
    this.kGlueCFragSymbol = 4;
    this.CFragSystem7MemoryLocator = new ctypes.StructType("CFragSystem7MemoryLocator", [{address: this.LogicalAddress}, {length: this.UInt32}, {inPlace: this.Boolean}, {reservedA: this.UInt8}, {reservedB: this.UInt16}]);
    this.CFragSystem7DiskFlatLocator = new ctypes.StructType("CFragSystem7DiskFlatLocator", [{fileSpec: this.FSSpec.ptr}, {offset: this.UInt32}, {length: this.UInt32}]);
    this.CFragSystem7SegmentedLocator = new ctypes.StructType("CFragSystem7SegmentedLocator", [{fileSpec: this.FSSpec.ptr}, {rsrcType: this.OSType}, {rsrcID: this.SInt16}, {reservedA: this.UInt16}]);
    this.CFragCFBundleLocator = new ctypes.StructType("CFragCFBundleLocator", [{fragmentBundle: this.CFBundleRef}, {offset: this.UInt32}, {length: this.UInt32}]);
    this.CFragSystem7Locator = new ctypes.StructType("CFragSystem7Locator", []);
    this.CFragSystem7LocatorPtr = this.CFragSystem7Locator.ptr;
    this.CFragSystem7InitBlock = new ctypes.StructType("CFragSystem7InitBlock", [{contextID: this.CFragContextID}, {closureID: this.CFragClosureID}, {connectionID: this.CFragConnectionID}, {fragLocator: this.CFragSystem7Locator}, {libName: this.StringPtr}, {reservedA: this.UInt32}]);
    this.CFragSystem7InitBlockPtr = this.CFragSystem7InitBlock.ptr;
    this.CFragInitBlock = this.CFragSystem7InitBlock;
    this.CFragInitBlockPtr = this.CFragSystem7InitBlockPtr;
    this.CFragInitFunction = new ctypes.FunctionType(ctypes.default_abi, this.OSErr, [this.CFragInitBlock.ptr]).ptr;
    this.CFragTermProcedure = new ctypes.FunctionType(ctypes.default_abi, ctypes.void_t, []).ptr;
    this.kLoadCFrag = 1;
}

// Based on /System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Folders.h
function Folders_h(lib) {
    MacTypes_h.call(this, lib);

    if (this._FOLDERS_H)
        return;
    this._FOLDERS_H = true;

    this.kOnSystemDisk = -32768;
    this.kOnAppropriateDisk = -32767;
    this.kSystemDomain = -32766;
    this.kLocalDomain = -32765;
    this.kNetworkDomain = -32764;
    this.kUserDomain = -32763;
    this.kClassicDomain = -32762;
    this.kFolderManagerLastDomain = -32760;
    this.kLastDomainConstant = -32760;
    this.kCreateFolder = 1;
    this.kDontCreateFolder = 0;
    this.kDesktopFolderType = 1684370283;
    this.kTrashFolderType = 1953657704;
    this.kWhereToEmptyTrashFolderType = 1701671028;
    this.kFontsFolderType = 1718578804;
    this.kPreferencesFolderType = 1886545254;
    this.kSystemPreferencesFolderType = 1936749158;
    this.kTemporaryFolderType = 1952804208;
    this.kChewableItemsFolderType = 1718382196;
    this.kTemporaryItemsInCacheDataFolderType = 1987341680;
    this.kApplicationsFolderType = 1634758771;
    this.kVolumeRootFolderType = 1919905652;
    this.kDomainTopLevelFolderType = 1685352304;
    this.kDomainLibraryFolderType = 1684826466;
    this.kUsersFolderType = 1970500211;
    this.kCurrentUserFolderType = 1668641650;
    this.kSharedUserDataFolderType = 1935958388;
    this.kDocumentsFolderType = 1685021555;
    this.kPictureDocumentsFolderType = 1885630307;
    this.kMovieDocumentsFolderType = 1835298659;
    this.kMusicDocumentsFolderType = -1251709085;
    this.kInternetSitesFolderType = 1936290917;
    this.kPublicFolderType = 1886741090;
    this.kSharedLibrariesFolderType = -999528094;
    this.kVoicesFolderType = 1719037795;
    this.kUtilitiesFolderType = 1970563524;
    this.kThemesFolderType = 1953000805;
    this.kFavoritesFolderType = 1717663347;
    this.kInternetSearchSitesFolderType = 1769173862;
    this.kInstallerLogsFolderType = 1768712038;
    this.kScriptsFolderType = 1935897284;
    this.kFolderActionsFolderType = 1717662566;
    this.kSpeakableItemsFolderType = 1936747369;
    this.kKeychainFolderType = 1801676910;
    this.kColorSyncFolderType = 1937337955;
    this.kColorSyncCMMFolderType = 1667460461;
    this.kColorSyncScriptingFolderType = 1668506482;
    this.kPrintersFolderType = 1768779890;
    this.kSpeechFolderType = 1936745320;
    this.kCarbonLibraryFolderType = 1667330658;
    this.kDocumentationFolderType = 1768842863;
    this.kISSDownloadsFolderType = 1769173860;
    this.kUserSpecificTmpFolderType = 1970564464;
    this.kCachedDataFolderType = 1667326824;
    this.kFrameworksFolderType = 1718772077;
    this.kPrivateFrameworksFolderType = 1885762157;
    this.kClassicDesktopFolderType = 1935962987;
    this.kSystemSoundsFolderType = 1936944740;
    this.kComponentsFolderType = 1668116580;
    this.kQuickTimeComponentsFolderType = 2003004784;
    this.kCoreServicesFolderType = 1668510326;
    this.kAudioSupportFolderType = 1633970543;
    this.kAudioPresetsFolderType = 1634759540;
    this.kAudioSoundsFolderType = 1634954852;
    this.kAudioSoundBanksFolderType = 1650552427;
    this.kAudioAlertSoundsFolderType = 1634497140;
    this.kAudioPlugInsFolderType = 1634757735;
    this.kAudioComponentsFolderType = 1633906032;
    this.kKernelExtensionsFolderType = 1801812084;
    this.kDirectoryServicesFolderType = 1685287542;
    this.kDirectoryServicesPlugInsFolderType = 1685089383;
    this.kInstallerReceiptsFolderType = 1919119476;
    this.kFileSystemSupportFolderType = 1718843763;
    this.kAppleShareSupportFolderType = 1936220530;
    this.kAppleShareAuthenticationFolderType = 1635087464;
    this.kMIDIDriversFolderType = 1835623529;
    this.kKeyboardLayoutsFolderType = 1802264953;
    this.kIndexFilesFolderType = 1768842360;
    this.kFindByContentIndexesFolderType = 1717724024;
    this.kManagedItemsFolderType = 1835101799;
    this.kBootTimeStartupItemsFolderType = 1701671034;
    this.kAutomatorWorkflowsFolderType = 1718382455;
    this.kAutosaveInformationFolderType = 1634951542;
    this.kSpotlightSavedSearchesFolderType = 1936748404;
    this.kSpotlightImportersFolderType = 1936289136;
    this.kSpotlightMetadataCacheFolderType = 1935893352;
    this.kInputManagersFolderType = 1768845428;
    this.kInputMethodsFolderType = 1768845414;
    this.kLibraryAssistantsFolderType = 1634956396;
    this.kAudioDigidesignFolderType = 1633970535;
    this.kAudioVSTFolderType = 1635152756;
    this.kColorPickersFolderType = 1668311922;
    this.kCompositionsFolderType = 1668116595;
    this.kFontCollectionsFolderType = 1718510444;
    this.kiMovieFolderType = 1768779638;
    this.kiMoviePlugInsFolderType = 1768779881;
    this.kiMovieSoundEffectsFolderType = 1768780645;
    this.kDownloadsFolderType = 1685026670;
    this.kColorSyncProfilesFolderType = 1886547814;
    this.kApplicationSupportFolderType = 1634956656;
    this.kTextEncodingsFolderType = -999004808;
    this.kPrinterDescriptionFolderType = 1886413926;
    this.kPrinterDriverFolderType = -999263644;
    this.kScriptingAdditionsFolderType = -999070862;
    this.kClassicPreferencesFolderType = 1668313702;
    this.kQuickLookFolderType = 1902928747;
    this.kSystemFolderType = 1835098995;
    this.kSystemDesktopFolderType = 1935962987;
    this.kSystemTrashFolderType = 1937011315;
    this.kPrintMonitorDocsFolderType = 1886547572;
    this.kALMModulesFolderType = 2002873451;
    this.kALMPreferencesFolderType = 1953655152;
    this.kALMLocationsFolderType = 1717660780;
    this.kAppleExtrasFolderType = 1634040004;
    this.kContextualMenuItemsFolderType = 1668116085;
    this.kMacOSReadMesFolderType = 1836020420;
    this.kStartupFolderType = 1937011316;
    this.kShutdownFolderType = 1936221286;
    this.kAppleMenuFolderType = 1634561653;
    this.kControlPanelFolderType = 1668575852;
    this.kSystemControlPanelFolderType = 1935897708;
    this.kExtensionFolderType = 1702392942;
    this.kExtensionDisabledFolderType = 1702392900;
    this.kControlPanelDisabledFolderType = 1668575812;
    this.kSystemExtensionDisabledFolderType = 1835098948;
    this.kStartupItemsDisabledFolderType = 1937011268;
    this.kShutdownItemsDisabledFolderType = 1936221252;
    this.kAssistantsFolderType = 1634956484;
    this.kStationeryFolderType = 1868854132;
    this.kOpenDocFolderType = 1868853092;
    this.kOpenDocShellPlugInsFolderType = 1868854128;
    this.kEditorsFolderType = 1868850532;
    this.kOpenDocEditorsFolderType = -999332762;
    this.kOpenDocLibrariesFolderType = 1868852322;
    this.kGenEditorsFolderType = -999988119;
    this.kHelpFolderType = -999789456;
    this.kInternetPlugInFolderType = -999398028;
    this.kModemScriptsFolderType = -999461020;
    this.kControlStripModulesFolderType = 1935959414;
    this.kInternetFolderType = 1768846532;
    this.kAppearanceFolderType = 1634758770;
    this.kSoundSetsFolderType = 1936614515;
    this.kDesktopPicturesFolderType = 1685352644;
    this.kFindSupportFolderType = 1718510707;
    this.kRecentApplicationsFolderType = 1918988400;
    this.kRecentDocumentsFolderType = 1919184739;
    this.kRecentServersFolderType = 1920169586;
    this.kLauncherItemsFolderType = 1818326382;
    this.kQuickTimeExtensionsFolderType = 1903453560;
    this.kDisplayExtensionsFolderType = 1685287020;
    this.kMultiprocessingFolderType = 1836087398;
    this.kPrintingPlugInsFolderType = 1886415975;
    this.kAppleshareAutomountServerAliasesFolderType = 1936881348;
    this.kVolumeSettingsFolderType = 1987274340;
    this.kPreMacOS91ApplicationsFolderType = -1938788237;
    this.kPreMacOS91InstallerLogsFolderType = -1804834970;
    this.kPreMacOS91AssistantsFolderType = -1938590524;
    this.kPreMacOS91UtilitiesFolderType = -1619760700;
    this.kPreMacOS91AppleExtrasFolderType = -1939507004;
    this.kPreMacOS91MacOSReadMesFolderType = -1250987324;
    this.kPreMacOS91InternetFolderType = -1804700476;
    this.kPreMacOS91AutomountedServersFolderType = -1485670716;
    this.kPreMacOS91StationeryFolderType = -1083935884;
    this.kLocalesFolderType = -999526557;
    this.kFindByContentPluginsFolderType = 1717724016;
    this.kFindByContentFolderType = 1717724006;
    this.kMagicTemporaryItemsFolderType = 1836346736;
    this.kTemporaryItemsInUserDomainFolderType = 1952804209;
    this.kCurrentUserRemoteFolderLocation = 1920299878;
    this.kCurrentUserRemoteFolderType = 1920299890;
    this.kDeveloperDocsFolderType = 1684303715;
    this.kDeveloperHelpFolderType = 1684371048;
    this.kDeveloperFolderType = 1684371046;
    this.kDeveloperApplicationsFolderType = 1684107376;
    this.kCreateFolderAtBoot = 2;
    this.kCreateFolderAtBootBit = 1;
    this.kFolderCreatedInvisible = 4;
    this.kFolderCreatedInvisibleBit = 2;
    this.kFolderCreatedNameLocked = 8;
    this.kFolderCreatedNameLockedBit = 3;
    this.kFolderCreatedAdminPrivs = 16;
    this.kFolderCreatedAdminPrivsBit = 4;
    this.kFolderInUserFolder = 32;
    this.kFolderInUserFolderBit = 5;
    this.kFolderTrackedByAlias = 64;
    this.kFolderTrackedByAliasBit = 6;
    this.kFolderInRemoteUserFolderIfAvailable = 128;
    this.kFolderInRemoteUserFolderIfAvailableBit = 7;
    this.kFolderNeverMatchedInIdentifyFolder = 256;
    this.kFolderNeverMatchedInIdentifyFolderBit = 8;
    this.kFolderMustStayOnSameVolume = 512;
    this.kFolderMustStayOnSameVolumeBit = 9;
    this.kFolderManagerFolderInMacOS9FolderIfMacOSXIsInstalledMask = 1024;
    this.kFolderManagerFolderInMacOS9FolderIfMacOSXIsInstalledBit = 10;
    this.kFolderInLocalOrRemoteUserFolder = 160;
    this.kFolderManagerNotCreatedOnRemoteVolumesBit = 11;
    this.kFolderManagerNotCreatedOnRemoteVolumesMask = 2048;
    this.kFolderManagerNewlyCreatedFolderIsLocalizedBit = 12;
    this.kFolderManagerNewlyCreatedFolderShouldHaveDotLocalizedCreatedWithinMask = 4096;
    this.FolderDescFlags = this.UInt32;
    this.kRelativeFolder = 1919249510;
    this.kRedirectedRelativeFolder = 1920099692;
    this.kSpecialFolder = 1936745318;
    this.FolderClass = this.OSType;
    this.kBlessedFolder = 1651274598;
    this.kRootFolder = 1919906918;
    this.kCurrentUserFolderLocation = 1668641638;
    this.kDictionariesFolderType = 1684628340;
    this.kLogsFolderType = 1819240307;
    this.kPreferencePanesFolderType = 1886413166;
    this.kWidgetsFolderType = 2003068788;
    this.kScreenSaversFolderType = 1935897198;
    this.FolderType = this.OSType;
    this.FolderLocation = this.OSType;
    this.FolderDesc = new ctypes.StructType("FolderDesc", [{descSize: this.Size}, {foldType: this.FolderType}, {flags: this.FolderDescFlags}, {foldClass: this.FolderClass}, {foldLocation: this.FolderType}, {badgeSignature: this.OSType}, {badgeType: this.OSType}, {reserved: this.UInt32}, {name: this.StrFileName}]);
    this.FolderDescPtr = this.FolderDesc.ptr;
    this.RoutingFlags = this.UInt32;
    this.FolderRouting = new ctypes.StructType("FolderRouting", [{descSize: this.Size}, {fileType: this.OSType}, {routeFromFolder: this.FolderType}, {routeToFolder: this.FolderType}, {flags: this.RoutingFlags}]);
    this.FolderRoutingPtr = this.FolderRouting.ptr;
    this.FolderManagerNotificationProcPtr = new ctypes.FunctionType(ctypes.default_abi, this.OSStatus, [this.OSType, ctypes.void_t.ptr, ctypes.void_t.ptr]).ptr;
    this.FolderManagerNotificationUPP = this.FolderManagerNotificationProcPtr;
    // Dropping inline function 'NewFolderManagerNotificationUPP'.
    // Dropping inline function 'DisposeFolderManagerNotificationUPP'.
    // Dropping inline function 'InvokeFolderManagerNotificationUPP'.
}

// Based on /System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/FixMath.h
function FixMath_h(lib) {

    if (this._FIXMATH_H)
        return;
    this._FIXMATH_H = true;

}

// Based on /System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Collections.h
function Collections_h(lib) {
    MacTypes_h.call(this, lib);

    if (this._COLLECTIONS_H)
        return;
    this._COLLECTIONS_H = true;

    this.kCollectionDontWantTag = 0;
    this.kCollectionDontWantId = 0;
    this.kCollectionDontWantSize = 0;
    this.kCollectionDontWantAttributes = 0;
    this.kCollectionDontWantIndex = 0;
    this.kCollectionDontWantData = 0;
    this.kCollectionNoAttributes = 0;
    this.kCollectionAllAttributes = -1;
    this.kCollectionUserAttributes = 65535;
    this.kCollectionDefaultAttributes = 1073741824;
    this.kCollectionUser0Bit = 0;
    this.kCollectionUser1Bit = 1;
    this.kCollectionUser2Bit = 2;
    this.kCollectionUser3Bit = 3;
    this.kCollectionUser4Bit = 4;
    this.kCollectionUser5Bit = 5;
    this.kCollectionUser6Bit = 6;
    this.kCollectionUser7Bit = 7;
    this.kCollectionUser8Bit = 8;
    this.kCollectionUser9Bit = 9;
    this.kCollectionUser10Bit = 10;
    this.kCollectionUser11Bit = 11;
    this.kCollectionUser12Bit = 12;
    this.kCollectionUser13Bit = 13;
    this.kCollectionUser14Bit = 14;
    this.kCollectionUser15Bit = 15;
    this.kCollectionReserved0Bit = 16;
    this.kCollectionReserved1Bit = 17;
    this.kCollectionReserved2Bit = 18;
    this.kCollectionReserved3Bit = 19;
    this.kCollectionReserved4Bit = 20;
    this.kCollectionReserved5Bit = 21;
    this.kCollectionReserved6Bit = 22;
    this.kCollectionReserved7Bit = 23;
    this.kCollectionReserved8Bit = 24;
    this.kCollectionReserved9Bit = 25;
    this.kCollectionReserved10Bit = 26;
    this.kCollectionReserved11Bit = 27;
    this.kCollectionReserved12Bit = 28;
    this.kCollectionReserved13Bit = 29;
    this.kCollectionPersistenceBit = 30;
    this.kCollectionLockBit = 31;
    this.kCollectionUser0Mask = 1;
    this.kCollectionUser1Mask = 2;
    this.kCollectionUser2Mask = 4;
    this.kCollectionUser3Mask = 8;
    this.kCollectionUser4Mask = 16;
    this.kCollectionUser5Mask = 32;
    this.kCollectionUser6Mask = 64;
    this.kCollectionUser7Mask = 128;
    this.kCollectionUser8Mask = 256;
    this.kCollectionUser9Mask = 512;
    this.kCollectionUser10Mask = 1024;
    this.kCollectionUser11Mask = 2048;
    this.kCollectionUser12Mask = 4096;
    this.kCollectionUser13Mask = 8192;
    this.kCollectionUser14Mask = 16384;
    this.kCollectionUser15Mask = 32768;
    this.kCollectionReserved0Mask = 65536;
    this.kCollectionReserved1Mask = 131072;
    this.kCollectionReserved2Mask = 262144;
    this.kCollectionReserved3Mask = 524288;
    this.kCollectionReserved4Mask = 1048576;
    this.kCollectionReserved5Mask = 2097152;
    this.kCollectionReserved6Mask = 4194304;
    this.kCollectionReserved7Mask = 8388608;
    this.kCollectionReserved8Mask = 16777216;
    this.kCollectionReserved9Mask = 33554432;
    this.kCollectionReserved10Mask = 67108864;
    this.kCollectionReserved11Mask = 134217728;
    this.kCollectionReserved12Mask = 268435456;
    this.kCollectionReserved13Mask = 536870912;
    this.kCollectionPersistenceMask = 1073741824;
    this.kCollectionLockMask = -2147483648;
    this.OpaqueCollection = new ctypes.StructType("OpaqueCollection");
    this.Collection = this.OpaqueCollection.ptr;
    this.CollectionTag = this.FourCharCode;
    this.CollectionFlattenProcPtr = new ctypes.FunctionType(ctypes.default_abi, this.OSErr, [this.SInt32, ctypes.void_t.ptr, ctypes.void_t.ptr]).ptr;
    this.CollectionExceptionProcPtr = new ctypes.FunctionType(ctypes.default_abi, this.OSErr, [this.Collection, this.OSErr]).ptr;
    this.CollectionFlattenUPP = this.CollectionFlattenProcPtr;
    this.CollectionExceptionUPP = this.CollectionExceptionProcPtr;
    // Dropping inline function 'NewCollectionFlattenUPP'.
    // Dropping inline function 'NewCollectionExceptionUPP'.
    // Dropping inline function 'DisposeCollectionFlattenUPP'.
    // Dropping inline function 'DisposeCollectionExceptionUPP'.
    // Dropping inline function 'InvokeCollectionFlattenUPP'.
    // Dropping inline function 'InvokeCollectionExceptionUPP'.
}

// Based on /System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/PEFBinaryFormat.h
function PEFBinaryFormat_h(lib) {
    MacTypes_h.call(this, lib);

    if (this._PEFBINARYFORMAT_H)
        return;
    this._PEFBINARYFORMAT_H = true;

    this.PEFContainerHeader = new ctypes.StructType("PEFContainerHeader", [{tag1: this.OSType}, {tag2: this.OSType}, {architecture: this.OSType}, {formatVersion: this.UInt32}, {dateTimeStamp: this.UInt32}, {oldDefVersion: this.UInt32}, {oldImpVersion: this.UInt32}, {currentVersion: this.UInt32}, {sectionCount: this.UInt16}, {instSectionCount: this.UInt16}, {reservedA: this.UInt32}]);
    this.kPEFTag1 = 1248819489;
    this.kPEFTag2 = 1885693542;
    this.kPEFVersion = 1;
    this.kPEFFirstSectionHeaderOffset = 40;
    this.PEFSectionHeader = new ctypes.StructType("PEFSectionHeader", [{nameOffset: this.SInt32}, {defaultAddress: this.UInt32}, {totalLength: this.UInt32}, {unpackedLength: this.UInt32}, {containerLength: this.UInt32}, {containerOffset: this.UInt32}, {sectionKind: this.UInt8}, {shareKind: this.UInt8}, {alignment: this.UInt8}, {reservedA: this.UInt8}]);
    this.kPEFCodeSection = 0;
    this.kPEFUnpackedDataSection = 1;
    this.kPEFPackedDataSection = 2;
    this.kPEFConstantSection = 3;
    this.kPEFExecDataSection = 6;
    this.kPEFLoaderSection = 4;
    this.kPEFDebugSection = 5;
    this.kPEFExceptionSection = 7;
    this.kPEFTracebackSection = 8;
    this.kPEFProcessShare = 1;
    this.kPEFGlobalShare = 4;
    this.kPEFProtectedShare = 5;
    this.kPEFPkDataZero = 0;
    this.kPEFPkDataBlock = 1;
    this.kPEFPkDataRepeat = 2;
    this.kPEFPkDataRepeatBlock = 3;
    this.kPEFPkDataRepeatZero = 4;
    this.kPEFPkDataOpcodeShift = 5;
    this.kPEFPkDataCount5Mask = 31;
    this.kPEFPkDataMaxCount5 = 31;
    this.kPEFPkDataVCountShift = 7;
    this.kPEFPkDataVCountMask = 127;
    this.kPEFPkDataVCountEndMask = 128;
    this.PEFLoaderInfoHeader = new ctypes.StructType("PEFLoaderInfoHeader", [{mainSection: this.SInt32}, {mainOffset: this.UInt32}, {initSection: this.SInt32}, {initOffset: this.UInt32}, {termSection: this.SInt32}, {termOffset: this.UInt32}, {importedLibraryCount: this.UInt32}, {totalImportedSymbolCount: this.UInt32}, {relocSectionCount: this.UInt32}, {relocInstrOffset: this.UInt32}, {loaderStringsOffset: this.UInt32}, {exportHashOffset: this.UInt32}, {exportHashTablePower: this.UInt32}, {exportedSymbolCount: this.UInt32}]);
    this.PEFImportedLibrary = new ctypes.StructType("PEFImportedLibrary", [{nameOffset: this.UInt32}, {oldImpVersion: this.UInt32}, {currentVersion: this.UInt32}, {importedSymbolCount: this.UInt32}, {firstImportedSymbol: this.UInt32}, {options: this.UInt8}, {reservedA: this.UInt8}, {reservedB: this.UInt16}]);
    this.kPEFWeakImportLibMask = 64;
    this.kPEFInitLibBeforeMask = 128;
    this.PEFImportedSymbol = new ctypes.StructType("PEFImportedSymbol", [{classAndName: this.UInt32}]);
    this.kPEFImpSymClassShift = 24;
    this.kPEFImpSymNameOffsetMask = 16777215;
    this.kPEFImpSymMaxNameOffset = 16777215;
    this.kPEFCodeSymbol = 0;
    this.kPEFDataSymbol = 1;
    this.kPEFTVectorSymbol = 2;
    this.kPEFTOCSymbol = 3;
    this.kPEFGlueSymbol = 4;
    this.kPEFUndefinedSymbol = 15;
    this.kPEFWeakImportSymMask = 128;
    this.PEFExportedSymbolHashSlot = new ctypes.StructType("PEFExportedSymbolHashSlot", [{countAndStart: this.UInt32}]);
    this.kPEFHashSlotSymCountShift = 18;
    this.kPEFHashSlotFirstKeyMask = 262143;
    this.kPEFHashSlotMaxSymbolCount = 16383;
    this.kPEFHashSlotMaxKeyIndex = 262143;
    this.PEFSplitHashWord = new ctypes.StructType("PEFSplitHashWord", [{nameLength: this.UInt16}, {hashValue: this.UInt16}]);
    this.PEFExportedSymbolKey = new ctypes.StructType("PEFExportedSymbolKey", []);
    this.kPEFHashLengthShift = 16;
    this.kPEFHashValueMask = 65535;
    this.kPEFHashMaxLength = 65535;
    this.PEFExportedSymbol = new ctypes.StructType("PEFExportedSymbol", [{classAndName: this.UInt32}, {symbolValue: this.UInt32}, {sectionIndex: this.SInt16}]);
    this.kPEFExpSymClassShift = 24;
    this.kPEFExpSymNameOffsetMask = 16777215;
    this.kPEFExpSymMaxNameOffset = 16777215;
    this.kPEFAbsoluteExport = -2;
    this.kPEFReexportedImport = -3;
    this.PEFRelocChunk = this.UInt16;
    this.PEFLoaderRelocationHeader = new ctypes.StructType("PEFLoaderRelocationHeader", [{sectionIndex: this.UInt16}, {reservedA: this.UInt16}, {relocCount: this.UInt32}, {firstRelocOffset: this.UInt32}]);
    this.kPEFRelocBasicOpcodeRange = 128;
    this.kPEFRelocBySectDWithSkip = 0;
    this.kPEFRelocBySectC = 32;
    this.kPEFRelocBySectD = 33;
    this.kPEFRelocTVector12 = 34;
    this.kPEFRelocTVector8 = 35;
    this.kPEFRelocVTable8 = 36;
    this.kPEFRelocImportRun = 37;
    this.kPEFRelocSmByImport = 48;
    this.kPEFRelocSmSetSectC = 49;
    this.kPEFRelocSmSetSectD = 50;
    this.kPEFRelocSmBySection = 51;
    this.kPEFRelocIncrPosition = 64;
    this.kPEFRelocSmRepeat = 72;
    this.kPEFRelocSetPosition = 80;
    this.kPEFRelocLgByImport = 82;
    this.kPEFRelocLgRepeat = 88;
    this.kPEFRelocLgSetOrBySection = 90;
    this.kPEFRelocUndefinedOpcode = 255;
    this.kPEFRelocLgBySectionSubopcode = 0;
    this.kPEFRelocLgSetSectCSubopcode = 1;
    this.kPEFRelocLgSetSectDSubopcode = 2;
    this.kPEFRelocWithSkipMaxSkipCount = 255;
    this.kPEFRelocWithSkipMaxRelocCount = 63;
    this.kPEFRelocRunMaxRunLength = 512;
    this.kPEFRelocSmIndexMaxIndex = 511;
    this.kPEFRelocIncrPositionMaxOffset = 4096;
    this.kPEFRelocSmRepeatMaxChunkCount = 16;
    this.kPEFRelocSmRepeatMaxRepeatCount = 256;
    this.kPEFRelocSetPosMaxOffset = 67108863;
    this.kPEFRelocLgByImportMaxIndex = 67108863;
    this.kPEFRelocLgRepeatMaxChunkCount = 16;
    this.kPEFRelocLgRepeatMaxRepeatCount = 4194303;
    this.kPEFRelocLgSetOrBySectionMaxIndex = 4194303;
    this.XLibContainerHeader = new ctypes.StructType("XLibContainerHeader", [{tag1: this.OSType}, {tag2: this.OSType}, {currentFormat: this.UInt32}, {containerStringsOffset: this.UInt32}, {exportHashOffset: this.UInt32}, {exportKeyOffset: this.UInt32}, {exportSymbolOffset: this.UInt32}, {exportNamesOffset: this.UInt32}, {exportHashTablePower: this.UInt32}, {exportedSymbolCount: this.UInt32}, {fragNameOffset: this.UInt32}, {fragNameLength: this.UInt32}, {dylibPathOffset: this.UInt32}, {dylibPathLength: this.UInt32}, {cpuFamily: this.OSType}, {cpuModel: this.OSType}, {dateTimeStamp: this.UInt32}, {currentVersion: this.UInt32}, {oldDefVersion: this.UInt32}, {oldImpVersion: this.UInt32}]);
    this.kXLibTag1 = -263364253;
    this.kVLibTag2 = 1447848290;
    this.kBLibTag2 = 1112303970;
    this.kXLibVersion = 1;
    this.XLibExportedSymbolHashSlot = this.PEFExportedSymbolHashSlot;
    this.XLibExportedSymbolKey = this.PEFExportedSymbolKey;
    this.XLibExportedSymbol = new ctypes.StructType("XLibExportedSymbol", [{classAndName: this.UInt32}, {bpOffset: this.UInt32}]);
}

// Based on /System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/MacMemory.h
function MacMemory_h(lib) {
    MacTypes_h.call(this, lib);

    if (this._MACMEMORY_H)
        return;
    this._MACMEMORY_H = true;

    this.maxSize = 2147483632;
    this.defaultPhysicalEntryCount = 8;
    this.kPageInMemory = 0;
    this.kPageOnDisk = 1;
    this.kNotPaged = 2;
    this.k32BitHeap = 1;
    this.kNewStyleHeap = 2;
    this.kNewDebugHeap = 4;
    this.kHandleIsResourceBit = 5;
    this.kHandlePurgeableBit = 6;
    this.kHandleLockedBit = 7;
    this.kHandleIsResourceMask = 32;
    this.kHandlePurgeableMask = 64;
    this.kHandleLockedMask = 128;
    this.GrowZoneProcPtr = new ctypes.FunctionType(ctypes.default_abi, ctypes.long, [this.Size]).ptr;
    this.PurgeProcPtr = new ctypes.FunctionType(ctypes.default_abi, ctypes.void_t, [this.Handle]).ptr;
    this.UserFnProcPtr = new ctypes.FunctionType(ctypes.default_abi, ctypes.void_t, [ctypes.void_t.ptr]).ptr;
    this.GrowZoneUPP = this.GrowZoneProcPtr;
    this.PurgeUPP = this.PurgeProcPtr;
    this.UserFnUPP = this.UserFnProcPtr;
    this.Zone = new ctypes.StructType("Zone", [{bkLim: this.Ptr}, {purgePtr: this.Ptr}, {hFstFree: this.Ptr}, {zcbFree: ctypes.long}, {gzProc: this.GrowZoneUPP}, {moreMast: ctypes.short}, {flags: ctypes.short}, {cntRel: ctypes.short}, {maxRel: ctypes.short}, {cntNRel: ctypes.short}, {heapType: this.SInt8}, {unused: this.SInt8}, {cntEmpty: ctypes.short}, {cntHandles: ctypes.short}, {minCBFree: ctypes.long}, {purgeProc: this.PurgeUPP}, {sparePtr: this.Ptr}, {allocPtr: this.Ptr}, {heapData: ctypes.short}]);
    this.THz = this.Zone.ptr;
    this.THzPtr = this.THz.ptr;
    this.MemoryBlock = new ctypes.StructType("MemoryBlock", [{address: ctypes.void_t.ptr}, {count: ctypes.unsigned_long}]);
    this.LogicalToPhysicalTable = new ctypes.StructType("LogicalToPhysicalTable", [{logical: this.MemoryBlock}, {physical: this.MemoryBlock.array(8)}]);
    this.PageState = ctypes.short;
    this.StatusRegisterContents = ctypes.short;
    this.kVolumeVirtualMemoryInfoVersion1 = 1;
    this.VolumeVirtualMemoryInfo = new ctypes.StructType("VolumeVirtualMemoryInfo", [{version: this.PBVersion}, {volumeRefNum: this.SInt16}, {inUse: this.Boolean}, {_fill: this.UInt8}, {vmOptions: this.UInt32}]);
    this.VolumeVirtualMemoryInfoPtr = this.VolumeVirtualMemoryInfo.ptr;
    // Dropping inline function 'NewGrowZoneUPP'.
    // Dropping inline function 'NewPurgeUPP'.
    // Dropping inline function 'NewUserFnUPP'.
    // Dropping inline function 'DisposeGrowZoneUPP'.
    // Dropping inline function 'DisposePurgeUPP'.
    // Dropping inline function 'DisposeUserFnUPP'.
    // Dropping inline function 'InvokeGrowZoneUPP'.
    // Dropping inline function 'InvokePurgeUPP'.
    // Dropping inline function 'InvokeUserFnUPP'.
    // Dropping inline function 'BlockMove'.
    // Dropping inline function 'BlockMoveData'.
    // Dropping inline function 'BlockMoveUncached'.
    // Dropping inline function 'BlockMoveDataUncached'.
    // Dropping inline function 'BlockZero'.
    // Dropping inline function 'BlockZeroUncached'.
}

// Based on /System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Components.h
function Components_h(lib) {
    MacTypes_h.call(this, lib);

    if (this._COMPONENTS_H)
        return;
    this._COMPONENTS_H = true;

    this.kAppleManufacturer = 1634758764;
    this.kComponentResourceType = 1953001063;
    this.kComponentAliasResourceType = 1952999265;
    this.kAnyComponentType = 0;
    this.kAnyComponentSubType = 0;
    this.kAnyComponentManufacturer = 0;
    this.kAnyComponentFlagsMask = 0;
    this.cmpThreadSafe = 268435456;
    this.cmpIsMissing = 536870912;
    this.cmpWantsRegisterMessage = -2147483648;
    this.kComponentOpenSelect = -1;
    this.kComponentCloseSelect = -2;
    this.kComponentCanDoSelect = -3;
    this.kComponentVersionSelect = -4;
    this.kComponentRegisterSelect = -5;
    this.kComponentTargetSelect = -6;
    this.kComponentUnregisterSelect = -7;
    this.kComponentGetMPWorkFunctionSelect = -8;
    this.kComponentExecuteWiredActionSelect = -9;
    this.kComponentGetPublicResourceSelect = -10;
    this.componentDoAutoVersion = 1;
    this.componentWantsUnregister = 2;
    this.componentAutoVersionIncludeFlags = 4;
    this.componentHasMultiplePlatforms = 8;
    this.componentLoadResident = 16;
    this.defaultComponentIdentical = 0;
    this.defaultComponentAnyFlags = 1;
    this.defaultComponentAnyManufacturer = 2;
    this.defaultComponentAnySubType = 4;
    this.defaultComponentAnyFlagsAnyManufacturer = 3;
    this.defaultComponentAnyFlagsAnyManufacturerAnySubType = 7;
    this.registerComponentGlobal = 1;
    this.registerComponentNoDuplicates = 2;
    this.registerComponentAfterExisting = 4;
    this.registerComponentAliasesOnly = 8;
    this.ComponentDescription = new ctypes.StructType("ComponentDescription", [{componentType: this.OSType}, {componentSubType: this.OSType}, {componentManufacturer: this.OSType}, {componentFlags: this.UInt32}, {componentFlagsMask: this.UInt32}]);
    this.ResourceSpec = new ctypes.StructType("ResourceSpec", [{resType: this.OSType}, {resID: this.SInt16}]);
    this.ComponentResource = new ctypes.StructType("ComponentResource", [{cd: this.ComponentDescription}, {component: this.ResourceSpec}, {componentName: this.ResourceSpec}, {componentInfo: this.ResourceSpec}, {componentIcon: this.ResourceSpec}]);
    this.ComponentResourcePtr = this.ComponentResource.ptr;
    this.ComponentResourceHandle = this.ComponentResourcePtr.ptr;
    this.ComponentPlatformInfo = new ctypes.StructType("ComponentPlatformInfo", [{componentFlags: this.SInt32}, {component: this.ResourceSpec}, {platformType: this.SInt16}]);
    this.ComponentResourceExtension = new ctypes.StructType("ComponentResourceExtension", [{componentVersion: this.SInt32}, {componentRegisterFlags: this.SInt32}, {componentIconFamily: this.SInt16}]);
    this.ComponentPlatformInfoArray = new ctypes.StructType("ComponentPlatformInfoArray", [{count: this.SInt32}, {platformArray: this.ComponentPlatformInfo.array(1)}]);
    this.ExtComponentResource = new ctypes.StructType("ExtComponentResource", [{cd: this.ComponentDescription}, {component: this.ResourceSpec}, {componentName: this.ResourceSpec}, {componentInfo: this.ResourceSpec}, {componentIcon: this.ResourceSpec}, {componentVersion: this.SInt32}, {componentRegisterFlags: this.SInt32}, {componentIconFamily: this.SInt16}, {count: this.SInt32}, {platformArray: this.ComponentPlatformInfo.array(1)}]);
    this.ExtComponentResourcePtr = this.ExtComponentResource.ptr;
    this.ExtComponentResourceHandle = this.ExtComponentResourcePtr.ptr;
    this.ComponentAliasResource = new ctypes.StructType("ComponentAliasResource", [{cr: this.ComponentResource}, {aliasCD: this.ComponentDescription}]);
    this.ComponentParameters = new ctypes.StructType("ComponentParameters", [{flags: this.UInt8}, {paramSize: this.UInt8}, {what: this.SInt16}, {params: ctypes.long.array(1)}]);
    this.ComponentRecord = new ctypes.StructType("ComponentRecord", [{data: ctypes.long.array(1)}]);
    this.Component = this.ComponentRecord.ptr;
    this.ComponentInstanceRecord = new ctypes.StructType("ComponentInstanceRecord", [{data: ctypes.long.array(1)}]);
    this.ComponentInstance = this.ComponentInstanceRecord.ptr;
    this.RegisteredComponentRecord = new ctypes.StructType("RegisteredComponentRecord", [{data: ctypes.long.array(1)}]);
    this.RegisteredComponentRecordPtr = this.RegisteredComponentRecord.ptr;
    this.RegisteredComponentInstanceRecord = new ctypes.StructType("RegisteredComponentInstanceRecord", [{data: ctypes.long.array(1)}]);
    this.RegisteredComponentInstanceRecordPtr = this.RegisteredComponentInstanceRecord.ptr;
    this.ComponentResult = this.SInt32;
    this.platform68k = 1;
    this.platformPowerPC = 2;
    this.platformInterpreted = 3;
    this.platformWin32 = 4;
    this.platformPowerPCNativeEntryPoint = 5;
    this.platformIA32NativeEntryPoint = 6;
    this.platformPowerPC64NativeEntryPoint = 7;
    this.platformX86_64NativeEntryPoint = 8;
    this.platformIRIXmips = 1000;
    this.platformSunOSsparc = 1100;
    this.platformSunOSintel = 1101;
    this.platformLinuxppc = 1200;
    this.platformLinuxintel = 1201;
    this.platformAIXppc = 1300;
    this.platformNeXTIntel = 1400;
    this.platformNeXTppc = 1401;
    this.platformNeXTsparc = 1402;
    this.platformNeXT68k = 1403;
    this.platformMacOSx86 = 1500;
    this.mpWorkFlagDoWork = 1;
    this.mpWorkFlagDoCompletion = 2;
    this.mpWorkFlagCopyWorkBlock = 4;
    this.mpWorkFlagDontBlock = 8;
    this.mpWorkFlagGetProcessorCount = 16;
    this.mpWorkFlagGetIsRunning = 64;
    this.cmpAliasNoFlags = 0;
    this.cmpAliasOnlyThisFile = 1;
    this.CSComponentsThreadMode = this.UInt32;
    this.kCSAcceptAllComponentsMode = 0;
    this.kCSAcceptThreadSafeComponentsOnlyMode = 1;
    this.ComponentMPWorkFunctionHeaderRecord = new ctypes.StructType("ComponentMPWorkFunctionHeaderRecord", [{headerSize: this.UInt32}, {recordSize: this.UInt32}, {workFlags: this.UInt32}, {processorCount: this.UInt16}, {unused: this.UInt8}, {isRunning: this.UInt8}]);
    this.ComponentMPWorkFunctionHeaderRecordPtr = this.ComponentMPWorkFunctionHeaderRecord.ptr;
    this.ComponentMPWorkFunctionProcPtr = new ctypes.FunctionType(ctypes.default_abi, this.ComponentResult, [ctypes.void_t.ptr, this.ComponentMPWorkFunctionHeaderRecordPtr]).ptr;
    this.ComponentRoutineProcPtr = new ctypes.FunctionType(ctypes.default_abi, this.ComponentResult, [this.ComponentParameters.ptr, this.Handle]).ptr;
    this.GetMissingComponentResourceProcPtr = new ctypes.FunctionType(ctypes.default_abi, this.OSErr, [this.Component, this.OSType, this.SInt16, ctypes.void_t.ptr, this.Handle.ptr]).ptr;
    this.ComponentMPWorkFunctionUPP = this.ComponentMPWorkFunctionProcPtr;
    this.ComponentRoutineUPP = this.ComponentRoutineProcPtr;
    this.GetMissingComponentResourceUPP = this.GetMissingComponentResourceProcPtr;
    this.ComponentFunctionUPP = this.UniversalProcPtr;
    // Dropping inline function 'NewComponentMPWorkFunctionUPP'.
    // Dropping inline function 'NewComponentRoutineUPP'.
    // Dropping inline function 'NewGetMissingComponentResourceUPP'.
    // Dropping inline function 'DisposeComponentMPWorkFunctionUPP'.
    // Dropping inline function 'DisposeComponentRoutineUPP'.
    // Dropping inline function 'DisposeGetMissingComponentResourceUPP'.
    // Dropping inline function 'InvokeComponentMPWorkFunctionUPP'.
    // Dropping inline function 'InvokeComponentRoutineUPP'.
    // Dropping inline function 'InvokeGetMissingComponentResourceUPP'.
    this.uppComponentFunctionImplementedProcInfo = 752;
    this.uppGetComponentVersionProcInfo = 240;
    this.uppComponentSetTargetProcInfo = 1008;
    this.uppCallComponentOpenProcInfo = 1008;
    this.uppCallComponentCloseProcInfo = 1008;
    this.uppCallComponentCanDoProcInfo = 752;
    this.uppCallComponentVersionProcInfo = 240;
    this.uppCallComponentRegisterProcInfo = 240;
    this.uppCallComponentTargetProcInfo = 1008;
    this.uppCallComponentUnregisterProcInfo = 240;
    this.uppCallComponentGetMPWorkFunctionProcInfo = 4080;
    this.uppCallComponentGetPublicResourceProcInfo = 15344;
}

// Based on /System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Timer.h
function Timer_h(lib) {
    OSUtils_h.call(this, lib);

    if (this._TIMER_H)
        return;
    this._TIMER_H = true;

    this.kTMTaskActive = 32768;
    this.TMTaskPtr = this.TMTask.ptr;
    this.TimerProcPtr = new ctypes.FunctionType(ctypes.default_abi, ctypes.void_t, [this.TMTaskPtr]).ptr;
    this.TimerUPP = this.TimerProcPtr;
    this.TMTask = new ctypes.StructType("TMTask", [{qLink: this.QElemPtr}, {qType: ctypes.short}, {tmAddr: this.TimerUPP}, {tmCount: ctypes.long}, {tmWakeUp: ctypes.long}, {tmReserved: ctypes.long}]);
    // Dropping inline function 'NewTimerUPP'.
    // Dropping inline function 'DisposeTimerUPP'.
    // Dropping inline function 'InvokeTimerUPP'.
}

// Based on /System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/DateTimeUtils.h
function DateTimeUtils_h(lib) {
    MacTypes_h.call(this, lib);

    if (this._DATETIMEUTILS_H)
        return;
    this._DATETIMEUTILS_H = true;

    this.ToggleResults = this.SInt16;
    this.toggleUndefined = 0;
    this.toggleOK = 1;
    this.toggleBadField = 2;
    this.toggleBadDelta = 3;
    this.toggleBadChar = 4;
    this.toggleUnknown = 5;
    this.toggleBadNum = 6;
    this.toggleOutOfRange = 7;
    this.toggleErr3 = 7;
    this.toggleErr4 = 8;
    this.toggleErr5 = 9;
    this.smallDateBit = 31;
    this.togChar12HourBit = 30;
    this.togCharZCycleBit = 29;
    this.togDelta12HourBit = 28;
    this.genCdevRangeBit = 27;
    this.validDateFields = -1;
    this.maxDateField = 10;
    this.eraMask = 1;
    this.yearMask = 2;
    this.monthMask = 4;
    this.dayMask = 8;
    this.hourMask = 16;
    this.minuteMask = 32;
    this.secondMask = 64;
    this.dayOfWeekMask = 128;
    this.dayOfYearMask = 256;
    this.weekOfYearMask = 512;
    this.pmMask = 1024;
    this.dateStdMask = 127;
    this.LongDateField = this.SInt8;
    this.eraField = 0;
    this.yearField = 1;
    this.monthField = 2;
    this.dayField = 3;
    this.hourField = 4;
    this.minuteField = 5;
    this.secondField = 6;
    this.dayOfWeekField = 7;
    this.dayOfYearField = 8;
    this.weekOfYearField = 9;
    this.pmField = 10;
    this.res1Field = 11;
    this.res2Field = 12;
    this.res3Field = 13;
    this.DateForm = this.SInt8;
    this.shortDate = 0;
    this.longDate = 1;
    this.abbrevDate = 2;
    this.fatalDateTime = 32768;
    this.longDateFound = 1;
    this.leftOverChars = 2;
    this.sepNotIntlSep = 4;
    this.fieldOrderNotIntl = 8;
    this.extraneousStrings = 16;
    this.tooManySeps = 32;
    this.sepNotConsistent = 64;
    this.tokenErr = 33024;
    this.cantReadUtilities = 33280;
    this.dateTimeNotFound = 33792;
    this.dateTimeInvalid = 34816;
    this.StringToDateStatus = ctypes.short;
    this.String2DateStatus = this.StringToDateStatus;
    this.DateCacheRecord = new ctypes.StructType("DateCacheRecord", [{hidden: ctypes.short.array(256)}]);
    this.DateCachePtr = this.DateCacheRecord.ptr;
    this.DateTimeRec = new ctypes.StructType("DateTimeRec", [{year: ctypes.short}, {month: ctypes.short}, {day: ctypes.short}, {hour: ctypes.short}, {minute: ctypes.short}, {second: ctypes.short}, {dayOfWeek: ctypes.short}]);
    this.LongDateTime = this.SInt64;
    this.LongDateCvt = new ctypes.StructType("LongDateCvt", []);
    this.LongDateRec = new ctypes.StructType("LongDateRec", []);
    this.DateDelta = this.SInt8;
    this.TogglePB = new ctypes.StructType("TogglePB", [{togFlags: ctypes.long}, {amChars: this.ResType}, {pmChars: this.ResType}, {reserved: ctypes.long.array(4)}]);
}

// Based on /System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/IntlResources.h
function IntlResources_h(lib) {
    MacTypes_h.call(this, lib);

    if (this._INTLRESOURCES_H)
        return;
    this._INTLRESOURCES_H = true;

    this.itlcShowIcon = 7;
    this.itlcDualCaret = 6;
    this.itlcSysDirection = 15;
    this.itlcDisableKeyScriptSync = 3;
    this.itlcDisableKeyScriptSyncMask = 8;
    this.tokLeftQuote = 1;
    this.tokRightQuote = 2;
    this.tokLeadPlacer = 3;
    this.tokLeader = 4;
    this.tokNonLeader = 5;
    this.tokZeroLead = 6;
    this.tokPercent = 7;
    this.tokPlusSign = 8;
    this.tokMinusSign = 9;
    this.tokThousands = 10;
    this.tokReserved = 11;
    this.tokSeparator = 12;
    this.tokEscape = 13;
    this.tokDecPoint = 14;
    this.tokEPlus = 15;
    this.tokEMinus = 16;
    this.tokMaxSymbols = 31;
    this.curNumberPartsVersion = 1;
    this.currSymLead = 16;
    this.currNegSym = 32;
    this.currTrailingZ = 64;
    this.currLeadingZ = 128;
    this.mdy = 0;
    this.dmy = 1;
    this.ymd = 2;
    this.myd = 3;
    this.dym = 4;
    this.ydm = 5;
    this.DateOrders = this.SInt8;
    this.timeCycle24 = 0;
    this.timeCycleZero = 1;
    this.timeCycle12 = 255;
    this.zeroCycle = 1;
    this.longDay = 0;
    this.longWeek = 1;
    this.longMonth = 2;
    this.longYear = 3;
    this.supDay = 1;
    this.supWeek = 2;
    this.supMonth = 4;
    this.supYear = 8;
    this.dayLdingZ = 32;
    this.mntLdingZ = 64;
    this.century = 128;
    this.secLeadingZ = 32;
    this.minLeadingZ = 64;
    this.hrLeadingZ = 128;
    this.OffPair = new ctypes.StructType("OffPair", [{offFirst: ctypes.short}, {offSecond: ctypes.short}]);
    this.OffsetTable = this.OffPair.array(3);
    this.Intl0Rec = new ctypes.StructType("Intl0Rec", [{decimalPt: ctypes.char}, {thousSep: ctypes.char}, {listSep: ctypes.char}, {currSym1: ctypes.char}, {currSym2: ctypes.char}, {currSym3: ctypes.char}, {currFmt: this.UInt8}, {dateOrder: this.UInt8}, {shrtDateFmt: this.UInt8}, {dateSep: ctypes.char}, {timeCycle: this.UInt8}, {timeFmt: this.UInt8}, {mornStr: ctypes.char.array(4)}, {eveStr: ctypes.char.array(4)}, {timeSep: ctypes.char}, {time1Suff: ctypes.char}, {time2Suff: ctypes.char}, {time3Suff: ctypes.char}, {time4Suff: ctypes.char}, {time5Suff: ctypes.char}, {time6Suff: ctypes.char}, {time7Suff: ctypes.char}, {time8Suff: ctypes.char}, {metricSys: this.UInt8}, {intl0Vers: ctypes.short}]);
    this.Intl0Ptr = this.Intl0Rec.ptr;
    this.Intl0Hndl = this.Intl0Ptr.ptr;
    this.Intl1Rec = new ctypes.StructType("Intl1Rec", [{days: this.Str15.array(7)}, {months: this.Str15.array(12)}, {suppressDay: this.UInt8}, {lngDateFmt: this.UInt8}, {dayLeading0: this.UInt8}, {abbrLen: this.UInt8}, {st0: ctypes.char.array(4)}, {st1: ctypes.char.array(4)}, {st2: ctypes.char.array(4)}, {st3: ctypes.char.array(4)}, {st4: ctypes.char.array(4)}, {intl1Vers: ctypes.short}, {localRtn: ctypes.short.array(1)}]);
    this.Intl1Ptr = this.Intl1Rec.ptr;
    this.Intl1Hndl = this.Intl1Ptr.ptr;
    this.Itl1ExtRec = new ctypes.StructType("Itl1ExtRec", [{base: this.Intl1Rec}, {version: ctypes.short}, {format: ctypes.short}, {calendarCode: ctypes.short}, {extraDaysTableOffset: this.SInt32}, {extraDaysTableLength: this.SInt32}, {extraMonthsTableOffset: this.SInt32}, {extraMonthsTableLength: this.SInt32}, {abbrevDaysTableOffset: this.SInt32}, {abbrevDaysTableLength: this.SInt32}, {abbrevMonthsTableOffset: this.SInt32}, {abbrevMonthsTableLength: this.SInt32}, {extraSepsTableOffset: this.SInt32}, {extraSepsTableLength: this.SInt32}, {tables: ctypes.short.array(1)}]);
    this.UntokenTable = new ctypes.StructType("UntokenTable", [{len: ctypes.short}, {lastToken: ctypes.short}, {index: ctypes.short.array(256)}]);
    this.UntokenTablePtr = this.UntokenTable.ptr;
    this.UntokenTableHandle = this.UntokenTablePtr.ptr;
    this.WideChar = new ctypes.StructType("WideChar", []);
    this.WideCharArr = new ctypes.StructType("WideCharArr", [{size: ctypes.short}, {data: this.WideChar.array(10)}]);
    this.NumberParts = new ctypes.StructType("NumberParts", [{version: ctypes.short}, {data: this.WideChar.array(31)}, {pePlus: this.WideCharArr}, {peMinus: this.WideCharArr}, {peMinusPlus: this.WideCharArr}, {altNumTable: this.WideCharArr}, {reserved: ctypes.char.array(20)}]);
    this.NumberPartsPtr = this.NumberParts.ptr;
    this.Itl4Rec = new ctypes.StructType("Itl4Rec", [{flags: ctypes.short}, {resourceType: this.SInt32}, {resourceNum: ctypes.short}, {version: ctypes.short}, {resHeader1: this.SInt32}, {resHeader2: this.SInt32}, {numTables: ctypes.short}, {mapOffset: this.SInt32}, {strOffset: this.SInt32}, {fetchOffset: this.SInt32}, {unTokenOffset: this.SInt32}, {defPartsOffset: this.SInt32}, {resOffset6: this.SInt32}, {resOffset7: this.SInt32}, {resOffset8: this.SInt32}]);
    this.Itl4Ptr = this.Itl4Rec.ptr;
    this.Itl4Handle = this.Itl4Ptr.ptr;
    this.NItl4Rec = new ctypes.StructType("NItl4Rec", [{flags: ctypes.short}, {resourceType: this.SInt32}, {resourceNum: ctypes.short}, {version: ctypes.short}, {format: ctypes.short}, {resHeader: ctypes.short}, {resHeader2: this.SInt32}, {numTables: ctypes.short}, {mapOffset: this.SInt32}, {strOffset: this.SInt32}, {fetchOffset: this.SInt32}, {unTokenOffset: this.SInt32}, {defPartsOffset: this.SInt32}, {whtSpListOffset: this.SInt32}, {resOffset7: this.SInt32}, {resOffset8: this.SInt32}, {resLength1: ctypes.short}, {resLength2: ctypes.short}, {resLength3: ctypes.short}, {unTokenLength: ctypes.short}, {defPartsLength: ctypes.short}, {whtSpListLength: ctypes.short}, {resLength7: ctypes.short}, {resLength8: ctypes.short}]);
    this.NItl4Ptr = this.NItl4Rec.ptr;
    this.NItl4Handle = this.NItl4Ptr.ptr;
    this.TableDirectoryRecord = new ctypes.StructType("TableDirectoryRecord", [{tableSignature: this.OSType}, {reserved: this.UInt32}, {tableStartOffset: this.UInt32}, {tableSize: this.UInt32}]);
    this.Itl5Record = new ctypes.StructType("Itl5Record", [{versionNumber: this.Fixed}, {numberOfTables: ctypes.unsigned_short}, {reserved: ctypes.unsigned_short.array(3)}, {tableDirectory: this.TableDirectoryRecord.array(1)}]);
    this.RuleBasedTrslRecord = new ctypes.StructType("RuleBasedTrslRecord", [{sourceType: ctypes.short}, {targetType: ctypes.short}, {formatNumber: ctypes.short}, {propertyFlag: ctypes.short}, {numberOfRules: ctypes.short}]);
    this.ItlcRecord = new ctypes.StructType("ItlcRecord", [{itlcSystem: ctypes.short}, {itlcReserved: ctypes.short}, {itlcFontForce: this.SInt8}, {itlcIntlForce: this.SInt8}, {itlcOldKybd: this.SInt8}, {itlcFlags: this.SInt8}, {itlcIconOffset: ctypes.short}, {itlcIconSide: this.SInt8}, {itlcIconRsvd: this.SInt8}, {itlcRegionCode: ctypes.short}, {itlcSysFlags: ctypes.short}, {itlcReserved4: this.SInt8.array(32)}]);
    this.ItlbRecord = new ctypes.StructType("ItlbRecord", [{itlbNumber: ctypes.short}, {itlbDate: ctypes.short}, {itlbSort: ctypes.short}, {itlbFlags: ctypes.short}, {itlbToken: ctypes.short}, {itlbEncoding: ctypes.short}, {itlbLang: ctypes.short}, {itlbNumRep: this.SInt8}, {itlbDateRep: this.SInt8}, {itlbKeys: ctypes.short}, {itlbIcon: ctypes.short}]);
    this.ItlbExtRecord = new ctypes.StructType("ItlbExtRecord", [{base: this.ItlbRecord}, {itlbLocalSize: this.SInt32}, {itlbMonoFond: ctypes.short}, {itlbMonoSize: ctypes.short}, {itlbPrefFond: ctypes.short}, {itlbPrefSize: ctypes.short}, {itlbSmallFond: ctypes.short}, {itlbSmallSize: ctypes.short}, {itlbSysFond: ctypes.short}, {itlbSysSize: ctypes.short}, {itlbAppFond: ctypes.short}, {itlbAppSize: ctypes.short}, {itlbHelpFond: ctypes.short}, {itlbHelpSize: ctypes.short}, {itlbValidStyles: this.Style}, {itlbAliasStyle: this.Style}]);
}

// Based on /System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/TextUtils.h
function TextUtils_h(lib) {
    MacTypes_h.call(this, lib);

    if (this._TEXTUTILS_H)
        return;
    this._TEXTUTILS_H = true;

    this.ScriptRunStatus = new ctypes.StructType("ScriptRunStatus", [{script: this.SInt8}, {runVariant: this.SInt8}]);
    this.BreakTable = new ctypes.StructType("BreakTable", [{charTypes: ctypes.char.array(256)}, {tripleLength: ctypes.short}, {triples: ctypes.short.array(1)}]);
    this.BreakTablePtr = this.BreakTable.ptr;
    this.NBreakTable = new ctypes.StructType("NBreakTable", [{flags1: this.SInt8}, {flags2: this.SInt8}, {version: ctypes.short}, {classTableOff: ctypes.short}, {auxCTableOff: ctypes.short}, {backwdTableOff: ctypes.short}, {forwdTableOff: ctypes.short}, {doBackup: ctypes.short}, {length: ctypes.short}, {charTypes: ctypes.char.array(256)}, {tables: ctypes.short.array(1)}]);
    this.NBreakTablePtr = this.NBreakTable.ptr;
}

// Based on /System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/MixedMode.h
function MixedMode_h(lib) {
    MacTypes_h.call(this, lib);

    if (this._MIXEDMODE_H)
        return;
    this._MIXEDMODE_H = true;

    this.kRoutineDescriptorVersion = 7;
    this._MixedModeMagic = 43774;
    this.kCurrentMixedModeStateRecord = 1;
    this.CallingConventionType = ctypes.unsigned_short;
    this.kPascalStackBased = 0;
    this.kCStackBased = 1;
    this.kRegisterBased = 2;
    this.kD0DispatchedPascalStackBased = 8;
    this.kD1DispatchedPascalStackBased = 12;
    this.kD0DispatchedCStackBased = 9;
    this.kStackDispatchedPascalStackBased = 14;
    this.kThinkCStackBased = 5;
    this.ISAType = this.SInt8;
    this.kM68kISA = 0;
    this.kPowerPCISA = 1;
    this.kX86ISA = 2;
    this.RTAType = this.SInt8;
    this.kOld68kRTA = 0;
    this.kPowerPCRTA = 0;
    this.kCFM68kRTA = 16;
    this.kX86RTA = 32;
    this.kRegisterD0 = 0;
    this.kRegisterD1 = 1;
    this.kRegisterD2 = 2;
    this.kRegisterD3 = 3;
    this.kRegisterD4 = 8;
    this.kRegisterD5 = 9;
    this.kRegisterD6 = 10;
    this.kRegisterD7 = 11;
    this.kRegisterA0 = 4;
    this.kRegisterA1 = 5;
    this.kRegisterA2 = 6;
    this.kRegisterA3 = 7;
    this.kRegisterA4 = 12;
    this.kRegisterA5 = 13;
    this.kRegisterA6 = 14;
    this.kCCRegisterCBit = 16;
    this.kCCRegisterVBit = 17;
    this.kCCRegisterZBit = 18;
    this.kCCRegisterNBit = 19;
    this.kCCRegisterXBit = 20;
    this.registerSelectorType = ctypes.unsigned_short;
    this.kNoByteCode = 0;
    this.kOneByteCode = 1;
    this.kTwoByteCode = 2;
    this.kFourByteCode = 3;
    this.ProcInfoType = ctypes.unsigned_long;
    this.RoutineFlagsType = ctypes.unsigned_short;
    this.kProcDescriptorIsAbsolute = 0;
    this.kProcDescriptorIsRelative = 1;
    this.kFragmentIsPrepared = 0;
    this.kFragmentNeedsPreparing = 2;
    this.kUseCurrentISA = 0;
    this.kUseNativeISA = 4;
    this.kPassSelector = 0;
    this.kDontPassSelector = 8;
    this.kRoutineIsNotDispatchedDefaultRoutine = 0;
    this.kRoutineIsDispatchedDefaultRoutine = 16;
    this.kProcDescriptorIsProcPtr = 0;
    this.kProcDescriptorIsIndex = 32;
    this.RoutineRecord = new ctypes.StructType("RoutineRecord", [{procInfo: this.ProcInfoType}, {reserved1: this.SInt8}, {ISA: this.ISAType}, {routineFlags: this.RoutineFlagsType}, {procDescriptor: this.ProcPtr}, {reserved2: this.UInt32}, {selector: this.UInt32}]);
    this.RoutineRecordPtr = this.RoutineRecord.ptr;
    this.RoutineRecordHandle = this.RoutineRecordPtr.ptr;
    this.RDFlagsType = this.UInt8;
    this.kSelectorsAreNotIndexable = 0;
    this.kSelectorsAreIndexable = 1;
    this.RoutineDescriptor = new ctypes.StructType("RoutineDescriptor", [{goMixedModeTrap: this.UInt16}, {version: this.SInt8}, {routineDescriptorFlags: this.RDFlagsType}, {reserved1: this.UInt32}, {reserved2: this.UInt8}, {selectorInfo: this.UInt8}, {routineCount: this.UInt16}, {routineRecords: this.RoutineRecord.array(1)}]);
    this.RoutineDescriptorPtr = this.RoutineDescriptor.ptr;
    this.RoutineDescriptorHandle = this.RoutineDescriptorPtr.ptr;
    this.MixedModeStateRecord = new ctypes.StructType("MixedModeStateRecord", [{state1: this.UInt32}, {state2: this.UInt32}, {state3: this.UInt32}, {state4: this.UInt32}]);
    this.kCallingConventionWidth = 4;
    this.kCallingConventionPhase = 0;
    this.kCallingConventionMask = 15;
    this.kResultSizeWidth = 2;
    this.kResultSizePhase = 4;
    this.kResultSizeMask = 48;
    this.kStackParameterWidth = 2;
    this.kStackParameterPhase = 6;
    this.kStackParameterMask = -64;
    this.kRegisterResultLocationWidth = 5;
    this.kRegisterResultLocationPhase = 6;
    this.kRegisterParameterWidth = 5;
    this.kRegisterParameterPhase = 11;
    this.kRegisterParameterMask = 2147481600;
    this.kRegisterParameterSizePhase = 0;
    this.kRegisterParameterSizeWidth = 2;
    this.kRegisterParameterWhichPhase = 2;
    this.kRegisterParameterWhichWidth = 3;
    this.kDispatchedSelectorSizeWidth = 2;
    this.kDispatchedSelectorSizePhase = 6;
    this.kDispatchedParameterPhase = 8;
    this.kSpecialCaseSelectorWidth = 6;
    this.kSpecialCaseSelectorPhase = 4;
    this.kSpecialCaseSelectorMask = 1008;
    this.kSpecialCase = 15;
    this.kSpecialCaseHighHook = 0;
    this.kSpecialCaseCaretHook = 0;
    this.kSpecialCaseEOLHook = 1;
    this.kSpecialCaseWidthHook = 2;
    this.kSpecialCaseTextWidthHook = 2;
    this.kSpecialCaseNWidthHook = 3;
    this.kSpecialCaseDrawHook = 4;
    this.kSpecialCaseHitTestHook = 5;
    this.kSpecialCaseTEFindWord = 6;
    this.kSpecialCaseProtocolHandler = 7;
    this.kSpecialCaseSocketListener = 8;
    this.kSpecialCaseTERecalc = 9;
    this.kSpecialCaseTEDoText = 10;
    this.kSpecialCaseGNEFilterProc = 11;
    this.kSpecialCaseMBarHook = 12;
}

// Based on /System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/StringCompare.h
function StringCompare_h(lib) {

    if (this._STRINGCOMPARE_H)
        return;
    this._STRINGCOMPARE_H = true;

    this.systemCurLang = -2;
    this.systemDefLang = -3;
    this.currentCurLang = -4;
    this.currentDefLang = -5;
    this.scriptCurLang = -6;
    this.scriptDefLang = -7;
    this.iuSystemCurLang = -2;
    this.iuSystemDefLang = -3;
    this.iuCurrentCurLang = -4;
    this.iuCurrentDefLang = -5;
    this.iuScriptCurLang = -6;
    this.iuScriptDefLang = -7;
}

// Based on /System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/fp.h
function fp_h(lib) {

    if (this._FP_H)
        return;
    this._FP_H = true;

    this.relop = ctypes.short;
    this.GREATERTHAN = 0;
    this.LESSTHAN = 1;
    this.EQUALTO = 2;
    this.UNORDERED = 3;
    this.decimal = new ctypes.StructType("decimal", []);
    this.decform = new ctypes.StructType("decform", [{style: ctypes.char}, {unused: ctypes.char}, {digits: ctypes.short}]);
}

// Based on /System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/MacLocales.h
function MacLocales_h(lib) {
    MacTypes_h.call(this, lib);

    if (this._MACLOCALES_H)
        return;
    this._MACLOCALES_H = true;

    this.OpaqueLocaleRef = new ctypes.StructType("OpaqueLocaleRef");
    this.LocaleRef = this.OpaqueLocaleRef.ptr;
    this.LocalePartMask = this.UInt32;
    this.kLocaleLanguageMask = 1;
    this.kLocaleLanguageVariantMask = 2;
    this.kLocaleScriptMask = 4;
    this.kLocaleScriptVariantMask = 8;
    this.kLocaleRegionMask = 16;
    this.kLocaleRegionVariantMask = 32;
    this.kLocaleAllPartsMask = 63;
    this.LocaleOperationClass = this.FourCharCode;
    this.LocaleOperationVariant = this.FourCharCode;
    this.LocaleAndVariant = new ctypes.StructType("LocaleAndVariant", [{locale: this.LocaleRef}, {opVariant: this.LocaleOperationVariant}]);
    this.LocaleNameMask = this.UInt32;
    this.kLocaleNameMask = 1;
    this.kLocaleOperationVariantNameMask = 2;
    this.kLocaleAndVariantNameMask = 3;
}

// Based on /System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/UnicodeUtilities.h
function UnicodeUtilities_h(lib) {
    CFBase_h.call(this, lib);
    MacTypes_h.call(this, lib);

    if (this._UNICODEUTILITIES_H)
        return;
    this._UNICODEUTILITIES_H = true;

    this.UCKeyOutput = this.UInt16;
    this.UCKeyCharSeq = this.UInt16;
    this.kUCKeyOutputStateIndexMask = 16384;
    this.kUCKeyOutputSequenceIndexMask = 32768;
    this.kUCKeyOutputTestForIndexMask = 49152;
    this.kUCKeyOutputGetIndexMask = 16383;
    this.UCKeyStateRecord = new ctypes.StructType("UCKeyStateRecord", [{stateZeroCharData: this.UCKeyCharSeq}, {stateZeroNextState: this.UInt16}, {stateEntryCount: this.UInt16}, {stateEntryFormat: this.UInt16}, {stateEntryData: this.UInt32.array(1)}]);
    this.kUCKeyStateEntryTerminalFormat = 1;
    this.kUCKeyStateEntryRangeFormat = 2;
    this.UCKeyStateEntryTerminal = new ctypes.StructType("UCKeyStateEntryTerminal", [{curState: this.UInt16}, {charData: this.UCKeyCharSeq}]);
    this.UCKeyStateEntryRange = new ctypes.StructType("UCKeyStateEntryRange", [{curStateStart: this.UInt16}, {curStateRange: this.UInt8}, {deltaMultiplier: this.UInt8}, {charData: this.UCKeyCharSeq}, {nextState: this.UInt16}]);
    this.UCKeyboardTypeHeader = new ctypes.StructType("UCKeyboardTypeHeader", [{keyboardTypeFirst: this.UInt32}, {keyboardTypeLast: this.UInt32}, {keyModifiersToTableNumOffset: this.UInt32}, {keyToCharTableIndexOffset: this.UInt32}, {keyStateRecordsIndexOffset: this.UInt32}, {keyStateTerminatorsOffset: this.UInt32}, {keySequenceDataIndexOffset: this.UInt32}]);
    this.UCKeyboardLayout = new ctypes.StructType("UCKeyboardLayout", [{keyLayoutHeaderFormat: this.UInt16}, {keyLayoutDataVersion: this.UInt16}, {keyLayoutFeatureInfoOffset: this.UInt32}, {keyboardTypeCount: this.UInt32}, {keyboardTypeList: this.UCKeyboardTypeHeader.array(1)}]);
    this.UCKeyLayoutFeatureInfo = new ctypes.StructType("UCKeyLayoutFeatureInfo", [{keyLayoutFeatureInfoFormat: this.UInt16}, {reserved: this.UInt16}, {maxOutputStringLength: this.UInt32}]);
    this.UCKeyModifiersToTableNum = new ctypes.StructType("UCKeyModifiersToTableNum", [{keyModifiersToTableNumFormat: this.UInt16}, {defaultTableNum: this.UInt16}, {modifiersCount: this.UInt32}, {tableNum: this.UInt8.array(1)}]);
    this.UCKeyToCharTableIndex = new ctypes.StructType("UCKeyToCharTableIndex", [{keyToCharTableIndexFormat: this.UInt16}, {keyToCharTableSize: this.UInt16}, {keyToCharTableCount: this.UInt32}, {keyToCharTableOffsets: this.UInt32.array(1)}]);
    this.UCKeyStateRecordsIndex = new ctypes.StructType("UCKeyStateRecordsIndex", [{keyStateRecordsIndexFormat: this.UInt16}, {keyStateRecordCount: this.UInt16}, {keyStateRecordOffsets: this.UInt32.array(1)}]);
    this.UCKeyStateTerminators = new ctypes.StructType("UCKeyStateTerminators", [{keyStateTerminatorsFormat: this.UInt16}, {keyStateTerminatorCount: this.UInt16}, {keyStateTerminators: this.UCKeyCharSeq.array(1)}]);
    this.UCKeySequenceDataIndex = new ctypes.StructType("UCKeySequenceDataIndex", [{keySequenceDataIndexFormat: this.UInt16}, {charSequenceCount: this.UInt16}, {charSequenceOffsets: this.UInt16.array(1)}]);
    this.kUCKeyLayoutHeaderFormat = 4098;
    this.kUCKeyLayoutFeatureInfoFormat = 8193;
    this.kUCKeyModifiersToTableNumFormat = 12289;
    this.kUCKeyToCharTableIndexFormat = 16385;
    this.kUCKeyStateRecordsIndexFormat = 20481;
    this.kUCKeyStateTerminatorsFormat = 24577;
    this.kUCKeySequenceDataIndexFormat = 28673;
    this.kUCKeyActionDown = 0;
    this.kUCKeyActionUp = 1;
    this.kUCKeyActionAutoKey = 2;
    this.kUCKeyActionDisplay = 3;
    this.kUCKeyTranslateNoDeadKeysBit = 0;
    this.kUCKeyTranslateNoDeadKeysMask = 1;
    this.kUnicodeCollationClass = 1969450860;
    this.OpaqueCollatorRef = new ctypes.StructType("OpaqueCollatorRef");
    this.CollatorRef = this.OpaqueCollatorRef.ptr;
    this.UCCollateOptions = this.UInt32;
    this.kUCCollateComposeInsensitiveMask = 2;
    this.kUCCollateWidthInsensitiveMask = 4;
    this.kUCCollateCaseInsensitiveMask = 8;
    this.kUCCollateDiacritInsensitiveMask = 16;
    this.kUCCollatePunctuationSignificantMask = 32768;
    this.kUCCollateDigitsOverrideMask = 65536;
    this.kUCCollateDigitsAsNumberMask = 131072;
    this.kUCCollateStandardOptions = 6;
    this.kUCCollateTypeHFSExtended = 1;
    this.kUCCollateTypeSourceMask = 255;
    this.kUCCollateTypeShiftBits = 24;
    this.kUCCollateTypeMask = -16777216;
    this.UCCollationValue = this.UInt32;
    this.OpaqueUCTypeSelectRef = new ctypes.StructType("OpaqueUCTypeSelectRef");
    this.UCTypeSelectRef = this.OpaqueUCTypeSelectRef.ptr;
    this.UCTypeSelectCompareResult = this.SInt32;
    this.UCTSWalkDirection = this.UInt16;
    this.kUCTSDirectionNext = 0;
    this.kUCTSDirectionPrevious = 1;
    this.UCTypeSelectOptions = this.UInt16;
    this.kUCTSOptionsNoneMask = 0;
    this.kUCTSOptionsReleaseStringMask = 1;
    this.kUCTSOptionsDataIsOrderedMask = 2;
    this.IndexToUCStringProcPtr = new ctypes.FunctionType(ctypes.default_abi, this.Boolean, [this.UInt32, ctypes.void_t.ptr, ctypes.void_t.ptr, this.CFStringRef.ptr, this.UCTypeSelectOptions.ptr]).ptr;
    this.IndexToUCStringUPP = this.IndexToUCStringProcPtr;
    // Dropping inline function 'NewIndexToUCStringUPP'.
    // Dropping inline function 'DisposeIndexToUCStringUPP'.
    // Dropping inline function 'InvokeIndexToUCStringUPP'.
    this.kUCTypeSelectMaxListSize = -1;
    this.kUnicodeTextBreakClass = 1969386091;
    this.OpaqueTextBreakLocatorRef = new ctypes.StructType("OpaqueTextBreakLocatorRef");
    this.TextBreakLocatorRef = this.OpaqueTextBreakLocatorRef.ptr;
    this.UCTextBreakType = this.UInt32;
    this.kUCTextBreakCharMask = 1;
    this.kUCTextBreakClusterMask = 4;
    this.kUCTextBreakWordMask = 16;
    this.kUCTextBreakLineMask = 64;
    this.kUCTextBreakParagraphMask = 256;
    this.UCTextBreakOptions = this.UInt32;
    this.kUCTextBreakLeadingEdgeMask = 1;
    this.kUCTextBreakGoBackwardsMask = 2;
    this.kUCTextBreakIterateMask = 4;
}

// Based on /System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/DriverSynchronization.h
function DriverSynchronization_h(lib) {

    if (this._DRIVERSYNCHRONIZATION_H)
        return;
    this._DRIVERSYNCHRONIZATION_H = true;

}

// Based on /System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/MachineExceptions.h
function MachineExceptions_h(lib) {
    MacTypes_h.call(this, lib);

    if (this._MACHINEEXCEPTIONS_H)
        return;
    this._MACHINEEXCEPTIONS_H = true;

    this.OpaqueAreaID = new ctypes.StructType("OpaqueAreaID");
    this.AreaID = this.OpaqueAreaID.ptr;
    this.MachineInformationPowerPC = new ctypes.StructType("MachineInformationPowerPC", [{CTR: this.UnsignedWide}, {LR: this.UnsignedWide}, {PC: this.UnsignedWide}, {CRRegister: ctypes.unsigned_long}, {XER: ctypes.unsigned_long}, {MSR: ctypes.unsigned_long}, {MQ: ctypes.unsigned_long}, {ExceptKind: ctypes.unsigned_long}, {DSISR: ctypes.unsigned_long}, {DAR: this.UnsignedWide}, {Reserved: this.UnsignedWide}]);
    this.RegisterInformationPowerPC = new ctypes.StructType("RegisterInformationPowerPC", [{R0: this.UnsignedWide}, {R1: this.UnsignedWide}, {R2: this.UnsignedWide}, {R3: this.UnsignedWide}, {R4: this.UnsignedWide}, {R5: this.UnsignedWide}, {R6: this.UnsignedWide}, {R7: this.UnsignedWide}, {R8: this.UnsignedWide}, {R9: this.UnsignedWide}, {R10: this.UnsignedWide}, {R11: this.UnsignedWide}, {R12: this.UnsignedWide}, {R13: this.UnsignedWide}, {R14: this.UnsignedWide}, {R15: this.UnsignedWide}, {R16: this.UnsignedWide}, {R17: this.UnsignedWide}, {R18: this.UnsignedWide}, {R19: this.UnsignedWide}, {R20: this.UnsignedWide}, {R21: this.UnsignedWide}, {R22: this.UnsignedWide}, {R23: this.UnsignedWide}, {R24: this.UnsignedWide}, {R25: this.UnsignedWide}, {R26: this.UnsignedWide}, {R27: this.UnsignedWide}, {R28: this.UnsignedWide}, {R29: this.UnsignedWide}, {R30: this.UnsignedWide}, {R31: this.UnsignedWide}]);
    this.FPUInformationPowerPC = new ctypes.StructType("FPUInformationPowerPC", [{Registers: this.UnsignedWide.array(32)}, {FPSCR: ctypes.unsigned_long}, {Reserved: ctypes.unsigned_long}]);
    this.Vector128 = new ctypes.StructType("Vector128", [{l: ctypes.unsigned_long.array(4)}, {s: ctypes.unsigned_short.array(8)}, {c: ctypes.unsigned_char.array(16)}]);
    this.VectorInformationPowerPC = new ctypes.StructType("VectorInformationPowerPC", [{Registers: this.Vector128.array(32)}, {VSCR: this.Vector128}, {VRsave: this.UInt32}]);
    this.kWriteReference = 0;
    this.kReadReference = 1;
    this.kFetchReference = 2;
    this.writeReference = 0;
    this.readReference = 1;
    this.fetchReference = 2;
    this.MemoryReferenceKind = ctypes.unsigned_long;
    this.MemoryExceptionInformation = new ctypes.StructType("MemoryExceptionInformation", [{theArea: this.AreaID}, {theAddress: this.LogicalAddress}, {theError: this.OSStatus}, {theReference: this.MemoryReferenceKind}]);
    this.kUnknownException = 0;
    this.kIllegalInstructionException = 1;
    this.kTrapException = 2;
    this.kAccessException = 3;
    this.kUnmappedMemoryException = 4;
    this.kExcludedMemoryException = 5;
    this.kReadOnlyMemoryException = 6;
    this.kUnresolvablePageFaultException = 7;
    this.kPrivilegeViolationException = 8;
    this.kTraceException = 9;
    this.kInstructionBreakpointException = 10;
    this.kDataBreakpointException = 11;
    this.kIntegerException = 12;
    this.kFloatingPointException = 13;
    this.kStackOverflowException = 14;
    this.kTaskTerminationException = 15;
    this.kTaskCreationException = 16;
    this.kDataAlignmentException = 17;
    this.ExceptionKind = ctypes.unsigned_long;
    this.ExceptionInfo = new ctypes.StructType("ExceptionInfo", [{memoryInfo: this.MemoryExceptionInformation.ptr}]);
    this.ExceptionInformationPowerPC = new ctypes.StructType("ExceptionInformationPowerPC", [{theKind: this.ExceptionKind}, {machineState: this.MachineInformationPowerPC.ptr}, {registerImage: this.RegisterInformationPowerPC.ptr}, {FPUImage: this.FPUInformationPowerPC.ptr}, {info: this.ExceptionInfo}, {vectorImage: this.VectorInformationPowerPC.ptr}]);
    this.Vector128Intel = new ctypes.StructType("Vector128Intel", []);
    this.MachineInformationIntel = new ctypes.StructType("MachineInformationIntel", [{CS: ctypes.unsigned_long}, {DS: ctypes.unsigned_long}, {SS: ctypes.unsigned_long}, {ES: ctypes.unsigned_long}, {FS: ctypes.unsigned_long}, {GS: ctypes.unsigned_long}, {EFLAGS: ctypes.unsigned_long}, {EIP: ctypes.unsigned_long}, {ExceptTrap: ctypes.unsigned_long}, {ExceptErr: ctypes.unsigned_long}, {ExceptAddr: ctypes.unsigned_long}]);
    this.RegisterInformationIntel = new ctypes.StructType("RegisterInformationIntel", [{EAX: ctypes.unsigned_long}, {EBX: ctypes.unsigned_long}, {ECX: ctypes.unsigned_long}, {EDX: ctypes.unsigned_long}, {ESI: ctypes.unsigned_long}, {EDI: ctypes.unsigned_long}, {EBP: ctypes.unsigned_long}, {ESP: ctypes.unsigned_long}]);
    this.FPRegIntel = ctypes.unsigned_char.array(10);
    this.FPUInformationIntel = new ctypes.StructType("FPUInformationIntel", [{Registers: this.FPRegIntel.array(8)}, {Control: ctypes.unsigned_short}, {Status: ctypes.unsigned_short}, {Tag: ctypes.unsigned_short}, {Opcode: ctypes.unsigned_short}, {EIP: ctypes.unsigned_int}, {DP: ctypes.unsigned_int}, {DS: ctypes.unsigned_int}]);
    this.VectorInformationIntel = new ctypes.StructType("VectorInformationIntel", [{Registers: this.Vector128Intel.array(8)}]);
    this.MachineInformation = this.MachineInformationIntel;
    this.RegisterInformation = this.RegisterInformationIntel;
    this.FPUInformation = this.FPUInformationIntel;
    this.VectorInformation = this.VectorInformationIntel;
    this.ExceptionInformation = new ctypes.StructType("ExceptionInformation", [{theKind: this.ExceptionKind}, {machineState: this.MachineInformation.ptr}, {registerImage: this.RegisterInformation.ptr}, {FPUImage: this.FPUInformation.ptr}, {info: this.ExceptionInfo}, {vectorImage: this.VectorInformation.ptr}]);
    this.ExceptionHandlerProcPtr = new ctypes.FunctionType(ctypes.default_abi, this.OSStatus, [this.ExceptionInformation.ptr]).ptr;
    this.ExceptionHandlerUPP = this.ExceptionHandlerProcPtr;
    // Dropping inline function 'NewExceptionHandlerUPP'.
    // Dropping inline function 'DisposeExceptionHandlerUPP'.
    // Dropping inline function 'InvokeExceptionHandlerUPP'.
    this.ExceptionHandlerTPP = this.ExceptionHandlerUPP;
    this.ExceptionHandler = this.ExceptionHandlerTPP;
}

// Based on /System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/OSUtils.h
function OSUtils_h(lib) {
    MacTypes_h.call(this, lib);

    if (this._OSUTILS_H)
        return;
    this._OSUTILS_H = true;

    this.sortsBefore = -1;
    this.sortsEqual = 0;
    this.sortsAfter = 1;
    this.dummyType = 0;
    this.vType = 1;
    this.ioQType = 2;
    this.drvQType = 3;
    this.evType = 4;
    this.fsQType = 5;
    this.sIQType = 6;
    this.dtQType = 7;
    this.nmType = 8;
    this.QTypes = this.SignedByte;
    this.QElem = new ctypes.StructType("QElem", [{qLink: this.QElem.ptr}, {qType: ctypes.short}, {qData: ctypes.short.array(1)}]);
    this.QElemPtr = this.QElem.ptr;
    this.QHdr = new ctypes.StructType("QHdr", [{qFlags: ctypes.short}, {qHead: this.QElemPtr}, {qTail: this.QElemPtr}]);
    this.QHdrPtr = this.QHdr.ptr;
    this.MachineLocation = new ctypes.StructType("MachineLocation", []);
    this.useFree = 0;
    this.useATalk = 1;
    this.useAsync = 2;
    this.useExtClk = 3;
    this.useMIDI = 4;
    this.false32b = 0;
    this.true32b = 1;
    this.SysPPtr = ctypes.void_t.ptr;
    this.DeferredTaskProcPtr = new ctypes.FunctionType(ctypes.default_abi, ctypes.void_t, [ctypes.long]).ptr;
    this.DeferredTaskUPP = this.DeferredTaskProcPtr;
    // Dropping inline function 'NewDeferredTaskUPP'.
    // Dropping inline function 'DisposeDeferredTaskUPP'.
    // Dropping inline function 'InvokeDeferredTaskUPP'.
    this.DeferredTask = new ctypes.StructType("DeferredTask", [{qLink: this.QElemPtr}, {qType: ctypes.short}, {dtFlags: ctypes.short}, {dtAddr: this.DeferredTaskUPP}, {dtParam: ctypes.long}, {dtReserved: ctypes.long}]);
    this.DeferredTaskPtr = this.DeferredTask.ptr;
}

// Based on /System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Finder.h
function Finder_h(lib) {
    MacTypes_h.call(this, lib);

    if (this._FINDER_H)
        return;
    this._FINDER_H = true;

    this.kClippingCreator = 1685217639;
    this.kClippingPictureType = 1668051056;
    this.kClippingTextType = 1668051060;
    this.kClippingSoundType = 1668051059;
    this.kClippingUnknownType = 1668051061;
    this.kInternetLocationCreator = 1685217639;
    this.kInternetLocationHTTP = 1768712308;
    this.kInternetLocationFTP = 1768711796;
    this.kInternetLocationFile = 1768711785;
    this.kInternetLocationMail = 1768713569;
    this.kInternetLocationNNTP = 1768713847;
    this.kInternetLocationAFP = 1768710502;
    this.kInternetLocationAppleTalk = 1768710516;
    this.kInternetLocationNSL = 1768713843;
    this.kInternetLocationGeneric = 1768712037;
    this.kCustomIconResource = -16455;
    this.kCustomBadgeResourceType = 1650549863;
    this.kCustomBadgeResourceID = -16455;
    this.kCustomBadgeResourceVersion = 0;
    this.CustomBadgeResource = new ctypes.StructType("CustomBadgeResource", [{version: this.SInt16}, {customBadgeResourceID: this.SInt16}, {customBadgeType: this.OSType}, {customBadgeCreator: this.OSType}, {windowBadgeType: this.OSType}, {windowBadgeCreator: this.OSType}, {overrideType: this.OSType}, {overrideCreator: this.OSType}]);
    this.CustomBadgeResourcePtr = this.CustomBadgeResource.ptr;
    this.CustomBadgeResourceHandle = this.CustomBadgeResourcePtr.ptr;
    this.kRoutingResourceType = 1919907188;
    this.kRoutingResourceID = 0;
    this.RoutingResourceEntry = new ctypes.StructType("RoutingResourceEntry", [{creator: this.OSType}, {fileType: this.OSType}, {targetFolder: this.OSType}, {destinationFolder: this.OSType}, {reservedField: this.OSType}]);
    this.RoutingResourcePtr = this.RoutingResourceEntry.ptr;
    this.RoutingResourceHandle = this.RoutingResourcePtr.ptr;
    this.kContainerFolderAliasType = 1717858928;
    this.kContainerTrashAliasType = 1953657704;
    this.kContainerHardDiskAliasType = 1751413611;
    this.kContainerFloppyAliasType = 1718382713;
    this.kContainerServerAliasType = 1936881266;
    this.kApplicationAliasType = 1633972848;
    this.kContainerAliasType = 1685221232;
    this.kDesktopPrinterAliasType = 1685352545;
    this.kContainerCDROMAliasType = 1667523698;
    this.kApplicationCPAliasType = 1633903728;
    this.kApplicationDAAliasType = 1633969264;
    this.kPackageAliasType = 1718643553;
    this.kAppPackageAliasType = 1717661793;
    this.kSystemFolderAliasType = 1717662585;
    this.kAppleMenuFolderAliasType = 1717657965;
    this.kStartupFolderAliasType = 1717662580;
    this.kPrintMonitorDocsFolderAliasType = 1717661806;
    this.kPreferencesFolderAliasType = 1717661798;
    this.kControlPanelFolderAliasType = 1717658484;
    this.kExtensionFolderAliasType = 1717659000;
    this.kExportedFolderAliasType = 1717658996;
    this.kDropFolderAliasType = 1717658738;
    this.kSharedFolderAliasType = 1717662568;
    this.kMountedFolderAliasType = 1717661038;
    this.kIsOnDesk = 1;
    this.kColor = 14;
    this.kIsShared = 64;
    this.kHasNoINITs = 128;
    this.kHasBeenInited = 256;
    this.kHasCustomIcon = 1024;
    this.kIsStationery = 2048;
    this.kNameLocked = 4096;
    this.kHasBundle = 8192;
    this.kIsInvisible = 16384;
    this.kIsAlias = 32768;
    this.fOnDesk = 1;
    this.fHasBundle = 8192;
    this.fInvisible = 16384;
    this.fTrash = -3;
    this.fDesktop = -2;
    this.fDisk = 0;
    this.kExtendedFlagsAreInvalid = 32768;
    this.kExtendedFlagHasCustomBadge = 256;
    this.kExtendedFlagObjectIsBusy = 128;
    this.kExtendedFlagHasRoutingInfo = 4;
    this.kFirstMagicBusyFiletype = 1652193568;
    this.kLastMagicBusyFiletype = 1652193599;
    this.kMagicBusyCreationDate = 1329266096;
    this.FileInfo = new ctypes.StructType("FileInfo", [{fileType: this.OSType}, {fileCreator: this.OSType}, {finderFlags: this.UInt16}, {location: this.Point}, {reservedField: this.UInt16}]);
    this.FolderInfo = new ctypes.StructType("FolderInfo", [{windowBounds: this.Rect}, {finderFlags: this.UInt16}, {location: this.Point}, {reservedField: this.UInt16}]);
    this.ExtendedFileInfo = new ctypes.StructType("ExtendedFileInfo", [{reserved1: this.SInt16.array(4)}, {extendedFinderFlags: this.UInt16}, {reserved2: this.SInt16}, {putAwayFolderID: this.SInt32}]);
    this.ExtendedFolderInfo = new ctypes.StructType("ExtendedFolderInfo", [{scrollPosition: this.Point}, {reserved1: this.SInt32}, {extendedFinderFlags: this.UInt16}, {reserved2: this.SInt16}, {putAwayFolderID: this.SInt32}]);
    this.FInfo = new ctypes.StructType("FInfo", [{fdType: this.OSType}, {fdCreator: this.OSType}, {fdFlags: this.UInt16}, {fdLocation: this.Point}, {fdFldr: this.SInt16}]);
    this.FXInfo = new ctypes.StructType("FXInfo", [{fdIconID: this.SInt16}, {fdReserved: this.SInt16.array(3)}, {fdScript: this.SInt8}, {fdXFlags: this.SInt8}, {fdComment: this.SInt16}, {fdPutAway: this.SInt32}]);
    this.DInfo = new ctypes.StructType("DInfo", [{frRect: this.Rect}, {frFlags: this.UInt16}, {frLocation: this.Point}, {frView: this.SInt16}]);
    this.DXInfo = new ctypes.StructType("DXInfo", [{frScroll: this.Point}, {frOpenChain: this.SInt32}, {frScript: this.SInt8}, {frXFlags: this.SInt8}, {frComment: this.SInt16}, {frPutAway: this.SInt32}]);
}

// Based on /System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/PLStringFuncs.h
function PLStringFuncs_h(lib) {

    if (this._PLSTRINGFUNCS_H)
        return;
    this._PLSTRINGFUNCS_H = true;

}

// Based on /System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/AIFF.h
function AIFF_h(lib) {
    MacTypes_h.call(this, lib);

    if (this._AIFF_H)
        return;
    this._AIFF_H = true;

    this.AIFFID = 1095321158;
    this.AIFCID = 1095321155;
    this.FormatVersionID = 1180058962;
    this.CommonID = 1129270605;
    this.FORMID = 1179603533;
    this.SoundDataID = 1397968452;
    this.MarkerID = 1296126539;
    this.InstrumentID = 1229869908;
    this.MIDIDataID = 1296647241;
    this.AudioRecordingID = 1095062340;
    this.ApplicationSpecificID = 1095782476;
    this.CommentID = 1129270612;
    this.NameID = 1312902469;
    this.AuthorID = 1096111176;
    this.CopyrightID = 677587232;
    this.AnnotationID = 1095650895;
    this.NoLooping = 0;
    this.ForwardLooping = 1;
    this.ForwardBackwardLooping = 2;
    this.AIFCVersion1 = -1568648896;
    this.NoneType = 1313820229;
    this.ACE2Type = 1094927666;
    this.ACE8Type = 1094927672;
    this.MACE3Type = 1296122675;
    this.MACE6Type = 1296122678;
    this.MarkerIdType = this.SInt16;
    this.ChunkHeader = new ctypes.StructType("ChunkHeader", [{ckID: this.UInt32}, {ckSize: this.SInt32}]);
    this.ContainerChunk = new ctypes.StructType("ContainerChunk", [{ckID: this.UInt32}, {ckSize: this.SInt32}, {formType: this.UInt32}]);
    this.FormatVersionChunk = new ctypes.StructType("FormatVersionChunk", [{ckID: this.UInt32}, {ckSize: this.SInt32}, {timestamp: this.UInt32}]);
    this.FormatVersionChunkPtr = this.FormatVersionChunk.ptr;
    this.CommonChunk = new ctypes.StructType("CommonChunk", [{ckID: this.UInt32}, {ckSize: this.SInt32}, {numChannels: this.SInt16}, {numSampleFrames: this.UInt32}, {sampleSize: this.SInt16}, {sampleRate: this.extended80}]);
    this.CommonChunkPtr = this.CommonChunk.ptr;
    this.ExtCommonChunk = new ctypes.StructType("ExtCommonChunk", [{ckID: this.UInt32}, {ckSize: this.SInt32}, {numChannels: this.SInt16}, {numSampleFrames: this.UInt32}, {sampleSize: this.SInt16}, {sampleRate: this.extended80}, {compressionType: this.UInt32}, {compressionName: ctypes.char.array(1)}]);
    this.ExtCommonChunkPtr = this.ExtCommonChunk.ptr;
    this.SoundDataChunk = new ctypes.StructType("SoundDataChunk", [{ckID: this.UInt32}, {ckSize: this.SInt32}, {offset: this.UInt32}, {blockSize: this.UInt32}]);
    this.SoundDataChunkPtr = this.SoundDataChunk.ptr;
    this.Marker = new ctypes.StructType("Marker", [{id: this.MarkerIdType}, {position: this.UInt32}, {markerName: this.Str255}]);
    this.MarkerChunk = new ctypes.StructType("MarkerChunk", [{ckID: this.UInt32}, {ckSize: this.SInt32}, {numMarkers: this.UInt16}, {Markers: this.Marker.array(1)}]);
    this.MarkerChunkPtr = this.MarkerChunk.ptr;
    this.AIFFLoop = new ctypes.StructType("AIFFLoop", [{playMode: this.SInt16}, {beginLoop: this.MarkerIdType}, {endLoop: this.MarkerIdType}]);
    this.InstrumentChunk = new ctypes.StructType("InstrumentChunk", [{ckID: this.UInt32}, {ckSize: this.SInt32}, {baseFrequency: this.UInt8}, {detune: this.UInt8}, {lowFrequency: this.UInt8}, {highFrequency: this.UInt8}, {lowVelocity: this.UInt8}, {highVelocity: this.UInt8}, {gain: this.SInt16}, {sustainLoop: this.AIFFLoop}, {releaseLoop: this.AIFFLoop}]);
    this.InstrumentChunkPtr = this.InstrumentChunk.ptr;
    this.MIDIDataChunk = new ctypes.StructType("MIDIDataChunk", [{ckID: this.UInt32}, {ckSize: this.SInt32}, {MIDIdata: this.UInt8.array(1)}]);
    this.MIDIDataChunkPtr = this.MIDIDataChunk.ptr;
    this.AudioRecordingChunk = new ctypes.StructType("AudioRecordingChunk", [{ckID: this.UInt32}, {ckSize: this.SInt32}, {AESChannelStatus: this.UInt8.array(24)}]);
    this.AudioRecordingChunkPtr = this.AudioRecordingChunk.ptr;
    this.ApplicationSpecificChunk = new ctypes.StructType("ApplicationSpecificChunk", [{ckID: this.UInt32}, {ckSize: this.SInt32}, {applicationSignature: this.OSType}, {data: this.UInt8.array(1)}]);
    this.ApplicationSpecificChunkPtr = this.ApplicationSpecificChunk.ptr;
    this.Comment = new ctypes.StructType("Comment", [{timeStamp: this.UInt32}, {marker: this.MarkerIdType}, {count: this.UInt16}, {text: ctypes.char.array(1)}]);
    this.CommentsChunk = new ctypes.StructType("CommentsChunk", [{ckID: this.UInt32}, {ckSize: this.SInt32}, {numComments: this.UInt16}, {comments: this.Comment.array(1)}]);
    this.CommentsChunkPtr = this.CommentsChunk.ptr;
    this.TextChunk = new ctypes.StructType("TextChunk", [{ckID: this.UInt32}, {ckSize: this.SInt32}, {text: ctypes.char.array(1)}]);
    this.TextChunkPtr = this.TextChunk.ptr;
}

// Based on /System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Gestalt.h
function Gestalt_h(lib) {
    MacTypes_h.call(this, lib);

    if (this._GESTALT_H)
        return;
    this._GESTALT_H = true;

    this.SelectorFunctionProcPtr = new ctypes.FunctionType(ctypes.default_abi, this.OSErr, [this.OSType, this.SInt32.ptr]).ptr;
    this.SelectorFunctionUPP = this.SelectorFunctionProcPtr;
    // Dropping inline function 'NewSelectorFunctionUPP'.
    // Dropping inline function 'DisposeSelectorFunctionUPP'.
    // Dropping inline function 'InvokeSelectorFunctionUPP'.
    this.gestaltAddressingModeAttr = 1633969266;
    this.gestalt32BitAddressing = 0;
    this.gestalt32BitSysZone = 1;
    this.gestalt32BitCapable = 2;
    this.gestaltAFPClient = 1634103411;
    this.gestaltAFPClientVersionMask = 65535;
    this.gestaltAFPClient3_5 = 1;
    this.gestaltAFPClient3_6 = 2;
    this.gestaltAFPClient3_6_1 = 3;
    this.gestaltAFPClient3_6_2 = 4;
    this.gestaltAFPClient3_6_3 = 5;
    this.gestaltAFPClient3_7 = 6;
    this.gestaltAFPClient3_7_2 = 7;
    this.gestaltAFPClient3_8 = 8;
    this.gestaltAFPClient3_8_1 = 9;
    this.gestaltAFPClient3_8_3 = 10;
    this.gestaltAFPClient3_8_4 = 11;
    this.gestaltAFPClientAttributeMask = -65536;
    this.gestaltAFPClientCfgRsrc = 16;
    this.gestaltAFPClientSupportsIP = 29;
    this.gestaltAFPClientVMUI = 30;
    this.gestaltAFPClientMultiReq = 31;
    this.gestaltAliasMgrAttr = 1634494835;
    this.gestaltAliasMgrPresent = 0;
    this.gestaltAliasMgrSupportsRemoteAppletalk = 1;
    this.gestaltAliasMgrSupportsAOCEKeychain = 2;
    this.gestaltAliasMgrResolveAliasFileWithMountOptions = 3;
    this.gestaltAliasMgrFollowsAliasesWhenResolving = 4;
    this.gestaltAliasMgrSupportsExtendedCalls = 5;
    this.gestaltAliasMgrSupportsFSCalls = 6;
    this.gestaltAliasMgrPrefersPath = 7;
    this.gestaltAliasMgrRequiresAccessors = 8;
    this.gestaltAppearanceAttr = 1634758770;
    this.gestaltAppearanceExists = 0;
    this.gestaltAppearanceCompatMode = 1;
    this.gestaltAppearanceVersion = 1634760306;
    this.gestaltArbitorAttr = 1634886176;
    this.gestaltSerialArbitrationExists = 0;
    this.gestaltAppleScriptVersion = 1634952054;
    this.gestaltAppleScriptAttr = 1634952050;
    this.gestaltAppleScriptPresent = 0;
    this.gestaltAppleScriptPowerPCSupport = 1;
    this.gestaltATAAttr = 1635016992;
    this.gestaltATAPresent = 0;
    this.gestaltATalkVersion = 1635019638;
    this.gestaltAppleTalkVersion = 1635019883;
    this.gestaltAUXVersion = 1630500216;
    this.gestaltMacOSCompatibilityBoxAttr = 1650618232;
    this.gestaltMacOSCompatibilityBoxPresent = 0;
    this.gestaltMacOSCompatibilityBoxHasSerial = 1;
    this.gestaltMacOSCompatibilityBoxless = 2;
    this.gestaltBusClkSpeed = 1650682987;
    this.gestaltBusClkSpeedMHz = 1650682989;
    this.gestaltCloseViewAttr = 1112753249;
    this.gestaltCloseViewEnabled = 0;
    this.gestaltCloseViewDisplayMgrFriendly = 1;
    this.gestaltCarbonVersion = 1667395438;
    this.gestaltCFMAttr = 1667658343;
    this.gestaltCFMPresent = 0;
    this.gestaltCFMPresentMask = 1;
    this.gestaltCFM99Present = 2;
    this.gestaltCFM99PresentMask = 4;
    this.gestaltProcessorCacheLineSize = 1668508026;
    this.gestaltCollectionMgrVersion = 1668052078;
    this.gestaltColorMatchingAttr = 1668117601;
    this.gestaltHighLevelMatching = 0;
    this.gestaltColorMatchingLibLoaded = 1;
    this.gestaltColorMatchingVersion = 1668117603;
    this.gestaltColorSync10 = 256;
    this.gestaltColorSync11 = 272;
    this.gestaltColorSync104 = 260;
    this.gestaltColorSync105 = 261;
    this.gestaltColorSync20 = 512;
    this.gestaltColorSync21 = 528;
    this.gestaltColorSync211 = 529;
    this.gestaltColorSync212 = 530;
    this.gestaltColorSync213 = 531;
    this.gestaltColorSync25 = 592;
    this.gestaltColorSync26 = 608;
    this.gestaltColorSync261 = 609;
    this.gestaltColorSync30 = 768;
    this.gestaltControlMgrVersion = 1668118130;
    this.gestaltControlMgrAttr = 1668183148;
    this.gestaltControlMgrPresent = 1;
    this.gestaltControlMgrPresentBit = 0;
    this.gestaltControlMsgPresentMask = 1;
    this.gestaltConnMgrAttr = 1668247150;
    this.gestaltConnMgrPresent = 0;
    this.gestaltConnMgrCMSearchFix = 1;
    this.gestaltConnMgrErrorString = 2;
    this.gestaltConnMgrMultiAsyncIO = 3;
    this.gestaltColorPickerVersion = 1668311922;
    this.gestaltColorPicker = 1668311922;
    this.gestaltComponentMgr = 1668312692;
    this.gestaltComponentPlatform = 1668247660;
    this.gestaltNativeCPUtype = 1668314484;
    this.gestaltNativeCPUfamily = 1668314470;
    this.gestaltCPU68000 = 0;
    this.gestaltCPU68010 = 1;
    this.gestaltCPU68020 = 2;
    this.gestaltCPU68030 = 3;
    this.gestaltCPU68040 = 4;
    this.gestaltCPU601 = 257;
    this.gestaltCPU603 = 259;
    this.gestaltCPU604 = 260;
    this.gestaltCPU603e = 262;
    this.gestaltCPU603ev = 263;
    this.gestaltCPU750 = 264;
    this.gestaltCPU604e = 265;
    this.gestaltCPU604ev = 266;
    this.gestaltCPUG4 = 268;
    this.gestaltCPUG47450 = 272;
    this.gestaltCPUApollo = 273;
    this.gestaltCPUG47447 = 274;
    this.gestaltCPU750FX = 288;
    this.gestaltCPU970 = 313;
    this.gestaltCPU970FX = 316;
    this.gestaltCPU970MP = 324;
    this.gestaltCPU486 = 1765029942;
    this.gestaltCPUPentium = 1765095478;
    this.gestaltCPUPentiumPro = 1765109874;
    this.gestaltCPUPentiumII = 1765108073;
    this.gestaltCPUX86 = 1769502840;
    this.gestaltCPUPentium4 = 1765108086;
    this.gestaltCRMAttr = 1668443424;
    this.gestaltCRMPresent = 0;
    this.gestaltCRMPersistentFix = 1;
    this.gestaltCRMToolRsrcCalls = 2;
    this.gestaltControlStripVersion = 1668511346;
    this.gestaltCountOfCPUs = 1668314483;
    this.gestaltCTBVersion = 1668571766;
    this.gestaltDBAccessMgrAttr = 1684169059;
    this.gestaltDBAccessMgrPresent = 0;
    this.gestaltDiskCacheSize = 1684239226;
    this.gestaltSDPFindVersion = 1684434532;
    this.gestaltDictionaryMgrAttr = 1684628340;
    this.gestaltDictionaryMgrPresent = 0;
    this.gestaltDITLExtAttr = 1684632684;
    this.gestaltDITLExtPresent = 0;
    this.gestaltDITLExtSupportsIctb = 1;
    this.gestaltDialogMgrAttr = 1684828007;
    this.gestaltDialogMgrPresent = 1;
    this.gestaltDialogMgrPresentBit = 0;
    this.gestaltDialogMgrHasAquaAlertBit = 2;
    this.gestaltDialogMgrPresentMask = 1;
    this.gestaltDialogMgrHasAquaAlertMask = 4;
    this.gestaltDialogMsgPresentMask = 1;
    this.gestaltDesktopPicturesAttr = 1684762744;
    this.gestaltDesktopPicturesInstalled = 0;
    this.gestaltDesktopPicturesDisplayed = 1;
    this.gestaltDisplayMgrVers = 1685089398;
    this.gestaltDisplayMgrAttr = 1685089401;
    this.gestaltDisplayMgrPresent = 0;
    this.gestaltDisplayMgrCanSwitchMirrored = 2;
    this.gestaltDisplayMgrSetDepthNotifies = 3;
    this.gestaltDisplayMgrCanConfirm = 4;
    this.gestaltDisplayMgrColorSyncAware = 5;
    this.gestaltDisplayMgrGeneratesProfiles = 6;
    this.gestaltDisplayMgrSleepNotifies = 7;
    this.gestaltDragMgrAttr = 1685217639;
    this.gestaltDragMgrPresent = 0;
    this.gestaltDragMgrFloatingWind = 1;
    this.gestaltPPCDragLibPresent = 2;
    this.gestaltDragMgrHasImageSupport = 3;
    this.gestaltCanStartDragInFloatWindow = 4;
    this.gestaltSetDragImageUpdates = 5;
    this.gestaltDrawSprocketVersion = 1685287030;
    this.gestaltDigitalSignatureVersion = 1685285223;
    this.gestaltDTPFeatures = 1685352550;
    this.kDTPThirdPartySupported = 4;
    this.gestaltDTPInfo = 1685352568;
    this.gestaltEasyAccessAttr = 1700885369;
    this.gestaltEasyAccessOff = 0;
    this.gestaltEasyAccessOn = 1;
    this.gestaltEasyAccessSticky = 2;
    this.gestaltEasyAccessLocked = 3;
    this.gestaltEditionMgrAttr = 1701082222;
    this.gestaltEditionMgrPresent = 0;
    this.gestaltEditionMgrTranslationAware = 1;
    this.gestaltAppleEventsAttr = 1702260340;
    this.gestaltAppleEventsPresent = 0;
    this.gestaltScriptingSupport = 1;
    this.gestaltOSLInSystem = 2;
    this.gestaltSupportsApplicationURL = 4;
    this.gestaltExtensionTableVersion = 1702126188;
    this.gestaltFBCIndexingState = 1717724009;
    this.gestaltFBCindexingSafe = 0;
    this.gestaltFBCindexingCritical = 1;
    this.gestaltFBCVersion = 1717724022;
    this.gestaltFBCCurrentVersion = 17;
    this.gestaltOSXFBCCurrentVersion = 256;
    this.gestaltFileMappingAttr = 1718381936;
    this.gestaltFileMappingPresent = 0;
    this.gestaltFileMappingMultipleFilesFix = 1;
    this.gestaltFloppyAttr = 1718382713;
    this.gestaltFloppyIsMFMOnly = 0;
    this.gestaltFloppyIsManualEject = 1;
    this.gestaltFloppyUsesDiskInPlace = 2;
    this.gestaltFinderAttr = 1718510706;
    this.gestaltFinderDropEvent = 0;
    this.gestaltFinderMagicPlacement = 1;
    this.gestaltFinderCallsAEProcess = 2;
    this.gestaltOSLCompliantFinder = 3;
    this.gestaltFinderSupports4GBVolumes = 4;
    this.gestaltFinderHasClippings = 6;
    this.gestaltFinderFullDragManagerSupport = 7;
    this.gestaltFinderFloppyRootComments = 8;
    this.gestaltFinderLargeAndNotSavedFlavorsOK = 9;
    this.gestaltFinderUsesExtensibleFolderManager = 10;
    this.gestaltFinderUnderstandsRedirectedDesktopFolder = 11;
    this.gestaltFindFolderAttr = 1718578276;
    this.gestaltFindFolderPresent = 0;
    this.gestaltFolderDescSupport = 1;
    this.gestaltFolderMgrFollowsAliasesWhenResolving = 2;
    this.gestaltFolderMgrSupportsExtendedCalls = 3;
    this.gestaltFolderMgrSupportsDomains = 4;
    this.gestaltFolderMgrSupportsFSCalls = 5;
    this.gestaltFindFolderRedirectionAttr = 1718578277;
    this.gestaltFontMgrAttr = 1718578804;
    this.gestaltOutlineFonts = 0;
    this.gestaltFPUType = 1718646048;
    this.gestaltNoFPU = 0;
    this.gestalt68881 = 1;
    this.gestalt68882 = 2;
    this.gestalt68040FPU = 3;
    this.gestaltFSAttr = 1718820896;
    this.gestaltFullExtFSDispatching = 0;
    this.gestaltHasFSSpecCalls = 1;
    this.gestaltHasFileSystemManager = 2;
    this.gestaltFSMDoesDynamicLoad = 3;
    this.gestaltFSSupports4GBVols = 4;
    this.gestaltFSSupports2TBVols = 5;
    this.gestaltHasExtendedDiskInit = 6;
    this.gestaltDTMgrSupportsFSM = 7;
    this.gestaltFSNoMFSVols = 8;
    this.gestaltFSSupportsHFSPlusVols = 9;
    this.gestaltFSIncompatibleDFA82 = 10;
    this.gestaltFSSupportsDirectIO = 11;
    this.gestaltHasHFSPlusAPIs = 12;
    this.gestaltMustUseFCBAccessors = 13;
    this.gestaltFSUsesPOSIXPathsForConversion = 14;
    this.gestaltFSSupportsExclusiveLocks = 15;
    this.gestaltFSSupportsHardLinkDetection = 16;
    this.gestaltFSAllowsConcurrentAsyncIO = 17;
    this.gestaltAdminFeaturesFlagsAttr = 1718773092;
    this.gestaltFinderUsesSpecialOpenFoldersFile = 0;
    this.gestaltFSMVersion = 1718840608;
    this.gestaltFXfrMgrAttr = 1719166578;
    this.gestaltFXfrMgrPresent = 0;
    this.gestaltFXfrMgrMultiFile = 1;
    this.gestaltFXfrMgrErrorString = 2;
    this.gestaltFXfrMgrAsync = 3;
    this.gestaltGraphicsAttr = 1734768737;
    this.gestaltGraphicsIsDebugging = 1;
    this.gestaltGraphicsIsLoaded = 2;
    this.gestaltGraphicsIsPowerPC = 4;
    this.gestaltGraphicsVersion = 1735550584;
    this.gestaltCurrentGraphicsVersion = 66048;
    this.gestaltHardwareAttr = 1751414642;
    this.gestaltHasVIA1 = 0;
    this.gestaltHasVIA2 = 1;
    this.gestaltHasASC = 3;
    this.gestaltHasSCC = 4;
    this.gestaltHasSCSI = 7;
    this.gestaltHasSoftPowerOff = 19;
    this.gestaltHasSCSI961 = 21;
    this.gestaltHasSCSI962 = 22;
    this.gestaltHasUniversalROM = 24;
    this.gestaltHasEnhancedLtalk = 30;
    this.gestaltHelpMgrAttr = 1751477360;
    this.gestaltHelpMgrPresent = 0;
    this.gestaltHelpMgrExtensions = 1;
    this.gestaltAppleGuideIsDebug = 30;
    this.gestaltAppleGuidePresent = 31;
    this.gestaltHardwareVendorCode = 1752326500;
    this.gestaltHardwareVendorApple = 1097887852;
    this.gestaltCompressionMgr = 1768123760;
    this.gestaltIconUtilitiesAttr = 1768124270;
    this.gestaltIconUtilitiesPresent = 0;
    this.gestaltIconUtilitiesHas48PixelIcons = 1;
    this.gestaltIconUtilitiesHas32BitIcons = 2;
    this.gestaltIconUtilitiesHas8BitDeepMasks = 3;
    this.gestaltIconUtilitiesHasIconServices = 4;
    this.gestaltInternalDisplay = 1768190832;
    this.gestaltKeyboardType = 1801610272;
    this.gestaltMacKbd = 1;
    this.gestaltMacAndPad = 2;
    this.gestaltMacPlusKbd = 3;
    this.gestaltUnknownThirdPartyKbd = 3;
    this.gestaltExtADBKbd = 4;
    this.gestaltStdADBKbd = 5;
    this.gestaltPrtblADBKbd = 6;
    this.gestaltPrtblISOKbd = 7;
    this.gestaltStdISOADBKbd = 8;
    this.gestaltExtISOADBKbd = 9;
    this.gestaltADBKbdII = 10;
    this.gestaltADBISOKbdII = 11;
    this.gestaltPwrBookADBKbd = 12;
    this.gestaltPwrBookISOADBKbd = 13;
    this.gestaltAppleAdjustKeypad = 14;
    this.gestaltAppleAdjustADBKbd = 15;
    this.gestaltAppleAdjustISOKbd = 16;
    this.gestaltJapanAdjustADBKbd = 17;
    this.gestaltPwrBkExtISOKbd = 20;
    this.gestaltPwrBkExtJISKbd = 21;
    this.gestaltPwrBkExtADBKbd = 24;
    this.gestaltPS2Keyboard = 27;
    this.gestaltPwrBkSubDomKbd = 28;
    this.gestaltPwrBkSubISOKbd = 29;
    this.gestaltPwrBkSubJISKbd = 30;
    this.gestaltPortableUSBANSIKbd = 37;
    this.gestaltPortableUSBISOKbd = 38;
    this.gestaltPortableUSBJISKbd = 39;
    this.gestaltThirdPartyANSIKbd = 40;
    this.gestaltThirdPartyISOKbd = 41;
    this.gestaltThirdPartyJISKbd = 42;
    this.gestaltPwrBkEKDomKbd = 195;
    this.gestaltPwrBkEKISOKbd = 196;
    this.gestaltPwrBkEKJISKbd = 197;
    this.gestaltUSBCosmoANSIKbd = 198;
    this.gestaltUSBCosmoISOKbd = 199;
    this.gestaltUSBCosmoJISKbd = 200;
    this.gestaltPwrBk99JISKbd = 201;
    this.gestaltUSBAndyANSIKbd = 204;
    this.gestaltUSBAndyISOKbd = 205;
    this.gestaltUSBAndyJISKbd = 206;
    this.gestaltPortable2001ANSIKbd = 202;
    this.gestaltPortable2001ISOKbd = 203;
    this.gestaltPortable2001JISKbd = 207;
    this.gestaltUSBProF16ANSIKbd = 34;
    this.gestaltUSBProF16ISOKbd = 35;
    this.gestaltUSBProF16JISKbd = 36;
    this.gestaltProF16ANSIKbd = 31;
    this.gestaltProF16ISOKbd = 32;
    this.gestaltProF16JISKbd = 33;
    this.gestaltUDFSupport = 1802855526;
    this.gestaltLowMemorySize = 1819108717;
    this.gestaltLogicalRAMSize = 1819435373;
    this.gestaltMachineType = 1835098984;
    this.gestaltClassic = 1;
    this.gestaltMacXL = 2;
    this.gestaltMac512KE = 3;
    this.gestaltMacPlus = 4;
    this.gestaltMacSE = 5;
    this.gestaltMacII = 6;
    this.gestaltMacIIx = 7;
    this.gestaltMacIIcx = 8;
    this.gestaltMacSE030 = 9;
    this.gestaltPortable = 10;
    this.gestaltMacIIci = 11;
    this.gestaltPowerMac8100_120 = 12;
    this.gestaltMacIIfx = 13;
    this.gestaltMacClassic = 17;
    this.gestaltMacIIsi = 18;
    this.gestaltMacLC = 19;
    this.gestaltMacQuadra900 = 20;
    this.gestaltPowerBook170 = 21;
    this.gestaltMacQuadra700 = 22;
    this.gestaltClassicII = 23;
    this.gestaltPowerBook100 = 24;
    this.gestaltPowerBook140 = 25;
    this.gestaltMacQuadra950 = 26;
    this.gestaltMacLCIII = 27;
    this.gestaltPerforma450 = 27;
    this.gestaltPowerBookDuo210 = 29;
    this.gestaltMacCentris650 = 30;
    this.gestaltPowerBookDuo230 = 32;
    this.gestaltPowerBook180 = 33;
    this.gestaltPowerBook160 = 34;
    this.gestaltMacQuadra800 = 35;
    this.gestaltMacQuadra650 = 36;
    this.gestaltMacLCII = 37;
    this.gestaltPowerBookDuo250 = 38;
    this.gestaltAWS9150_80 = 39;
    this.gestaltPowerMac8100_110 = 40;
    this.gestaltAWS8150_110 = 40;
    this.gestaltPowerMac5200 = 41;
    this.gestaltPowerMac5260 = 41;
    this.gestaltPerforma5300 = 41;
    this.gestaltPowerMac6200 = 42;
    this.gestaltPerforma6300 = 42;
    this.gestaltMacIIvi = 44;
    this.gestaltMacIIvm = 45;
    this.gestaltPerforma600 = 45;
    this.gestaltPowerMac7100_80 = 47;
    this.gestaltMacIIvx = 48;
    this.gestaltMacColorClassic = 49;
    this.gestaltPerforma250 = 49;
    this.gestaltPowerBook165c = 50;
    this.gestaltMacCentris610 = 52;
    this.gestaltMacQuadra610 = 53;
    this.gestaltPowerBook145 = 54;
    this.gestaltPowerMac8100_100 = 55;
    this.gestaltMacLC520 = 56;
    this.gestaltAWS9150_120 = 57;
    this.gestaltPowerMac6400 = 58;
    this.gestaltPerforma6400 = 58;
    this.gestaltPerforma6360 = 58;
    this.gestaltMacCentris660AV = 60;
    this.gestaltMacQuadra660AV = 60;
    this.gestaltPerforma46x = 62;
    this.gestaltPowerMac8100_80 = 65;
    this.gestaltAWS8150_80 = 65;
    this.gestaltPowerMac9500 = 67;
    this.gestaltPowerMac9600 = 67;
    this.gestaltPowerMac7500 = 68;
    this.gestaltPowerMac7600 = 68;
    this.gestaltPowerMac8500 = 69;
    this.gestaltPowerMac8600 = 69;
    this.gestaltAWS8550 = 68;
    this.gestaltPowerBook180c = 71;
    this.gestaltPowerBook520 = 72;
    this.gestaltPowerBook520c = 72;
    this.gestaltPowerBook540 = 72;
    this.gestaltPowerBook540c = 72;
    this.gestaltPowerMac5400 = 74;
    this.gestaltPowerMac6100_60 = 75;
    this.gestaltAWS6150_60 = 75;
    this.gestaltPowerBookDuo270c = 77;
    this.gestaltMacQuadra840AV = 78;
    this.gestaltPerforma550 = 80;
    this.gestaltPowerBook165 = 84;
    this.gestaltPowerBook190 = 85;
    this.gestaltMacTV = 88;
    this.gestaltMacLC475 = 89;
    this.gestaltPerforma47x = 89;
    this.gestaltMacLC575 = 92;
    this.gestaltMacQuadra605 = 94;
    this.gestaltMacQuadra630 = 98;
    this.gestaltMacLC580 = 99;
    this.gestaltPerforma580 = 99;
    this.gestaltPowerMac6100_66 = 100;
    this.gestaltAWS6150_66 = 100;
    this.gestaltPowerBookDuo280 = 102;
    this.gestaltPowerBookDuo280c = 103;
    this.gestaltPowerMacLC475 = 104;
    this.gestaltPowerMacPerforma47x = 104;
    this.gestaltPowerMacLC575 = 105;
    this.gestaltPowerMacPerforma57x = 105;
    this.gestaltPowerMacQuadra630 = 106;
    this.gestaltPowerMacLC630 = 106;
    this.gestaltPowerMacPerforma63x = 106;
    this.gestaltPowerMac7200 = 108;
    this.gestaltPowerMac7300 = 109;
    this.gestaltPowerMac7100_66 = 112;
    this.gestaltPowerBook150 = 115;
    this.gestaltPowerMacQuadra700 = 116;
    this.gestaltPowerMacQuadra900 = 117;
    this.gestaltPowerMacQuadra950 = 118;
    this.gestaltPowerMacCentris610 = 119;
    this.gestaltPowerMacCentris650 = 120;
    this.gestaltPowerMacQuadra610 = 121;
    this.gestaltPowerMacQuadra650 = 122;
    this.gestaltPowerMacQuadra800 = 123;
    this.gestaltPowerBookDuo2300 = 124;
    this.gestaltPowerBook500PPCUpgrade = 126;
    this.gestaltPowerBook5300 = 128;
    this.gestaltPowerBook1400 = 310;
    this.gestaltPowerBook3400 = 306;
    this.gestaltPowerBook2400 = 307;
    this.gestaltPowerBookG3Series = 312;
    this.gestaltPowerBookG3 = 313;
    this.gestaltPowerBookG3Series2 = 314;
    this.gestaltPowerMacNewWorld = 406;
    this.gestaltPowerMacG3 = 510;
    this.gestaltPowerMac5500 = 512;
    this.gestalt20thAnniversary = 512;
    this.gestaltPowerMac6500 = 513;
    this.gestaltPowerMac4400_160 = 514;
    this.gestaltPowerMac4400 = 515;
    this.gestaltMacOSCompatibility = 1206;
    this.gestaltQuadra605 = 94;
    this.gestaltQuadra610 = 53;
    this.gestaltQuadra630 = 98;
    this.gestaltQuadra650 = 36;
    this.gestaltQuadra660AV = 60;
    this.gestaltQuadra700 = 22;
    this.gestaltQuadra800 = 35;
    this.gestaltQuadra840AV = 78;
    this.gestaltQuadra900 = 20;
    this.gestaltQuadra950 = 26;
    this.kMachineNameStrID = -16395;
    this.gestaltSMPMailerVersion = 1835101298;
    this.gestaltMediaBay = 1835165032;
    this.gestaltMBLegacy = 0;
    this.gestaltMBSingleBay = 1;
    this.gestaltMBMultipleBays = 2;
    this.gestaltMessageMgrVersion = 1835365235;
    this.gestaltMenuMgrAttr = 1835363957;
    this.gestaltMenuMgrPresent = 1;
    this.gestaltMenuMgrPresentBit = 0;
    this.gestaltMenuMgrAquaLayoutBit = 1;
    this.gestaltMenuMgrMultipleItemsWithCommandIDBit = 2;
    this.gestaltMenuMgrRetainsIconRefBit = 3;
    this.gestaltMenuMgrSendsMenuBoundsToDefProcBit = 4;
    this.gestaltMenuMgrMoreThanFiveMenusDeepBit = 5;
    this.gestaltMenuMgrCGImageMenuTitleBit = 6;
    this.gestaltMenuMgrPresentMask = 1;
    this.gestaltMenuMgrAquaLayoutMask = 2;
    this.gestaltMenuMgrMultipleItemsWithCommandIDMask = 4;
    this.gestaltMenuMgrRetainsIconRefMask = 8;
    this.gestaltMenuMgrSendsMenuBoundsToDefProcMask = 16;
    this.gestaltMenuMgrMoreThanFiveMenusDeepMask = 32;
    this.gestaltMenuMgrCGImageMenuTitleMask = 64;
    this.gestaltMultipleUsersState = 1835426930;
    this.gestaltMachineIcon = 1835623278;
    this.gestaltMiscAttr = 1835627363;
    this.gestaltScrollingThrottle = 0;
    this.gestaltSquareMenuBar = 2;
    this.gestaltMixedModeVersion = 1835628644;
    this.gestaltMixedModeAttr = 1835628644;
    this.gestaltMixedModePowerPC = 0;
    this.gestaltPowerPCAware = 0;
    this.gestaltMixedModeCFM68K = 1;
    this.gestaltMixedModeCFM68KHasTrap = 2;
    this.gestaltMixedModeCFM68KHasState = 3;
    this.gestaltQuickTimeConferencing = 1836346475;
    this.gestaltMemoryMapAttr = 1835884912;
    this.gestaltMemoryMapSparse = 0;
    this.gestaltMMUType = 1835889952;
    this.gestaltNoMMU = 0;
    this.gestaltAMU = 1;
    this.gestalt68851 = 2;
    this.gestalt68030MMU = 3;
    this.gestalt68040MMU = 4;
    this.gestaltEMMU1 = 5;
    this.gestaltUserVisibleMachineName = 1835950445;
    this.gestaltMPCallableAPIsAttr = 1836086115;
    this.gestaltMPFileManager = 0;
    this.gestaltMPDeviceManager = 1;
    this.gestaltMPTrapCalls = 2;
    this.gestaltStdNBPAttr = 1852601712;
    this.gestaltStdNBPPresent = 0;
    this.gestaltStdNBPSupportsAutoPosition = 1;
    this.gestaltNotificationMgrAttr = 1852663666;
    this.gestaltNotificationPresent = 0;
    this.gestaltNameRegistryVersion = 1852990823;
    this.gestaltNuBusSlotCount = 1853186675;
    this.gestaltOCEToolboxVersion = 1868785012;
    this.gestaltOCETB = 258;
    this.gestaltSFServer = 256;
    this.gestaltOCEToolboxAttr = 1868785013;
    this.gestaltOCETBPresent = 1;
    this.gestaltOCETBAvailable = 2;
    this.gestaltOCESFServerAvailable = 4;
    this.gestaltOCETBNativeGlueAvailable = 16;
    this.gestaltOpenFirmwareInfo = 1869637239;
    this.gestaltOSAttr = 1869815840;
    this.gestaltSysZoneGrowable = 0;
    this.gestaltLaunchCanReturn = 1;
    this.gestaltLaunchFullFileSpec = 2;
    this.gestaltLaunchControl = 3;
    this.gestaltTempMemSupport = 4;
    this.gestaltRealTempMemory = 5;
    this.gestaltTempMemTracked = 6;
    this.gestaltIPCSupport = 7;
    this.gestaltSysDebuggerSupport = 8;
    this.gestaltNativeProcessMgrBit = 19;
    this.gestaltAltivecRegistersSwappedCorrectlyBit = 20;
    this.gestaltOSTable = 1869837428;
    this.gestaltOpenTptNetworkSetup = 1869898598;
    this.gestaltOpenTptNetworkSetupLegacyImport = 0;
    this.gestaltOpenTptNetworkSetupLegacyExport = 1;
    this.gestaltOpenTptNetworkSetupSupportsMultihoming = 2;
    this.gestaltOpenTptNetworkSetupVersion = 1869898614;
    this.gestaltOpenTptRemoteAccess = 1869902433;
    this.gestaltOpenTptRemoteAccessPresent = 0;
    this.gestaltOpenTptRemoteAccessLoaded = 1;
    this.gestaltOpenTptRemoteAccessClientOnly = 2;
    this.gestaltOpenTptRemoteAccessPServer = 3;
    this.gestaltOpenTptRemoteAccessMPServer = 4;
    this.gestaltOpenTptPPPPresent = 5;
    this.gestaltOpenTptARAPPresent = 6;
    this.gestaltOpenTptRemoteAccessVersion = 1869902454;
    this.gestaltOpenTptVersions = 1869903474;
    this.gestaltOpenTpt = 1869898094;
    this.gestaltOpenTptPresentMask = 1;
    this.gestaltOpenTptLoadedMask = 2;
    this.gestaltOpenTptAppleTalkPresentMask = 4;
    this.gestaltOpenTptAppleTalkLoadedMask = 8;
    this.gestaltOpenTptTCPPresentMask = 16;
    this.gestaltOpenTptTCPLoadedMask = 32;
    this.gestaltOpenTptIPXSPXPresentMask = 64;
    this.gestaltOpenTptIPXSPXLoadedMask = 128;
    this.gestaltOpenTptPresentBit = 0;
    this.gestaltOpenTptLoadedBit = 1;
    this.gestaltOpenTptAppleTalkPresentBit = 2;
    this.gestaltOpenTptAppleTalkLoadedBit = 3;
    this.gestaltOpenTptTCPPresentBit = 4;
    this.gestaltOpenTptTCPLoadedBit = 5;
    this.gestaltOpenTptIPXSPXPresentBit = 6;
    this.gestaltOpenTptIPXSPXLoadedBit = 7;
    this.gestaltPCCard = 1885561700;
    this.gestaltCardServicesPresent = 0;
    this.gestaltPCCardFamilyPresent = 1;
    this.gestaltPCCardHasPowerControl = 2;
    this.gestaltPCCardSupportsCardBus = 3;
    this.gestaltProcClkSpeed = 1885564011;
    this.gestaltProcClkSpeedMHz = 1835232363;
    this.gestaltPCXAttr = 1885567079;
    this.gestaltPCXHas8and16BitFAT = 0;
    this.gestaltPCXHasProDOS = 1;
    this.gestaltPCXNewUI = 2;
    this.gestaltPCXUseICMapping = 3;
    this.gestaltLogicalPageSize = 1885827962;
    this.gestaltScreenCaptureMain = 1885954865;
    this.gestaltScreenCaptureDir = 1885954866;
    this.gestaltGXPrintingMgrVersion = 1886218098;
    this.gestaltPopupAttr = 1886351393;
    this.gestaltPopupPresent = 0;
    this.gestaltPowerMgrAttr = 1886353266;
    this.gestaltPMgrExists = 0;
    this.gestaltPMgrCPUIdle = 1;
    this.gestaltPMgrSCC = 2;
    this.gestaltPMgrSound = 3;
    this.gestaltPMgrDispatchExists = 4;
    this.gestaltPMgrSupportsAVPowerStateAtSleepWake = 5;
    this.gestaltPowerMgrVers = 1886876278;
    this.gestaltPPCToolboxAttr = 1886413600;
    this.gestaltPPCToolboxPresent = 0;
    this.gestaltPPCSupportsRealTime = 4096;
    this.gestaltPPCSupportsIncoming = 1;
    this.gestaltPPCSupportsOutGoing = 2;
    this.gestaltPPCSupportsTCP_IP = 4;
    this.gestaltPPCSupportsIncomingAppleTalk = 16;
    this.gestaltPPCSupportsIncomingTCP_IP = 32;
    this.gestaltPPCSupportsOutgoingAppleTalk = 256;
    this.gestaltPPCSupportsOutgoingTCP_IP = 512;
    this.gestaltPowerPCProcessorFeatures = 1886413670;
    this.gestaltPowerPCHasGraphicsInstructions = 0;
    this.gestaltPowerPCHasSTFIWXInstruction = 1;
    this.gestaltPowerPCHasSquareRootInstructions = 2;
    this.gestaltPowerPCHasDCBAInstruction = 3;
    this.gestaltPowerPCHasVectorInstructions = 4;
    this.gestaltPowerPCHasDataStreams = 5;
    this.gestaltPowerPCHas64BitSupport = 6;
    this.gestaltPowerPCHasDCBTStreams = 7;
    this.gestaltPowerPCASArchitecture = 8;
    this.gestaltPowerPCIgnoresDCBST = 9;
    this.gestaltProcessorType = 1886547811;
    this.gestalt68000 = 1;
    this.gestalt68010 = 2;
    this.gestalt68020 = 3;
    this.gestalt68030 = 4;
    this.gestalt68040 = 5;
    this.gestaltSDPPromptVersion = 1886548086;
    this.gestaltParityAttr = 1886549113;
    this.gestaltHasParityCapability = 0;
    this.gestaltParityEnabled = 1;
    this.gestaltQD3DVersion = 1899197984;
    this.gestaltQD3DViewer = 1899198051;
    this.gestaltQD3DViewerPresent = 0;
    this.gestaltQuickdrawVersion = 1902387232;
    this.gestaltOriginalQD = 0;
    this.gestalt8BitQD = 256;
    this.gestalt32BitQD = 512;
    this.gestalt32BitQD11 = 513;
    this.gestalt32BitQD12 = 544;
    this.gestalt32BitQD13 = 560;
    this.gestaltAllegroQD = 592;
    this.gestaltMacOSXQD = 768;
    this.gestaltQD3D = 1902392164;
    this.gestaltQD3DPresent = 0;
    this.gestaltGXVersion = 1902405496;
    this.gestaltQuickdrawFeatures = 1902408311;
    this.gestaltHasColor = 0;
    this.gestaltHasDeepGWorlds = 1;
    this.gestaltHasDirectPixMaps = 2;
    this.gestaltHasGrayishTextOr = 3;
    this.gestaltSupportsMirroring = 4;
    this.gestaltQDHasLongRowBytes = 5;
    this.gestaltQDTextVersion = 1902408824;
    this.gestaltOriginalQDText = 0;
    this.gestaltAllegroQDText = 256;
    this.gestaltMacOSXQDText = 512;
    this.gestaltQDTextFeatures = 1902408806;
    this.gestaltWSIISupport = 0;
    this.gestaltSbitFontSupport = 1;
    this.gestaltAntiAliasedTextAvailable = 2;
    this.gestaltOFA2available = 3;
    this.gestaltCreatesAliasFontRsrc = 4;
    this.gestaltNativeType1FontSupport = 5;
    this.gestaltCanUseCGTextRendering = 6;
    this.gestaltQuickTimeConferencingInfo = 1903453033;
    this.gestaltQuickTimeVersion = 1903454573;
    this.gestaltQuickTime = 1903454573;
    this.gestaltQuickTimeFeatures = 1903456883;
    this.gestaltPPCQuickTimeLibPresent = 0;
    this.gestaltQuickTimeStreamingFeatures = 1903457126;
    this.gestaltQuickTimeStreamingVersion = 1903457140;
    this.gestaltQuickTimeThreadSafeFeaturesAttr = 1903457384;
    this.gestaltQuickTimeThreadSafeICM = 0;
    this.gestaltQuickTimeThreadSafeMovieToolbox = 1;
    this.gestaltQuickTimeThreadSafeMovieImport = 2;
    this.gestaltQuickTimeThreadSafeMovieExport = 3;
    this.gestaltQuickTimeThreadSafeGraphicsImport = 4;
    this.gestaltQuickTimeThreadSafeGraphicsExport = 5;
    this.gestaltQuickTimeThreadSafeMoviePlayback = 6;
    this.gestaltQTVRMgrAttr = 1903457906;
    this.gestaltQTVRMgrPresent = 0;
    this.gestaltQTVRObjMoviesPresent = 1;
    this.gestaltQTVRCylinderPanosPresent = 2;
    this.gestaltQTVRCubicPanosPresent = 3;
    this.gestaltQTVRMgrVers = 1903457910;
    this.gestaltPhysicalRAMSize = 1918987552;
    this.gestaltPhysicalRAMSizeInMegabytes = 1918987629;
    this.gestaltRBVAddr = 1919055392;
    this.gestaltROMSize = 1919905056;
    this.gestaltROMVersion = 1919905142;
    this.gestaltResourceMgrAttr = 1920168547;
    this.gestaltPartialRsrcs = 0;
    this.gestaltHasResourceOverrides = 1;
    this.gestaltResourceMgrBugFixesAttrs = 1919771239;
    this.gestaltRMForceSysHeapRolledIn = 0;
    this.gestaltRMFakeAppleMenuItemsRolledIn = 1;
    this.gestaltSanityCheckResourceFiles = 2;
    this.gestaltSupportsFSpResourceFileAlreadyOpenBit = 3;
    this.gestaltRMSupportsFSCalls = 4;
    this.gestaltRMTypeIndexOrderingReverse = 8;
    this.gestaltRealtimeMgrAttr = 1920232818;
    this.gestaltRealtimeMgrPresent = 0;
    this.gestaltSafeOFAttr = 1935763045;
    this.gestaltVMZerosPagesBit = 0;
    this.gestaltInitHeapZerosOutHeapsBit = 1;
    this.gestaltNewHandleReturnsZeroedMemoryBit = 2;
    this.gestaltNewPtrReturnsZeroedMemoryBit = 3;
    this.gestaltFileAllocationZeroedBlocksBit = 4;
    this.gestaltSCCReadAddr = 1935893362;
    this.gestaltSCCWriteAddr = 1935893367;
    this.gestaltScrapMgrAttr = 1935897185;
    this.gestaltScrapMgrTranslationAware = 0;
    this.gestaltScriptMgrVersion = 1935897193;
    this.gestaltScriptCount = 1935897123;
    this.gestaltSCSI = 1935897449;
    this.gestaltAsyncSCSI = 0;
    this.gestaltAsyncSCSIINROM = 1;
    this.gestaltSCSISlotBoot = 2;
    this.gestaltSCSIPollSIH = 3;
    this.gestaltControlStripAttr = 1935959414;
    this.gestaltControlStripExists = 0;
    this.gestaltControlStripVersionFixed = 1;
    this.gestaltControlStripUserFont = 2;
    this.gestaltControlStripUserHotKey = 3;
    this.gestaltSDPStandardDirectoryVersion = 1935963762;
    this.gestaltSerialAttr = 1936028192;
    this.gestaltHasGPIaToDCDa = 0;
    this.gestaltHasGPIaToRTxCa = 1;
    this.gestaltHasGPIbToDCDb = 2;
    this.gestaltHidePortA = 3;
    this.gestaltHidePortB = 4;
    this.gestaltPortADisabled = 5;
    this.gestaltPortBDisabled = 6;
    this.gestaltShutdownAttributes = 1936225652;
    this.gestaltShutdownHassdOnBootVolUnmount = 0;
    this.gestaltNuBusConnectors = 1936487523;
    this.gestaltSlotAttr = 1936486260;
    this.gestaltSlotMgrExists = 0;
    this.gestaltNuBusPresent = 1;
    this.gestaltSESlotPresent = 2;
    this.gestaltSE30SlotPresent = 3;
    this.gestaltPortableSlotPresent = 4;
    this.gestaltFirstSlotNumber = 1936487473;
    this.gestaltSoundAttr = 1936614432;
    this.gestaltStereoCapability = 0;
    this.gestaltStereoMixing = 1;
    this.gestaltSoundIOMgrPresent = 3;
    this.gestaltBuiltInSoundInput = 4;
    this.gestaltHasSoundInputDevice = 5;
    this.gestaltPlayAndRecord = 6;
    this.gestalt16BitSoundIO = 7;
    this.gestaltStereoInput = 8;
    this.gestaltLineLevelInput = 9;
    this.gestaltSndPlayDoubleBuffer = 10;
    this.gestaltMultiChannels = 11;
    this.gestalt16BitAudioSupport = 12;
    this.gestaltSplitOSAttr = 1936748403;
    this.gestaltSplitOSBootDriveIsNetworkVolume = 0;
    this.gestaltSplitOSAware = 1;
    this.gestaltSplitOSEnablerVolumeIsDifferentFromBootVolume = 2;
    this.gestaltSplitOSMachineNameSetToNetworkNameTemp = 3;
    this.gestaltSplitOSMachineNameStartupDiskIsNonPersistent = 5;
    this.gestaltSMPSPSendLetterVersion = 1936749420;
    this.gestaltSpeechRecognitionAttr = 1936880737;
    this.gestaltDesktopSpeechRecognition = 1;
    this.gestaltTelephoneSpeechRecognition = 2;
    this.gestaltSpeechRecognitionVersion = 1936880738;
    this.gestaltSoftwareVendorCode = 1936875876;
    this.gestaltSoftwareVendorApple = 1097887852;
    this.gestaltSoftwareVendorLicensee = 1281584755;
    this.gestaltStandardFileAttr = 1937007718;
    this.gestaltStandardFile58 = 0;
    this.gestaltStandardFileTranslationAware = 1;
    this.gestaltStandardFileHasColorIcons = 2;
    this.gestaltStandardFileUseGenericIcons = 3;
    this.gestaltStandardFileHasDynamicVolumeAllocation = 4;
    this.gestaltSysArchitecture = 1937339233;
    this.gestalt68k = 1;
    this.gestaltPowerPC = 2;
    this.gestaltIntel = 10;
    this.gestaltSystemUpdateVersion = 1937339253;
    this.gestaltSystemVersion = 1937339254;
    this.gestaltSystemVersionMajor = 1937339185;
    this.gestaltSystemVersionMinor = 1937339186;
    this.gestaltSystemVersionBugFix = 1937339187;
    this.gestaltToolboxTable = 1952609396;
    this.gestaltTextEditVersion = 1952784416;
    this.gestaltTE1 = 1;
    this.gestaltTE2 = 2;
    this.gestaltTE3 = 3;
    this.gestaltTE4 = 4;
    this.gestaltTE5 = 5;
    this.gestaltTE6 = 6;
    this.gestaltTEAttr = 1952801140;
    this.gestaltTEHasGetHiliteRgn = 0;
    this.gestaltTESupportsInlineInput = 1;
    this.gestaltTESupportsTextObjects = 2;
    this.gestaltTEHasWhiteBackground = 3;
    this.gestaltTeleMgrAttr = 1952803941;
    this.gestaltTeleMgrPresent = 0;
    this.gestaltTeleMgrPowerPCSupport = 1;
    this.gestaltTeleMgrSoundStreams = 2;
    this.gestaltTeleMgrAutoAnswer = 3;
    this.gestaltTeleMgrIndHandset = 4;
    this.gestaltTeleMgrSilenceDetect = 5;
    this.gestaltTeleMgrNewTELNewSupport = 6;
    this.gestaltTermMgrAttr = 1952805485;
    this.gestaltTermMgrPresent = 0;
    this.gestaltTermMgrErrorString = 2;
    this.gestaltThreadMgrAttr = 1952998515;
    this.gestaltThreadMgrPresent = 0;
    this.gestaltSpecificMatchSupport = 1;
    this.gestaltThreadsLibraryPresent = 2;
    this.gestaltTimeMgrVersion = 1953326962;
    this.gestaltStandardTimeMgr = 1;
    this.gestaltRevisedTimeMgr = 2;
    this.gestaltExtendedTimeMgr = 3;
    this.gestaltNativeTimeMgr = 4;
    this.gestaltTSMTEVersion = 1953322070;
    this.gestaltTSMTE1 = 256;
    this.gestaltTSMTE15 = 336;
    this.gestaltTSMTE152 = 338;
    this.gestaltTSMTEAttr = 1953322053;
    this.gestaltTSMTEPresent = 0;
    this.gestaltTSMTE = 0;
    this.gestaltAVLTreeAttr = 1953654117;
    this.gestaltAVLTreePresentBit = 0;
    this.gestaltAVLTreeSupportsHandleBasedTreeBit = 1;
    this.gestaltAVLTreeSupportsTreeLockingBit = 2;
    this.gestaltALMAttr = 1953655152;
    this.gestaltALMPresent = 0;
    this.gestaltALMHasSFGroup = 1;
    this.gestaltALMHasCFMSupport = 2;
    this.gestaltALMHasRescanNotifiers = 3;
    this.gestaltALMHasSFLocation = 1;
    this.gestaltTSMgrVersion = 1953721718;
    this.gestaltTSMgr15 = 336;
    this.gestaltTSMgr20 = 512;
    this.gestaltTSMgr22 = 544;
    this.gestaltTSMgr23 = 560;
    this.gestaltTSMgrAttr = 1953721697;
    this.gestaltTSMDisplayMgrAwareBit = 0;
    this.gestaltTSMdoesTSMTEBit = 1;
    this.gestaltSpeechAttr = 1953788771;
    this.gestaltSpeechMgrPresent = 0;
    this.gestaltSpeechHasPPCGlue = 1;
    this.gestaltTVAttr = 1953898528;
    this.gestaltHasTVTuner = 0;
    this.gestaltHasSoundFader = 1;
    this.gestaltHasHWClosedCaptioning = 2;
    this.gestaltHasIRRemote = 3;
    this.gestaltHasVidDecoderScaler = 4;
    this.gestaltHasStereoDecoder = 5;
    this.gestaltHasSerialFader = 6;
    this.gestaltHasFMTuner = 7;
    this.gestaltHasSystemIRFunction = 8;
    this.gestaltIRDisabled = 9;
    this.gestaltINeedIRPowerOffConfirm = 10;
    this.gestaltHasZoomedVideo = 11;
    this.gestaltATSUVersion = 1969845110;
    this.gestaltOriginalATSUVersion = 65536;
    this.gestaltATSUUpdate1 = 131072;
    this.gestaltATSUUpdate2 = 196608;
    this.gestaltATSUUpdate3 = 262144;
    this.gestaltATSUUpdate4 = 327680;
    this.gestaltATSUUpdate5 = 393216;
    this.gestaltATSUUpdate6 = 458752;
    this.gestaltATSUUpdate7 = 524288;
    this.gestaltATSUFeatures = 1969845094;
    this.gestaltATSUTrackingFeature = 1;
    this.gestaltATSUMemoryFeature = 1;
    this.gestaltATSUFallbacksFeature = 1;
    this.gestaltATSUGlyphBoundsFeature = 1;
    this.gestaltATSULineControlFeature = 1;
    this.gestaltATSULayoutCreateAndCopyFeature = 1;
    this.gestaltATSULayoutCacheClearFeature = 1;
    this.gestaltATSUTextLocatorUsageFeature = 2;
    this.gestaltATSULowLevelOrigFeatures = 4;
    this.gestaltATSUFallbacksObjFeatures = 8;
    this.gestaltATSUIgnoreLeadingFeature = 8;
    this.gestaltATSUByCharacterClusterFeature = 16;
    this.gestaltATSUAscentDescentControlsFeature = 16;
    this.gestaltATSUHighlightInactiveTextFeature = 16;
    this.gestaltATSUPositionToCursorFeature = 16;
    this.gestaltATSUBatchBreakLinesFeature = 16;
    this.gestaltATSUTabSupportFeature = 16;
    this.gestaltATSUDirectAccess = 16;
    this.gestaltATSUDecimalTabFeature = 32;
    this.gestaltATSUBiDiCursorPositionFeature = 32;
    this.gestaltATSUNearestCharLineBreakFeature = 32;
    this.gestaltATSUHighlightColorControlFeature = 32;
    this.gestaltATSUUnderlineOptionsStyleFeature = 32;
    this.gestaltATSUStrikeThroughStyleFeature = 32;
    this.gestaltATSUDropShadowStyleFeature = 32;
    this.gestaltUSBAttr = 1970496032;
    this.gestaltUSBPresent = 0;
    this.gestaltUSBHasIsoch = 1;
    this.gestaltUSBVersion = 1970496118;
    this.gestaltVersion = 1986359923;
    this.gestaltValueImplementedVers = 5;
    this.gestaltVIA1Addr = 1986617649;
    this.gestaltVIA2Addr = 1986617650;
    this.gestaltVMAttr = 1986863136;
    this.gestaltVMPresent = 0;
    this.gestaltVMHasLockMemoryForOutput = 1;
    this.gestaltVMFilemappingOn = 3;
    this.gestaltVMHasPagingControl = 4;
    this.gestaltVMInfoType = 1986881902;
    this.gestaltVMInfoSizeStorageType = 0;
    this.gestaltVMInfoSizeType = 1;
    this.gestaltVMInfoSimpleType = 2;
    this.gestaltVMInfoNoneType = 3;
    this.gestaltVMBackingStoreFileRefNum = 1986880115;
    this.gestaltALMVers = 2002873451;
    this.gestaltWindowMgrAttr = 2003398244;
    this.gestaltWindowMgrPresent = 1;
    this.gestaltWindowMgrPresentBit = 0;
    this.gestaltExtendedWindowAttributes = 1;
    this.gestaltExtendedWindowAttributesBit = 1;
    this.gestaltHasFloatingWindows = 2;
    this.gestaltHasFloatingWindowsBit = 2;
    this.gestaltHasWindowBuffering = 3;
    this.gestaltHasWindowBufferingBit = 3;
    this.gestaltWindowLiveResizeBit = 4;
    this.gestaltWindowMinimizeToDockBit = 5;
    this.gestaltHasWindowShadowsBit = 6;
    this.gestaltSheetsAreWindowModalBit = 7;
    this.gestaltFrontWindowMayBeHiddenBit = 8;
    this.gestaltWindowMgrPresentMask = 1;
    this.gestaltExtendedWindowAttributesMask = 2;
    this.gestaltHasFloatingWindowsMask = 4;
    this.gestaltHasWindowBufferingMask = 8;
    this.gestaltWindowLiveResizeMask = 16;
    this.gestaltWindowMinimizeToDockMask = 32;
    this.gestaltHasWindowShadowsMask = 64;
    this.gestaltSheetsAreWindowModalMask = 128;
    this.gestaltFrontWindowMayBeHiddenMask = 256;
    this.gestaltHasSingleWindowModeBit = 8;
    this.gestaltHasSingleWindowModeMask = 256;
    this.gestaltX86Features = 2016949862;
    this.gestaltX86HasFPU = 0;
    this.gestaltX86HasVME = 1;
    this.gestaltX86HasDE = 2;
    this.gestaltX86HasPSE = 3;
    this.gestaltX86HasTSC = 4;
    this.gestaltX86HasMSR = 5;
    this.gestaltX86HasPAE = 6;
    this.gestaltX86HasMCE = 7;
    this.gestaltX86HasCX8 = 8;
    this.gestaltX86HasAPIC = 9;
    this.gestaltX86HasSEP = 11;
    this.gestaltX86HasMTRR = 12;
    this.gestaltX86HasPGE = 13;
    this.gestaltX86HasMCA = 14;
    this.gestaltX86HasCMOV = 15;
    this.gestaltX86HasPAT = 16;
    this.gestaltX86HasPSE36 = 17;
    this.gestaltX86HasPSN = 18;
    this.gestaltX86HasCLFSH = 19;
    this.gestaltX86Serviced20 = 20;
    this.gestaltX86HasDS = 21;
    this.gestaltX86ResACPI = 22;
    this.gestaltX86HasMMX = 23;
    this.gestaltX86HasFXSR = 24;
    this.gestaltX86HasSSE = 25;
    this.gestaltX86HasSSE2 = 26;
    this.gestaltX86HasSS = 27;
    this.gestaltX86HasHTT = 28;
    this.gestaltX86HasTM = 29;
    this.gestaltX86AdditionalFeatures = 2016949857;
    this.gestaltX86HasSSE3 = 0;
    this.gestaltX86HasMONITOR = 3;
    this.gestaltX86HasDSCPL = 4;
    this.gestaltX86HasVMX = 5;
    this.gestaltX86HasSMX = 6;
    this.gestaltX86HasEST = 7;
    this.gestaltX86HasTM2 = 8;
    this.gestaltX86HasSupplementalSSE3 = 9;
    this.gestaltX86HasCID = 10;
    this.gestaltX86HasCX16 = 13;
    this.gestaltX86HasxTPR = 14;
    this.gestaltTranslationAttr = 2020368756;
    this.gestaltTranslationMgrExists = 0;
    this.gestaltTranslationMgrHintOrder = 1;
    this.gestaltTranslationPPCAvail = 2;
    this.gestaltTranslationGetPathAPIAvail = 3;
    this.gestaltExtToolboxTable = 2020897908;
    this.gestaltUSBPrinterSharingVersion = 2053204768;
    this.gestaltUSBPrinterSharingVersionMask = 65535;
    this.gestaltUSBPrinterSharingAttr = 2053204768;
    this.gestaltUSBPrinterSharingAttrMask = -65536;
    this.gestaltUSBPrinterSharingAttrRunning = -2147483648;
    this.gestaltUSBPrinterSharingAttrBooted = 1073741824;
    this.gestaltWorldScriptIIVersion = 1685026146;
    this.gestaltWorldScriptIIAttr = 2004050292;
    this.gestaltWSIICanPrintWithoutPrGeneralBit = 0;
}

// Based on /System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/MacErrors.h
function MacErrors_h(lib) {

    if (this._MACERRORS_H)
        return;
    this._MACERRORS_H = true;

    this.paramErr = -50;
    this.noHardwareErr = -200;
    this.notEnoughHardwareErr = -201;
    this.userCanceledErr = -128;
    this.qErr = -1;
    this.vTypErr = -2;
    this.corErr = -3;
    this.unimpErr = -4;
    this.SlpTypeErr = -5;
    this.seNoDB = -8;
    this.controlErr = -17;
    this.statusErr = -18;
    this.readErr = -19;
    this.writErr = -20;
    this.badUnitErr = -21;
    this.unitEmptyErr = -22;
    this.openErr = -23;
    this.closErr = -24;
    this.dRemovErr = -25;
    this.dInstErr = -26;
    this.abortErr = -27;
    this.iIOAbortErr = -27;
    this.notOpenErr = -28;
    this.unitTblFullErr = -29;
    this.dceExtErr = -30;
    this.slotNumErr = -360;
    this.gcrOnMFMErr = -400;
    this.dirFulErr = -33;
    this.dskFulErr = -34;
    this.nsvErr = -35;
    this.ioErr = -36;
    this.bdNamErr = -37;
    this.fnOpnErr = -38;
    this.eofErr = -39;
    this.posErr = -40;
    this.mFulErr = -41;
    this.tmfoErr = -42;
    this.fnfErr = -43;
    this.wPrErr = -44;
    this.fLckdErr = -45;
    this.vLckdErr = -46;
    this.fBsyErr = -47;
    this.dupFNErr = -48;
    this.opWrErr = -49;
    this.rfNumErr = -51;
    this.gfpErr = -52;
    this.volOffLinErr = -53;
    this.permErr = -54;
    this.volOnLinErr = -55;
    this.nsDrvErr = -56;
    this.noMacDskErr = -57;
    this.extFSErr = -58;
    this.fsRnErr = -59;
    this.badMDBErr = -60;
    this.wrPermErr = -61;
    this.dirNFErr = -120;
    this.tmwdoErr = -121;
    this.badMovErr = -122;
    this.wrgVolTypErr = -123;
    this.volGoneErr = -124;
    this.fidNotFound = -1300;
    this.fidExists = -1301;
    this.notAFileErr = -1302;
    this.diffVolErr = -1303;
    this.catChangedErr = -1304;
    this.desktopDamagedErr = -1305;
    this.sameFileErr = -1306;
    this.badFidErr = -1307;
    this.notARemountErr = -1308;
    this.fileBoundsErr = -1309;
    this.fsDataTooBigErr = -1310;
    this.volVMBusyErr = -1311;
    this.badFCBErr = -1327;
    this.errFSUnknownCall = -1400;
    this.errFSBadFSRef = -1401;
    this.errFSBadForkName = -1402;
    this.errFSBadBuffer = -1403;
    this.errFSBadForkRef = -1404;
    this.errFSBadInfoBitmap = -1405;
    this.errFSMissingCatInfo = -1406;
    this.errFSNotAFolder = -1407;
    this.errFSForkNotFound = -1409;
    this.errFSNameTooLong = -1410;
    this.errFSMissingName = -1411;
    this.errFSBadPosMode = -1412;
    this.errFSBadAllocFlags = -1413;
    this.errFSNoMoreItems = -1417;
    this.errFSBadItemCount = -1418;
    this.errFSBadSearchParams = -1419;
    this.errFSRefsDifferent = -1420;
    this.errFSForkExists = -1421;
    this.errFSBadIteratorFlags = -1422;
    this.errFSIteratorNotFound = -1423;
    this.errFSIteratorNotSupported = -1424;
    this.errFSQuotaExceeded = -1425;
    this.errFSOperationNotSupported = -1426;
    this.errFSAttributeNotFound = -1427;
    this.errFSPropertyNotValid = -1428;
    this.errFSNotEnoughSpaceForOperation = -1429;
    this.envNotPresent = -5500;
    this.envBadVers = -5501;
    this.envVersTooBig = -5502;
    this.fontDecError = -64;
    this.fontNotDeclared = -65;
    this.fontSubErr = -66;
    this.fontNotOutlineErr = -32615;
    this.firstDskErr = -84;
    this.lastDskErr = -64;
    this.noDriveErr = -64;
    this.offLinErr = -65;
    this.noNybErr = -66;
    this.noAdrMkErr = -67;
    this.dataVerErr = -68;
    this.badCksmErr = -69;
    this.badBtSlpErr = -70;
    this.noDtaMkErr = -71;
    this.badDCksum = -72;
    this.badDBtSlp = -73;
    this.wrUnderrun = -74;
    this.cantStepErr = -75;
    this.tk0BadErr = -76;
    this.initIWMErr = -77;
    this.twoSideErr = -78;
    this.spdAdjErr = -79;
    this.seekErr = -80;
    this.sectNFErr = -81;
    this.fmt1Err = -82;
    this.fmt2Err = -83;
    this.verErr = -84;
    this.clkRdErr = -85;
    this.clkWrErr = -86;
    this.prWrErr = -87;
    this.prInitErr = -88;
    this.rcvrErr = -89;
    this.breakRecd = -90;
    this.noScrapErr = -100;
    this.noTypeErr = -102;
    this.eLenErr = -92;
    this.eMultiErr = -91;
    this.ddpSktErr = -91;
    this.ddpLenErr = -92;
    this.noBridgeErr = -93;
    this.lapProtErr = -94;
    this.excessCollsns = -95;
    this.portNotPwr = -96;
    this.portInUse = -97;
    this.portNotCf = -98;
    this.memROZWarn = -99;
    this.memROZError = -99;
    this.memROZErr = -99;
    this.memFullErr = -108;
    this.nilHandleErr = -109;
    this.memWZErr = -111;
    this.memPurErr = -112;
    this.memAdrErr = -110;
    this.memAZErr = -113;
    this.memPCErr = -114;
    this.memBCErr = -115;
    this.memSCErr = -116;
    this.memLockedErr = -117;
    this.iMemFullErr = -108;
    this.iIOAbort = -27;
    this.resourceInMemory = -188;
    this.writingPastEnd = -189;
    this.inputOutOfBounds = -190;
    this.resNotFound = -192;
    this.resFNotFound = -193;
    this.addResFailed = -194;
    this.addRefFailed = -195;
    this.rmvResFailed = -196;
    this.rmvRefFailed = -197;
    this.resAttrErr = -198;
    this.mapReadErr = -199;
    this.CantDecompress = -186;
    this.badExtResource = -185;
    this.noMemForPictPlaybackErr = -145;
    this.rgnOverflowErr = -147;
    this.rgnTooBigError = -147;
    this.pixMapTooDeepErr = -148;
    this.insufficientStackErr = -149;
    this.nsStackErr = -149;
    this.evtNotEnb = 1;
    this.cMatchErr = -150;
    this.cTempMemErr = -151;
    this.cNoMemErr = -152;
    this.cRangeErr = -153;
    this.cProtectErr = -154;
    this.cDevErr = -155;
    this.cResErr = -156;
    this.cDepthErr = -157;
    this.rgnTooBigErr = -500;
    this.updPixMemErr = -125;
    this.pictInfoVersionErr = -11000;
    this.pictInfoIDErr = -11001;
    this.pictInfoVerbErr = -11002;
    this.cantLoadPickMethodErr = -11003;
    this.colorsRequestedErr = -11004;
    this.pictureDataErr = -11005;
    this.cmProfileError = -170;
    this.cmMethodError = -171;
    this.cmMethodNotFound = -175;
    this.cmProfileNotFound = -176;
    this.cmProfilesIdentical = -177;
    this.cmCantConcatenateError = -178;
    this.cmCantXYZ = -179;
    this.cmCantDeleteProfile = -180;
    this.cmUnsupportedDataType = -181;
    this.cmNoCurrentProfile = -182;
    this.noHardware = -200;
    this.notEnoughHardware = -201;
    this.queueFull = -203;
    this.resProblem = -204;
    this.badChannel = -205;
    this.badFormat = -206;
    this.notEnoughBufferSpace = -207;
    this.badFileFormat = -208;
    this.channelBusy = -209;
    this.buffersTooSmall = -210;
    this.channelNotBusy = -211;
    this.noMoreRealTime = -212;
    this.siVBRCompressionNotSupported = -213;
    this.siNoSoundInHardware = -220;
    this.siBadSoundInDevice = -221;
    this.siNoBufferSpecified = -222;
    this.siInvalidCompression = -223;
    this.siHardDriveTooSlow = -224;
    this.siInvalidSampleRate = -225;
    this.siInvalidSampleSize = -226;
    this.siDeviceBusyErr = -227;
    this.siBadDeviceName = -228;
    this.siBadRefNum = -229;
    this.siInputDeviceErr = -230;
    this.siUnknownInfoType = -231;
    this.siUnknownQuality = -232;
    this.noSynthFound = -240;
    this.synthOpenFailed = -241;
    this.synthNotReady = -242;
    this.bufTooSmall = -243;
    this.voiceNotFound = -244;
    this.incompatibleVoice = -245;
    this.badDictFormat = -246;
    this.badInputText = -247;
    this.midiNoClientErr = -250;
    this.midiNoPortErr = -251;
    this.midiTooManyPortsErr = -252;
    this.midiTooManyConsErr = -253;
    this.midiVConnectErr = -254;
    this.midiVConnectMade = -255;
    this.midiVConnectRmvd = -256;
    this.midiNoConErr = -257;
    this.midiWriteErr = -258;
    this.midiNameLenErr = -259;
    this.midiDupIDErr = -260;
    this.midiInvalidCmdErr = -261;
    this.nmTypErr = -299;
    this.siInitSDTblErr = 1;
    this.siInitVBLQsErr = 2;
    this.siInitSPTblErr = 3;
    this.sdmJTInitErr = 10;
    this.sdmInitErr = 11;
    this.sdmSRTInitErr = 12;
    this.sdmPRAMInitErr = 13;
    this.sdmPriInitErr = 14;
    this.smSDMInitErr = -290;
    this.smSRTInitErr = -291;
    this.smPRAMInitErr = -292;
    this.smPriInitErr = -293;
    this.smEmptySlot = -300;
    this.smCRCFail = -301;
    this.smFormatErr = -302;
    this.smRevisionErr = -303;
    this.smNoDir = -304;
    this.smDisabledSlot = -305;
    this.smNosInfoArray = -306;
    this.smResrvErr = -307;
    this.smUnExBusErr = -308;
    this.smBLFieldBad = -309;
    this.smFHBlockRdErr = -310;
    this.smFHBlkDispErr = -311;
    this.smDisposePErr = -312;
    this.smNoBoardSRsrc = -313;
    this.smGetPRErr = -314;
    this.smNoBoardId = -315;
    this.smInitStatVErr = -316;
    this.smInitTblVErr = -317;
    this.smNoJmpTbl = -318;
    this.smReservedSlot = -318;
    this.smBadBoardId = -319;
    this.smBusErrTO = -320;
    this.svTempDisable = -32768;
    this.svDisabled = -32640;
    this.smBadRefId = -330;
    this.smBadsList = -331;
    this.smReservedErr = -332;
    this.smCodeRevErr = -333;
    this.smCPUErr = -334;
    this.smsPointerNil = -335;
    this.smNilsBlockErr = -336;
    this.smSlotOOBErr = -337;
    this.smSelOOBErr = -338;
    this.smNewPErr = -339;
    this.smBlkMoveErr = -340;
    this.smCkStatusErr = -341;
    this.smGetDrvrNamErr = -342;
    this.smDisDrvrNamErr = -343;
    this.smNoMoresRsrcs = -344;
    this.smsGetDrvrErr = -345;
    this.smBadsPtrErr = -346;
    this.smByteLanesErr = -347;
    this.smOffsetErr = -348;
    this.smNoGoodOpens = -349;
    this.smSRTOvrFlErr = -350;
    this.smRecNotFnd = -351;
    this.notBTree = -410;
    this.btNoSpace = -413;
    this.btDupRecErr = -414;
    this.btRecNotFnd = -415;
    this.btKeyLenErr = -416;
    this.btKeyAttrErr = -417;
    this.unknownInsertModeErr = -20000;
    this.recordDataTooBigErr = -20001;
    this.invalidIndexErr = -20002;
    this.fsmFFSNotFoundErr = -431;
    this.fsmBusyFFSErr = -432;
    this.fsmBadFFSNameErr = -433;
    this.fsmBadFSDLenErr = -434;
    this.fsmDuplicateFSIDErr = -435;
    this.fsmBadFSDVersionErr = -436;
    this.fsmNoAlternateStackErr = -437;
    this.fsmUnknownFSMMessageErr = -438;
    this.editionMgrInitErr = -450;
    this.badSectionErr = -451;
    this.notRegisteredSectionErr = -452;
    this.badEditionFileErr = -453;
    this.badSubPartErr = -454;
    this.multiplePublisherWrn = -460;
    this.containerNotFoundWrn = -461;
    this.containerAlreadyOpenWrn = -462;
    this.notThePublisherWrn = -463;
    this.teScrapSizeErr = -501;
    this.hwParamErr = -502;
    this.driverHardwareGoneErr = -503;
    this.procNotFound = -600;
    this.memFragErr = -601;
    this.appModeErr = -602;
    this.protocolErr = -603;
    this.hardwareConfigErr = -604;
    this.appMemFullErr = -605;
    this.appIsDaemon = -606;
    this.bufferIsSmall = -607;
    this.noOutstandingHLE = -608;
    this.connectionInvalid = -609;
    this.noUserInteractionAllowed = -610;
    this.wrongApplicationPlatform = -875;
    this.appVersionTooOld = -876;
    this.notAppropriateForClassic = -877;
    this.threadTooManyReqsErr = -617;
    this.threadNotFoundErr = -618;
    this.threadProtocolErr = -619;
    this.threadBadAppContextErr = -616;
    this.notEnoughMemoryErr = -620;
    this.notHeldErr = -621;
    this.cannotMakeContiguousErr = -622;
    this.notLockedErr = -623;
    this.interruptsMaskedErr = -624;
    this.cannotDeferErr = -625;
    this.noMMUErr = -626;
    this.vmMorePhysicalThanVirtualErr = -628;
    this.vmKernelMMUInitErr = -629;
    this.vmOffErr = -630;
    this.vmMemLckdErr = -631;
    this.vmBadDriver = -632;
    this.vmNoVectorErr = -633;
    this.vmInvalidBackingFileIDErr = -640;
    this.vmMappingPrivilegesErr = -641;
    this.vmBusyBackingFileErr = -642;
    this.vmNoMoreBackingFilesErr = -643;
    this.vmInvalidFileViewIDErr = -644;
    this.vmFileViewAccessErr = -645;
    this.vmNoMoreFileViewsErr = -646;
    this.vmAddressNotInFileViewErr = -647;
    this.vmInvalidOwningProcessErr = -648;
    this.rcDBNull = -800;
    this.rcDBValue = -801;
    this.rcDBError = -802;
    this.rcDBBadType = -803;
    this.rcDBBreak = -804;
    this.rcDBExec = -805;
    this.rcDBBadSessID = -806;
    this.rcDBBadSessNum = -807;
    this.rcDBBadDDEV = -808;
    this.rcDBAsyncNotSupp = -809;
    this.rcDBBadAsyncPB = -810;
    this.rcDBNoHandler = -811;
    this.rcDBWrongVersion = -812;
    this.rcDBPackNotInited = -813;
    this.hmHelpDisabled = -850;
    this.hmBalloonAborted = -853;
    this.hmSameAsLastBalloon = -854;
    this.hmHelpManagerNotInited = -855;
    this.hmSkippedBalloon = -857;
    this.hmWrongVersion = -858;
    this.hmUnknownHelpType = -859;
    this.hmOperationUnsupported = -861;
    this.hmNoBalloonUp = -862;
    this.hmCloseViewActive = -863;
    this.notInitErr = -900;
    this.nameTypeErr = -902;
    this.noPortErr = -903;
    this.noGlobalsErr = -904;
    this.localOnlyErr = -905;
    this.destPortErr = -906;
    this.sessTableErr = -907;
    this.noSessionErr = -908;
    this.badReqErr = -909;
    this.portNameExistsErr = -910;
    this.noUserNameErr = -911;
    this.userRejectErr = -912;
    this.noMachineNameErr = -913;
    this.noToolboxNameErr = -914;
    this.noResponseErr = -915;
    this.portClosedErr = -916;
    this.sessClosedErr = -917;
    this.badPortNameErr = -919;
    this.noDefaultUserErr = -922;
    this.notLoggedInErr = -923;
    this.noUserRefErr = -924;
    this.networkErr = -925;
    this.noInformErr = -926;
    this.authFailErr = -927;
    this.noUserRecErr = -928;
    this.badServiceMethodErr = -930;
    this.badLocNameErr = -931;
    this.guestNotAllowedErr = -932;
    this.kFMIterationCompleted = -980;
    this.kFMInvalidFontFamilyErr = -981;
    this.kFMInvalidFontErr = -982;
    this.kFMIterationScopeModifiedErr = -983;
    this.kFMFontTableAccessErr = -984;
    this.kFMFontContainerAccessErr = -985;
    this.noMaskFoundErr = -1000;
    this.nbpBuffOvr = -1024;
    this.nbpNoConfirm = -1025;
    this.nbpConfDiff = -1026;
    this.nbpDuplicate = -1027;
    this.nbpNotFound = -1028;
    this.nbpNISErr = -1029;
    this.aspBadVersNum = -1066;
    this.aspBufTooSmall = -1067;
    this.aspNoMoreSess = -1068;
    this.aspNoServers = -1069;
    this.aspParamErr = -1070;
    this.aspServerBusy = -1071;
    this.aspSessClosed = -1072;
    this.aspSizeErr = -1073;
    this.aspTooMany = -1074;
    this.aspNoAck = -1075;
    this.reqFailed = -1096;
    this.tooManyReqs = -1097;
    this.tooManySkts = -1098;
    this.badATPSkt = -1099;
    this.badBuffNum = -1100;
    this.noRelErr = -1101;
    this.cbNotFound = -1102;
    this.noSendResp = -1103;
    this.noDataArea = -1104;
    this.reqAborted = -1105;
    this.errRefNum = -1280;
    this.errAborted = -1279;
    this.errState = -1278;
    this.errOpening = -1277;
    this.errAttention = -1276;
    this.errFwdReset = -1275;
    this.errDSPQueueSize = -1274;
    this.errOpenDenied = -1273;
    this.errAECoercionFail = -1700;
    this.errAEDescNotFound = -1701;
    this.errAECorruptData = -1702;
    this.errAEWrongDataType = -1703;
    this.errAENotAEDesc = -1704;
    this.errAEBadListItem = -1705;
    this.errAENewerVersion = -1706;
    this.errAENotAppleEvent = -1707;
    this.errAEEventNotHandled = -1708;
    this.errAEReplyNotValid = -1709;
    this.errAEUnknownSendMode = -1710;
    this.errAEWaitCanceled = -1711;
    this.errAETimeout = -1712;
    this.errAENoUserInteraction = -1713;
    this.errAENotASpecialFunction = -1714;
    this.errAEParamMissed = -1715;
    this.errAEUnknownAddressType = -1716;
    this.errAEHandlerNotFound = -1717;
    this.errAEReplyNotArrived = -1718;
    this.errAEIllegalIndex = -1719;
    this.errAEImpossibleRange = -1720;
    this.errAEWrongNumberArgs = -1721;
    this.errAEAccessorNotFound = -1723;
    this.errAENoSuchLogical = -1725;
    this.errAEBadTestKey = -1726;
    this.errAENotAnObjSpec = -1727;
    this.errAENoSuchObject = -1728;
    this.errAENegativeCount = -1729;
    this.errAEEmptyListContainer = -1730;
    this.errAEUnknownObjectType = -1731;
    this.errAERecordingIsAlreadyOn = -1732;
    this.errAEReceiveTerminate = -1733;
    this.errAEReceiveEscapeCurrent = -1734;
    this.errAEEventFiltered = -1735;
    this.errAEDuplicateHandler = -1736;
    this.errAEStreamBadNesting = -1737;
    this.errAEStreamAlreadyConverted = -1738;
    this.errAEDescIsNull = -1739;
    this.errAEBuildSyntaxError = -1740;
    this.errAEBufferTooSmall = -1741;
    this.errOSASystemError = -1750;
    this.errOSAInvalidID = -1751;
    this.errOSABadStorageType = -1752;
    this.errOSAScriptError = -1753;
    this.errOSABadSelector = -1754;
    this.errOSASourceNotAvailable = -1756;
    this.errOSANoSuchDialect = -1757;
    this.errOSADataFormatObsolete = -1758;
    this.errOSADataFormatTooNew = -1759;
    this.errOSACorruptData = -1702;
    this.errOSARecordingIsAlreadyOn = -1732;
    this.errOSAComponentMismatch = -1761;
    this.errOSACantOpenComponent = -1762;
    this.errOffsetInvalid = -1800;
    this.errOffsetIsOutsideOfView = -1801;
    this.errTopOfDocument = -1810;
    this.errTopOfBody = -1811;
    this.errEndOfDocument = -1812;
    this.errEndOfBody = -1813;
    this.badDragRefErr = -1850;
    this.badDragItemErr = -1851;
    this.badDragFlavorErr = -1852;
    this.duplicateFlavorErr = -1853;
    this.cantGetFlavorErr = -1854;
    this.duplicateHandlerErr = -1855;
    this.handlerNotFoundErr = -1856;
    this.dragNotAcceptedErr = -1857;
    this.unsupportedForPlatformErr = -1858;
    this.noSuitableDisplaysErr = -1859;
    this.badImageRgnErr = -1860;
    this.badImageErr = -1861;
    this.nonDragOriginatorErr = -1862;
    this.couldNotResolveDataRef = -2000;
    this.badImageDescription = -2001;
    this.badPublicMovieAtom = -2002;
    this.cantFindHandler = -2003;
    this.cantOpenHandler = -2004;
    this.badComponentType = -2005;
    this.noMediaHandler = -2006;
    this.noDataHandler = -2007;
    this.invalidMedia = -2008;
    this.invalidTrack = -2009;
    this.invalidMovie = -2010;
    this.invalidSampleTable = -2011;
    this.invalidDataRef = -2012;
    this.invalidHandler = -2013;
    this.invalidDuration = -2014;
    this.invalidTime = -2015;
    this.cantPutPublicMovieAtom = -2016;
    this.badEditList = -2017;
    this.mediaTypesDontMatch = -2018;
    this.progressProcAborted = -2019;
    this.movieToolboxUninitialized = -2020;
    this.noRecordOfApp = -2020;
    this.wfFileNotFound = -2021;
    this.cantCreateSingleForkFile = -2022;
    this.invalidEditState = -2023;
    this.nonMatchingEditState = -2024;
    this.staleEditState = -2025;
    this.userDataItemNotFound = -2026;
    this.maxSizeToGrowTooSmall = -2027;
    this.badTrackIndex = -2028;
    this.trackIDNotFound = -2029;
    this.trackNotInMovie = -2030;
    this.timeNotInTrack = -2031;
    this.timeNotInMedia = -2032;
    this.badEditIndex = -2033;
    this.internalQuickTimeError = -2034;
    this.cantEnableTrack = -2035;
    this.invalidRect = -2036;
    this.invalidSampleNum = -2037;
    this.invalidChunkNum = -2038;
    this.invalidSampleDescIndex = -2039;
    this.invalidChunkCache = -2040;
    this.invalidSampleDescription = -2041;
    this.dataNotOpenForRead = -2042;
    this.dataNotOpenForWrite = -2043;
    this.dataAlreadyOpenForWrite = -2044;
    this.dataAlreadyClosed = -2045;
    this.endOfDataReached = -2046;
    this.dataNoDataRef = -2047;
    this.noMovieFound = -2048;
    this.invalidDataRefContainer = -2049;
    this.badDataRefIndex = -2050;
    this.noDefaultDataRef = -2051;
    this.couldNotUseAnExistingSample = -2052;
    this.featureUnsupported = -2053;
    this.noVideoTrackInMovieErr = -2054;
    this.noSoundTrackInMovieErr = -2055;
    this.soundSupportNotAvailableErr = -2056;
    this.unsupportedAuxiliaryImportData = -2057;
    this.auxiliaryExportDataUnavailable = -2058;
    this.samplesAlreadyInMediaErr = -2059;
    this.noSourceTreeFoundErr = -2060;
    this.sourceNotFoundErr = -2061;
    this.movieTextNotFoundErr = -2062;
    this.missingRequiredParameterErr = -2063;
    this.invalidSpriteWorldPropertyErr = -2064;
    this.invalidSpritePropertyErr = -2065;
    this.gWorldsNotSameDepthAndSizeErr = -2066;
    this.invalidSpriteIndexErr = -2067;
    this.invalidImageIndexErr = -2068;
    this.invalidSpriteIDErr = -2069;
    this.internalComponentErr = -2070;
    this.notImplementedMusicOSErr = -2071;
    this.cantSendToSynthesizerOSErr = -2072;
    this.cantReceiveFromSynthesizerOSErr = -2073;
    this.illegalVoiceAllocationOSErr = -2074;
    this.illegalPartOSErr = -2075;
    this.illegalChannelOSErr = -2076;
    this.illegalKnobOSErr = -2077;
    this.illegalKnobValueOSErr = -2078;
    this.illegalInstrumentOSErr = -2079;
    this.illegalControllerOSErr = -2080;
    this.midiManagerAbsentOSErr = -2081;
    this.synthesizerNotRespondingOSErr = -2082;
    this.synthesizerOSErr = -2083;
    this.illegalNoteChannelOSErr = -2084;
    this.noteChannelNotAllocatedOSErr = -2085;
    this.tunePlayerFullOSErr = -2086;
    this.tuneParseOSErr = -2087;
    this.noExportProcAvailableErr = -2089;
    this.videoOutputInUseErr = -2090;
    this.componentDllLoadErr = -2091;
    this.componentDllEntryNotFoundErr = -2092;
    this.qtmlDllLoadErr = -2093;
    this.qtmlDllEntryNotFoundErr = -2094;
    this.qtmlUninitialized = -2095;
    this.unsupportedOSErr = -2096;
    this.unsupportedProcessorErr = -2097;
    this.componentNotThreadSafeErr = -2098;
    this.cannotFindAtomErr = -2101;
    this.notLeafAtomErr = -2102;
    this.atomsNotOfSameTypeErr = -2103;
    this.atomIndexInvalidErr = -2104;
    this.duplicateAtomTypeAndIDErr = -2105;
    this.invalidAtomErr = -2106;
    this.invalidAtomContainerErr = -2107;
    this.invalidAtomTypeErr = -2108;
    this.cannotBeLeafAtomErr = -2109;
    this.pathTooLongErr = -2110;
    this.emptyPathErr = -2111;
    this.noPathMappingErr = -2112;
    this.pathNotVerifiedErr = -2113;
    this.unknownFormatErr = -2114;
    this.wackBadFileErr = -2115;
    this.wackForkNotFoundErr = -2116;
    this.wackBadMetaDataErr = -2117;
    this.qfcbNotFoundErr = -2118;
    this.qfcbNotCreatedErr = -2119;
    this.AAPNotCreatedErr = -2120;
    this.AAPNotFoundErr = -2121;
    this.ASDBadHeaderErr = -2122;
    this.ASDBadForkErr = -2123;
    this.ASDEntryNotFoundErr = -2124;
    this.fileOffsetTooBigErr = -2125;
    this.notAllowedToSaveMovieErr = -2126;
    this.qtNetworkAlreadyAllocatedErr = -2127;
    this.urlDataHHTTPProtocolErr = -2129;
    this.urlDataHHTTPNoNetDriverErr = -2130;
    this.urlDataHHTTPURLErr = -2131;
    this.urlDataHHTTPRedirectErr = -2132;
    this.urlDataHFTPProtocolErr = -2133;
    this.urlDataHFTPShutdownErr = -2134;
    this.urlDataHFTPBadUserErr = -2135;
    this.urlDataHFTPBadPasswordErr = -2136;
    this.urlDataHFTPServerErr = -2137;
    this.urlDataHFTPDataConnectionErr = -2138;
    this.urlDataHFTPNoDirectoryErr = -2139;
    this.urlDataHFTPQuotaErr = -2140;
    this.urlDataHFTPPermissionsErr = -2141;
    this.urlDataHFTPFilenameErr = -2142;
    this.urlDataHFTPNoNetDriverErr = -2143;
    this.urlDataHFTPBadNameListErr = -2144;
    this.urlDataHFTPNeedPasswordErr = -2145;
    this.urlDataHFTPNoPasswordErr = -2146;
    this.urlDataHFTPServerDisconnectedErr = -2147;
    this.urlDataHFTPURLErr = -2148;
    this.notEnoughDataErr = -2149;
    this.qtActionNotHandledErr = -2157;
    this.qtXMLParseErr = -2158;
    this.qtXMLApplicationErr = -2159;
    this.digiUnimpErr = -2201;
    this.qtParamErr = -2202;
    this.matrixErr = -2203;
    this.notExactMatrixErr = -2204;
    this.noMoreKeyColorsErr = -2205;
    this.notExactSizeErr = -2206;
    this.badDepthErr = -2207;
    this.noDMAErr = -2208;
    this.badCallOrderErr = -2209;
    this.kernelIncompleteErr = -2401;
    this.kernelCanceledErr = -2402;
    this.kernelOptionsErr = -2403;
    this.kernelPrivilegeErr = -2404;
    this.kernelUnsupportedErr = -2405;
    this.kernelObjectExistsErr = -2406;
    this.kernelWritePermissionErr = -2407;
    this.kernelReadPermissionErr = -2408;
    this.kernelExecutePermissionErr = -2409;
    this.kernelDeletePermissionErr = -2410;
    this.kernelExecutionLevelErr = -2411;
    this.kernelAttributeErr = -2412;
    this.kernelAsyncSendLimitErr = -2413;
    this.kernelAsyncReceiveLimitErr = -2414;
    this.kernelTimeoutErr = -2415;
    this.kernelInUseErr = -2416;
    this.kernelTerminatedErr = -2417;
    this.kernelExceptionErr = -2418;
    this.kernelIDErr = -2419;
    this.kernelAlreadyFreeErr = -2421;
    this.kernelReturnValueErr = -2422;
    this.kernelUnrecoverableErr = -2499;
    this.tsmComponentNoErr = 0;
    this.tsmUnsupScriptLanguageErr = -2500;
    this.tsmInputMethodNotFoundErr = -2501;
    this.tsmNotAnAppErr = -2502;
    this.tsmAlreadyRegisteredErr = -2503;
    this.tsmNeverRegisteredErr = -2504;
    this.tsmInvalidDocIDErr = -2505;
    this.tsmTSMDocBusyErr = -2506;
    this.tsmDocNotActiveErr = -2507;
    this.tsmNoOpenTSErr = -2508;
    this.tsmCantOpenComponentErr = -2509;
    this.tsmTextServiceNotFoundErr = -2510;
    this.tsmDocumentOpenErr = -2511;
    this.tsmUseInputWindowErr = -2512;
    this.tsmTSHasNoMenuErr = -2513;
    this.tsmTSNotOpenErr = -2514;
    this.tsmComponentAlreadyOpenErr = -2515;
    this.tsmInputMethodIsOldErr = -2516;
    this.tsmScriptHasNoIMErr = -2517;
    this.tsmUnsupportedTypeErr = -2518;
    this.tsmUnknownErr = -2519;
    this.tsmInvalidContext = -2520;
    this.tsmNoHandler = -2521;
    this.tsmNoMoreTokens = -2522;
    this.tsmNoStem = -2523;
    this.tsmDefaultIsNotInputMethodErr = -2524;
    this.tsmDocPropertyNotFoundErr = -2528;
    this.tsmDocPropertyBufferTooSmallErr = -2529;
    this.tsmCantChangeForcedClassStateErr = -2530;
    this.tsmComponentPropertyUnsupportedErr = -2531;
    this.tsmComponentPropertyNotFoundErr = -2532;
    this.tsmInputModeChangeFailedErr = -2533;
    this.mmInternalError = -2526;
    this.nrLockedErr = -2536;
    this.nrNotEnoughMemoryErr = -2537;
    this.nrInvalidNodeErr = -2538;
    this.nrNotFoundErr = -2539;
    this.nrNotCreatedErr = -2540;
    this.nrNameErr = -2541;
    this.nrNotSlotDeviceErr = -2542;
    this.nrDataTruncatedErr = -2543;
    this.nrPowerErr = -2544;
    this.nrPowerSwitchAbortErr = -2545;
    this.nrTypeMismatchErr = -2546;
    this.nrNotModifiedErr = -2547;
    this.nrOverrunErr = -2548;
    this.nrResultCodeBase = -2549;
    this.nrPathNotFound = -2550;
    this.nrPathBufferTooSmall = -2551;
    this.nrInvalidEntryIterationOp = -2552;
    this.nrPropertyAlreadyExists = -2553;
    this.nrIterationDone = -2554;
    this.nrExitedIteratorScope = -2555;
    this.nrTransactionAborted = -2556;
    this.nrCallNotSupported = -2557;
    this.invalidIconRefErr = -2580;
    this.noSuchIconErr = -2581;
    this.noIconDataAvailableErr = -2582;
    this.errOSACantCoerce = -1700;
    this.errOSACantAccess = -1728;
    this.errOSACantAssign = -10006;
    this.errOSAGeneralError = -2700;
    this.errOSADivideByZero = -2701;
    this.errOSANumericOverflow = -2702;
    this.errOSACantLaunch = -2703;
    this.errOSAAppNotHighLevelEventAware = -2704;
    this.errOSACorruptTerminology = -2705;
    this.errOSAStackOverflow = -2706;
    this.errOSAInternalTableOverflow = -2707;
    this.errOSADataBlockTooLarge = -2708;
    this.errOSACantGetTerminology = -2709;
    this.errOSACantCreate = -2710;
    this.errOSATypeError = -1703;
    this.OSAMessageNotUnderstood = -1708;
    this.OSAUndefinedHandler = -1717;
    this.OSAIllegalAccess = -1723;
    this.OSAIllegalIndex = -1719;
    this.OSAIllegalRange = -1720;
    this.OSAIllegalAssign = -10003;
    this.OSASyntaxError = -2740;
    this.OSASyntaxTypeError = -2741;
    this.OSATokenTooLong = -2742;
    this.OSAMissingParameter = -1701;
    this.OSAParameterMismatch = -1721;
    this.OSADuplicateParameter = -2750;
    this.OSADuplicateProperty = -2751;
    this.OSADuplicateHandler = -2752;
    this.OSAUndefinedVariable = -2753;
    this.OSAInconsistentDeclarations = -2754;
    this.OSAControlFlowError = -2755;
    this.errASCantConsiderAndIgnore = -2720;
    this.errASCantCompareMoreThan32k = -2721;
    this.errASTerminologyNestingTooDeep = -2760;
    this.errASIllegalFormalParameter = -2761;
    this.errASParameterNotForEvent = -2762;
    this.errASNoResultReturned = -2763;
    this.errASInconsistentNames = -2780;
    this.cfragFirstErrCode = -2800;
    this.cfragContextIDErr = -2800;
    this.cfragConnectionIDErr = -2801;
    this.cfragNoSymbolErr = -2802;
    this.cfragNoSectionErr = -2803;
    this.cfragNoLibraryErr = -2804;
    this.cfragDupRegistrationErr = -2805;
    this.cfragFragmentFormatErr = -2806;
    this.cfragUnresolvedErr = -2807;
    this.cfragNoPositionErr = -2808;
    this.cfragNoPrivateMemErr = -2809;
    this.cfragNoClientMemErr = -2810;
    this.cfragNoIDsErr = -2811;
    this.cfragInitOrderErr = -2812;
    this.cfragImportTooOldErr = -2813;
    this.cfragImportTooNewErr = -2814;
    this.cfragInitLoopErr = -2815;
    this.cfragInitAtBootErr = -2816;
    this.cfragLibConnErr = -2817;
    this.cfragCFMStartupErr = -2818;
    this.cfragCFMInternalErr = -2819;
    this.cfragFragmentCorruptErr = -2820;
    this.cfragInitFunctionErr = -2821;
    this.cfragNoApplicationErr = -2822;
    this.cfragArchitectureErr = -2823;
    this.cfragFragmentUsageErr = -2824;
    this.cfragFileSizeErr = -2825;
    this.cfragNotClosureErr = -2826;
    this.cfragNoRegistrationErr = -2827;
    this.cfragContainerIDErr = -2828;
    this.cfragClosureIDErr = -2829;
    this.cfragAbortClosureErr = -2830;
    this.cfragOutputLengthErr = -2831;
    this.cfragMapFileErr = -2851;
    this.cfragExecFileRefErr = -2854;
    this.cfragStdFolderErr = -2855;
    this.cfragRsrcForkErr = -2856;
    this.cfragCFragRsrcErr = -2857;
    this.cfragLastErrCode = -2899;
    this.cfragFirstReservedCode = -2897;
    this.cfragReservedCode_3 = -2897;
    this.cfragReservedCode_2 = -2898;
    this.cfragReservedCode_1 = -2899;
    this.invalidComponentID = -3000;
    this.validInstancesExist = -3001;
    this.componentNotCaptured = -3002;
    this.componentDontRegister = -3003;
    this.unresolvedComponentDLLErr = -3004;
    this.retryComponentRegistrationErr = -3005;
    this.invalidTranslationPathErr = -3025;
    this.couldNotParseSourceFileErr = -3026;
    this.noTranslationPathErr = -3030;
    this.badTranslationSpecErr = -3031;
    this.noPrefAppErr = -3032;
    this.buf2SmallErr = -3101;
    this.noMPPErr = -3102;
    this.ckSumErr = -3103;
    this.extractErr = -3104;
    this.readQErr = -3105;
    this.atpLenErr = -3106;
    this.atpBadRsp = -3107;
    this.recNotFnd = -3108;
    this.sktClosedErr = -3109;
    this.kOTNoError = 0;
    this.kOTOutOfMemoryErr = -3211;
    this.kOTNotFoundErr = -3201;
    this.kOTDuplicateFoundErr = -3216;
    this.kOTBadAddressErr = -3150;
    this.kOTBadOptionErr = -3151;
    this.kOTAccessErr = -3152;
    this.kOTBadReferenceErr = -3153;
    this.kOTNoAddressErr = -3154;
    this.kOTOutStateErr = -3155;
    this.kOTBadSequenceErr = -3156;
    this.kOTSysErrorErr = -3157;
    this.kOTLookErr = -3158;
    this.kOTBadDataErr = -3159;
    this.kOTBufferOverflowErr = -3160;
    this.kOTFlowErr = -3161;
    this.kOTNoDataErr = -3162;
    this.kOTNoDisconnectErr = -3163;
    this.kOTNoUDErrErr = -3164;
    this.kOTBadFlagErr = -3165;
    this.kOTNoReleaseErr = -3166;
    this.kOTNotSupportedErr = -3167;
    this.kOTStateChangeErr = -3168;
    this.kOTNoStructureTypeErr = -3169;
    this.kOTBadNameErr = -3170;
    this.kOTBadQLenErr = -3171;
    this.kOTAddressBusyErr = -3172;
    this.kOTIndOutErr = -3173;
    this.kOTProviderMismatchErr = -3174;
    this.kOTResQLenErr = -3175;
    this.kOTResAddressErr = -3176;
    this.kOTQFullErr = -3177;
    this.kOTProtocolErr = -3178;
    this.kOTBadSyncErr = -3179;
    this.kOTCanceledErr = -3180;
    this.kEPERMErr = -3200;
    this.kENOENTErr = -3201;
    this.kENORSRCErr = -3202;
    this.kEINTRErr = -3203;
    this.kEIOErr = -3204;
    this.kENXIOErr = -3205;
    this.kEBADFErr = -3208;
    this.kEAGAINErr = -3210;
    this.kENOMEMErr = -3211;
    this.kEACCESErr = -3212;
    this.kEFAULTErr = -3213;
    this.kEBUSYErr = -3215;
    this.kEEXISTErr = -3216;
    this.kENODEVErr = -3218;
    this.kEINVALErr = -3221;
    this.kENOTTYErr = -3224;
    this.kEPIPEErr = -3231;
    this.kERANGEErr = -3233;
    this.kEWOULDBLOCKErr = -3234;
    this.kEDEADLKErr = -3234;
    this.kEALREADYErr = -3236;
    this.kENOTSOCKErr = -3237;
    this.kEDESTADDRREQErr = -3238;
    this.kEMSGSIZEErr = -3239;
    this.kEPROTOTYPEErr = -3240;
    this.kENOPROTOOPTErr = -3241;
    this.kEPROTONOSUPPORTErr = -3242;
    this.kESOCKTNOSUPPORTErr = -3243;
    this.kEOPNOTSUPPErr = -3244;
    this.kEADDRINUSEErr = -3247;
    this.kEADDRNOTAVAILErr = -3248;
    this.kENETDOWNErr = -3249;
    this.kENETUNREACHErr = -3250;
    this.kENETRESETErr = -3251;
    this.kECONNABORTEDErr = -3252;
    this.kECONNRESETErr = -3253;
    this.kENOBUFSErr = -3254;
    this.kEISCONNErr = -3255;
    this.kENOTCONNErr = -3256;
    this.kESHUTDOWNErr = -3257;
    this.kETOOMANYREFSErr = -3258;
    this.kETIMEDOUTErr = -3259;
    this.kECONNREFUSEDErr = -3260;
    this.kEHOSTDOWNErr = -3263;
    this.kEHOSTUNREACHErr = -3264;
    this.kEPROTOErr = -3269;
    this.kETIMEErr = -3270;
    this.kENOSRErr = -3271;
    this.kEBADMSGErr = -3272;
    this.kECANCELErr = -3273;
    this.kENOSTRErr = -3274;
    this.kENODATAErr = -3275;
    this.kEINPROGRESSErr = -3276;
    this.kESRCHErr = -3277;
    this.kENOMSGErr = -3278;
    this.kOTClientNotInittedErr = -3279;
    this.kOTPortHasDiedErr = -3280;
    this.kOTPortWasEjectedErr = -3281;
    this.kOTBadConfigurationErr = -3282;
    this.kOTConfigurationChangedErr = -3283;
    this.kOTUserRequestedErr = -3284;
    this.kOTPortLostConnection = -3285;
    this.kQDNoPalette = -3950;
    this.kQDNoColorHWCursorSupport = -3951;
    this.kQDCursorAlreadyRegistered = -3952;
    this.kQDCursorNotRegistered = -3953;
    this.kQDCorruptPICTDataErr = -3954;
    this.firstPickerError = -4000;
    this.invalidPickerType = -4000;
    this.requiredFlagsDontMatch = -4001;
    this.pickerResourceError = -4002;
    this.cantLoadPicker = -4003;
    this.cantCreatePickerWindow = -4004;
    this.cantLoadPackage = -4005;
    this.pickerCantLive = -4006;
    this.colorSyncNotInstalled = -4007;
    this.badProfileError = -4008;
    this.noHelpForItem = -4009;
    this.kNSL68kContextNotSupported = -4170;
    this.kNSLSchedulerError = -4171;
    this.kNSLBadURLSyntax = -4172;
    this.kNSLNoCarbonLib = -4173;
    this.kNSLUILibraryNotAvailable = -4174;
    this.kNSLNotImplementedYet = -4175;
    this.kNSLErrNullPtrError = -4176;
    this.kNSLSomePluginsFailedToLoad = -4177;
    this.kNSLNullNeighborhoodPtr = -4178;
    this.kNSLNoPluginsForSearch = -4179;
    this.kNSLSearchAlreadyInProgress = -4180;
    this.kNSLNoPluginsFound = -4181;
    this.kNSLPluginLoadFailed = -4182;
    this.kNSLBadProtocolTypeErr = -4183;
    this.kNSLNullListPtr = -4184;
    this.kNSLBadClientInfoPtr = -4185;
    this.kNSLCannotContinueLookup = -4186;
    this.kNSLBufferTooSmallForData = -4187;
    this.kNSLNoContextAvailable = -4188;
    this.kNSLRequestBufferAlreadyInList = -4189;
    this.kNSLInvalidPluginSpec = -4190;
    this.kNSLNoSupportForService = -4191;
    this.kNSLBadNetConnection = -4192;
    this.kNSLBadDataTypeErr = -4193;
    this.kNSLBadServiceTypeErr = -4194;
    this.kNSLBadReferenceErr = -4195;
    this.kNSLNoElementsInList = -4196;
    this.kNSLInsufficientOTVer = -4197;
    this.kNSLInsufficientSysVer = -4198;
    this.kNSLNotInitialized = -4199;
    this.kNSLInitializationFailed = -4200;
    this.kDTPHoldJobErr = -4200;
    this.kDTPStopQueueErr = -4201;
    this.kDTPTryAgainErr = -4202;
    this.kDTPAbortJobErr = 128;
    this.cmElementTagNotFound = -4200;
    this.cmIndexRangeErr = -4201;
    this.cmCantDeleteElement = -4202;
    this.cmFatalProfileErr = -4203;
    this.cmInvalidProfile = -4204;
    this.cmInvalidProfileLocation = -4205;
    this.cmCantCopyModifiedV1Profile = -4215;
    this.cmInvalidSearch = -4206;
    this.cmSearchError = -4207;
    this.cmErrIncompatibleProfile = -4208;
    this.cmInvalidColorSpace = -4209;
    this.cmInvalidSrcMap = -4210;
    this.cmInvalidDstMap = -4211;
    this.cmNoGDevicesError = -4212;
    this.cmInvalidProfileComment = -4213;
    this.cmRangeOverFlow = -4214;
    this.cmNamedColorNotFound = -4216;
    this.cmCantGamutCheckError = -4217;
    this.badFolderDescErr = -4270;
    this.duplicateFolderDescErr = -4271;
    this.noMoreFolderDescErr = -4272;
    this.invalidFolderTypeErr = -4273;
    this.duplicateRoutingErr = -4274;
    this.routingNotFoundErr = -4275;
    this.badRoutingSizeErr = -4276;
    this.coreFoundationUnknownErr = -4960;
    this.errCoreEndianDataTooShortForFormat = -4940;
    this.errCoreEndianDataTooLongForFormat = -4941;
    this.errCoreEndianDataDoesNotMatchFormat = -4942;
    this.internalScrapErr = -4988;
    this.duplicateScrapFlavorErr = -4989;
    this.badScrapRefErr = -4990;
    this.processStateIncorrectErr = -4991;
    this.scrapPromiseNotKeptErr = -4992;
    this.noScrapPromiseKeeperErr = -4993;
    this.nilScrapFlavorDataErr = -4994;
    this.scrapFlavorFlagsMismatchErr = -4995;
    this.scrapFlavorSizeMismatchErr = -4996;
    this.illegalScrapFlavorFlagsErr = -4997;
    this.illegalScrapFlavorTypeErr = -4998;
    this.illegalScrapFlavorSizeErr = -4999;
    this.scrapFlavorNotFoundErr = -102;
    this.needClearScrapErr = -100;
    this.afpAccessDenied = -5000;
    this.afpAuthContinue = -5001;
    this.afpBadUAM = -5002;
    this.afpBadVersNum = -5003;
    this.afpBitmapErr = -5004;
    this.afpCantMove = -5005;
    this.afpDenyConflict = -5006;
    this.afpDirNotEmpty = -5007;
    this.afpDiskFull = -5008;
    this.afpEofError = -5009;
    this.afpFileBusy = -5010;
    this.afpFlatVol = -5011;
    this.afpItemNotFound = -5012;
    this.afpLockErr = -5013;
    this.afpMiscErr = -5014;
    this.afpNoMoreLocks = -5015;
    this.afpNoServer = -5016;
    this.afpObjectExists = -5017;
    this.afpObjectNotFound = -5018;
    this.afpParmErr = -5019;
    this.afpRangeNotLocked = -5020;
    this.afpRangeOverlap = -5021;
    this.afpSessClosed = -5022;
    this.afpUserNotAuth = -5023;
    this.afpCallNotSupported = -5024;
    this.afpObjectTypeErr = -5025;
    this.afpTooManyFilesOpen = -5026;
    this.afpServerGoingDown = -5027;
    this.afpCantRename = -5028;
    this.afpDirNotFound = -5029;
    this.afpIconTypeError = -5030;
    this.afpVolLocked = -5031;
    this.afpObjectLocked = -5032;
    this.afpContainsSharedErr = -5033;
    this.afpIDNotFound = -5034;
    this.afpIDExists = -5035;
    this.afpDiffVolErr = -5036;
    this.afpCatalogChanged = -5037;
    this.afpSameObjectErr = -5038;
    this.afpBadIDErr = -5039;
    this.afpPwdSameErr = -5040;
    this.afpPwdTooShortErr = -5041;
    this.afpPwdExpiredErr = -5042;
    this.afpInsideSharedErr = -5043;
    this.afpInsideTrashErr = -5044;
    this.afpPwdNeedsChangeErr = -5045;
    this.afpPwdPolicyErr = -5046;
    this.afpAlreadyLoggedInErr = -5047;
    this.afpCallNotAllowed = -5048;
    this.afpBadDirIDType = -5060;
    this.afpCantMountMoreSrvre = -5061;
    this.afpAlreadyMounted = -5062;
    this.afpSameNodeErr = -5063;
    this.numberFormattingNotANumberErr = -5200;
    this.numberFormattingOverflowInDestinationErr = -5201;
    this.numberFormattingBadNumberFormattingObjectErr = -5202;
    this.numberFormattingSpuriousCharErr = -5203;
    this.numberFormattingLiteralMissingErr = -5204;
    this.numberFormattingDelimiterMissingErr = -5205;
    this.numberFormattingEmptyFormatErr = -5206;
    this.numberFormattingBadFormatErr = -5207;
    this.numberFormattingBadOptionsErr = -5208;
    this.numberFormattingBadTokenErr = -5209;
    this.numberFormattingUnOrderedCurrencyRangeErr = -5210;
    this.numberFormattingBadCurrencyPositionErr = -5211;
    this.numberFormattingNotADigitErr = -5212;
    this.numberFormattingUnOrdredCurrencyRangeErr = -5210;
    this.numberFortmattingNotADigitErr = -5212;
    this.textParserBadParamErr = -5220;
    this.textParserObjectNotFoundErr = -5221;
    this.textParserBadTokenValueErr = -5222;
    this.textParserBadParserObjectErr = -5223;
    this.textParserParamErr = -5224;
    this.textParserNoMoreTextErr = -5225;
    this.textParserBadTextLanguageErr = -5226;
    this.textParserBadTextEncodingErr = -5227;
    this.textParserNoSuchTokenFoundErr = -5228;
    this.textParserNoMoreTokensErr = -5229;
    this.errUnknownAttributeTag = -5240;
    this.errMarginWilllNotFit = -5241;
    this.errNotInImagingMode = -5242;
    this.errAlreadyInImagingMode = -5243;
    this.errEngineNotFound = -5244;
    this.errIteratorReachedEnd = -5245;
    this.errInvalidRange = -5246;
    this.errOffsetNotOnElementBounday = -5247;
    this.errNoHiliteText = -5248;
    this.errEmptyScrap = -5249;
    this.errReadOnlyText = -5250;
    this.errUnknownElement = -5251;
    this.errNonContiuousAttribute = -5252;
    this.errCannotUndo = -5253;
    this.hrHTMLRenderingLibNotInstalledErr = -5360;
    this.hrMiscellaneousExceptionErr = -5361;
    this.hrUnableToResizeHandleErr = -5362;
    this.hrURLNotHandledErr = -5363;
    this.errIANoErr = 0;
    this.errIAUnknownErr = -5380;
    this.errIAAllocationErr = -5381;
    this.errIAParamErr = -5382;
    this.errIANoMoreItems = -5383;
    this.errIABufferTooSmall = -5384;
    this.errIACanceled = -5385;
    this.errIAInvalidDocument = -5386;
    this.errIATextExtractionErr = -5387;
    this.errIAEndOfTextRun = -5388;
    this.qtsBadSelectorErr = -5400;
    this.qtsBadStateErr = -5401;
    this.qtsBadDataErr = -5402;
    this.qtsUnsupportedDataTypeErr = -5403;
    this.qtsUnsupportedRateErr = -5404;
    this.qtsUnsupportedFeatureErr = -5405;
    this.qtsTooMuchDataErr = -5406;
    this.qtsUnknownValueErr = -5407;
    this.qtsTimeoutErr = -5408;
    this.qtsConnectionFailedErr = -5420;
    this.qtsAddressBusyErr = -5421;
    this.gestaltUnknownErr = -5550;
    this.gestaltUndefSelectorErr = -5551;
    this.gestaltDupSelectorErr = -5552;
    this.gestaltLocationErr = -5553;
    this.menuPropertyInvalidErr = -5603;
    this.menuPropertyInvalid = -5603;
    this.menuPropertyNotFoundErr = -5604;
    this.menuNotFoundErr = -5620;
    this.menuUsesSystemDefErr = -5621;
    this.menuItemNotFoundErr = -5622;
    this.menuInvalidErr = -5623;
    this.errInvalidWindowPtr = -5600;
    this.errInvalidWindowRef = -5600;
    this.errUnsupportedWindowAttributesForClass = -5601;
    this.errWindowDoesNotHaveProxy = -5602;
    this.errInvalidWindowProperty = -5603;
    this.errWindowPropertyNotFound = -5604;
    this.errUnrecognizedWindowClass = -5605;
    this.errCorruptWindowDescription = -5606;
    this.errUserWantsToDragWindow = -5607;
    this.errWindowsAlreadyInitialized = -5608;
    this.errFloatingWindowsNotInitialized = -5609;
    this.errWindowNotFound = -5610;
    this.errWindowDoesNotFitOnscreen = -5611;
    this.windowAttributeImmutableErr = -5612;
    this.windowAttributesConflictErr = -5613;
    this.windowManagerInternalErr = -5614;
    this.windowWrongStateErr = -5615;
    this.windowGroupInvalidErr = -5616;
    this.windowAppModalStateAlreadyExistsErr = -5617;
    this.windowNoAppModalStateErr = -5618;
    this.errWindowDoesntSupportFocus = -30583;
    this.errWindowRegionCodeInvalid = -30593;
    this.dialogNoTimeoutErr = -5640;
    this.kNavWrongDialogStateErr = -5694;
    this.kNavWrongDialogClassErr = -5695;
    this.kNavInvalidSystemConfigErr = -5696;
    this.kNavCustomControlMessageFailedErr = -5697;
    this.kNavInvalidCustomControlMessageErr = -5698;
    this.kNavMissingKindStringErr = -5699;
    this.collectionItemLockedErr = -5750;
    this.collectionItemNotFoundErr = -5751;
    this.collectionIndexRangeErr = -5752;
    this.collectionVersionErr = -5753;
    this.kQTSSUnknownErr = -6150;
    this.kDMGenErr = -6220;
    this.kDMMirroringOnAlready = -6221;
    this.kDMWrongNumberOfDisplays = -6222;
    this.kDMMirroringBlocked = -6223;
    this.kDMCantBlock = -6224;
    this.kDMMirroringNotOn = -6225;
    this.kSysSWTooOld = -6226;
    this.kDMSWNotInitializedErr = -6227;
    this.kDMDriverNotDisplayMgrAwareErr = -6228;
    this.kDMDisplayNotFoundErr = -6229;
    this.kDMNotFoundErr = -6229;
    this.kDMDisplayAlreadyInstalledErr = -6230;
    this.kDMMainDisplayCannotMoveErr = -6231;
    this.kDMNoDeviceTableclothErr = -6231;
    this.kDMFoundErr = -6232;
    this.laTooSmallBufferErr = -6984;
    this.laEnvironmentBusyErr = -6985;
    this.laEnvironmentNotFoundErr = -6986;
    this.laEnvironmentExistErr = -6987;
    this.laInvalidPathErr = -6988;
    this.laNoMoreMorphemeErr = -6989;
    this.laFailAnalysisErr = -6990;
    this.laTextOverFlowErr = -6991;
    this.laDictionaryNotOpenedErr = -6992;
    this.laDictionaryUnknownErr = -6993;
    this.laDictionaryTooManyErr = -6994;
    this.laPropertyValueErr = -6995;
    this.laPropertyUnknownErr = -6996;
    this.laPropertyIsReadOnlyErr = -6997;
    this.laPropertyNotFoundErr = -6998;
    this.laPropertyErr = -6999;
    this.laEngineNotFoundErr = -7000;
    this.kUSBNoErr = 0;
    this.kUSBNoTran = 0;
    this.kUSBNoDelay = 0;
    this.kUSBPending = 1;
    this.kUSBNotSent2Err = -6901;
    this.kUSBNotSent1Err = -6902;
    this.kUSBBufUnderRunErr = -6903;
    this.kUSBBufOvrRunErr = -6904;
    this.kUSBRes2Err = -6905;
    this.kUSBRes1Err = -6906;
    this.kUSBUnderRunErr = -6907;
    this.kUSBOverRunErr = -6908;
    this.kUSBWrongPIDErr = -6909;
    this.kUSBPIDCheckErr = -6910;
    this.kUSBNotRespondingErr = -6911;
    this.kUSBEndpointStallErr = -6912;
    this.kUSBDataToggleErr = -6913;
    this.kUSBBitstufErr = -6914;
    this.kUSBCRCErr = -6915;
    this.kUSBLinkErr = -6916;
    this.kUSBQueueFull = -6948;
    this.kUSBNotHandled = -6987;
    this.kUSBUnknownNotification = -6949;
    this.kUSBBadDispatchTable = -6950;
    this.kUSBInternalReserved10 = -6951;
    this.kUSBInternalReserved9 = -6952;
    this.kUSBInternalReserved8 = -6953;
    this.kUSBInternalReserved7 = -6954;
    this.kUSBInternalReserved6 = -6955;
    this.kUSBInternalReserved5 = -6956;
    this.kUSBInternalReserved4 = -6957;
    this.kUSBInternalReserved3 = -6958;
    this.kUSBInternalReserved2 = -6959;
    this.kUSBInternalReserved1 = -6960;
    this.kUSBPortDisabled = -6969;
    this.kUSBQueueAborted = -6970;
    this.kUSBTimedOut = -6971;
    this.kUSBDeviceDisconnected = -6972;
    this.kUSBDeviceNotSuspended = -6973;
    this.kUSBDeviceSuspended = -6974;
    this.kUSBInvalidBuffer = -6975;
    this.kUSBDevicePowerProblem = -6976;
    this.kUSBDeviceBusy = -6977;
    this.kUSBUnknownInterfaceErr = -6978;
    this.kUSBPipeStalledError = -6979;
    this.kUSBPipeIdleError = -6980;
    this.kUSBNoBandwidthError = -6981;
    this.kUSBAbortedError = -6982;
    this.kUSBFlagsError = -6983;
    this.kUSBCompletionError = -6984;
    this.kUSBPBLengthError = -6985;
    this.kUSBPBVersionError = -6986;
    this.kUSBNotFound = -6987;
    this.kUSBOutOfMemoryErr = -6988;
    this.kUSBDeviceErr = -6989;
    this.kUSBNoDeviceErr = -6990;
    this.kUSBAlreadyOpenErr = -6991;
    this.kUSBTooManyTransactionsErr = -6992;
    this.kUSBUnknownRequestErr = -6993;
    this.kUSBRqErr = -6994;
    this.kUSBIncorrectTypeErr = -6995;
    this.kUSBTooManyPipesErr = -6996;
    this.kUSBUnknownPipeErr = -6997;
    this.kUSBUnknownDeviceErr = -6998;
    this.kUSBInternalErr = -6999;
    this.dcmParamErr = -7100;
    this.dcmNotDictionaryErr = -7101;
    this.dcmBadDictionaryErr = -7102;
    this.dcmPermissionErr = -7103;
    this.dcmDictionaryNotOpenErr = -7104;
    this.dcmDictionaryBusyErr = -7105;
    this.dcmBlockFullErr = -7107;
    this.dcmNoRecordErr = -7108;
    this.dcmDupRecordErr = -7109;
    this.dcmNecessaryFieldErr = -7110;
    this.dcmBadFieldInfoErr = -7111;
    this.dcmBadFieldTypeErr = -7112;
    this.dcmNoFieldErr = -7113;
    this.dcmBadKeyErr = -7115;
    this.dcmTooManyKeyErr = -7116;
    this.dcmBadDataSizeErr = -7117;
    this.dcmBadFindMethodErr = -7118;
    this.dcmBadPropertyErr = -7119;
    this.dcmProtectedErr = -7121;
    this.dcmNoAccessMethodErr = -7122;
    this.dcmBadFeatureErr = -7124;
    this.dcmIterationCompleteErr = -7126;
    this.dcmBufferOverflowErr = -7127;
    this.kRAInvalidParameter = -7100;
    this.kRAInvalidPort = -7101;
    this.kRAStartupFailed = -7102;
    this.kRAPortSetupFailed = -7103;
    this.kRAOutOfMemory = -7104;
    this.kRANotSupported = -7105;
    this.kRAMissingResources = -7106;
    this.kRAIncompatiblePrefs = -7107;
    this.kRANotConnected = -7108;
    this.kRAConnectionCanceled = -7109;
    this.kRAUnknownUser = -7110;
    this.kRAInvalidPassword = -7111;
    this.kRAInternalError = -7112;
    this.kRAInstallationDamaged = -7113;
    this.kRAPortBusy = -7114;
    this.kRAUnknownPortState = -7115;
    this.kRAInvalidPortState = -7116;
    this.kRAInvalidSerialProtocol = -7117;
    this.kRAUserLoginDisabled = -7118;
    this.kRAUserPwdChangeRequired = -7119;
    this.kRAUserPwdEntryRequired = -7120;
    this.kRAUserInteractionRequired = -7121;
    this.kRAInitOpenTransportFailed = -7122;
    this.kRARemoteAccessNotReady = -7123;
    this.kRATCPIPInactive = -7124;
    this.kRATCPIPNotConfigured = -7125;
    this.kRANotPrimaryInterface = -7126;
    this.kRAConfigurationDBInitErr = -7127;
    this.kRAPPPProtocolRejected = -7128;
    this.kRAPPPAuthenticationFailed = -7129;
    this.kRAPPPNegotiationFailed = -7130;
    this.kRAPPPUserDisconnected = -7131;
    this.kRAPPPPeerDisconnected = -7132;
    this.kRAPeerNotResponding = -7133;
    this.kRAATalkInactive = -7134;
    this.kRAExtAuthenticationFailed = -7135;
    this.kRANCPRejectedbyPeer = -7136;
    this.kRADuplicateIPAddr = -7137;
    this.kRACallBackFailed = -7138;
    this.kRANotEnabled = -7139;
    this.kATSUInvalidTextLayoutErr = -8790;
    this.kATSUInvalidStyleErr = -8791;
    this.kATSUInvalidTextRangeErr = -8792;
    this.kATSUFontsMatched = -8793;
    this.kATSUFontsNotMatched = -8794;
    this.kATSUNoCorrespondingFontErr = -8795;
    this.kATSUInvalidFontErr = -8796;
    this.kATSUInvalidAttributeValueErr = -8797;
    this.kATSUInvalidAttributeSizeErr = -8798;
    this.kATSUInvalidAttributeTagErr = -8799;
    this.kATSUInvalidCacheErr = -8800;
    this.kATSUNotSetErr = -8801;
    this.kATSUNoStyleRunsAssignedErr = -8802;
    this.kATSUQuickDrawTextErr = -8803;
    this.kATSULowLevelErr = -8804;
    this.kATSUNoFontCmapAvailableErr = -8805;
    this.kATSUNoFontScalerAvailableErr = -8806;
    this.kATSUCoordinateOverflowErr = -8807;
    this.kATSULineBreakInWord = -8808;
    this.kATSUBusyObjectErr = -8809;
    this.kTextUnsupportedEncodingErr = -8738;
    this.kTextMalformedInputErr = -8739;
    this.kTextUndefinedElementErr = -8740;
    this.kTECMissingTableErr = -8745;
    this.kTECTableChecksumErr = -8746;
    this.kTECTableFormatErr = -8747;
    this.kTECCorruptConverterErr = -8748;
    this.kTECNoConversionPathErr = -8749;
    this.kTECBufferBelowMinimumSizeErr = -8750;
    this.kTECArrayFullErr = -8751;
    this.kTECBadTextRunErr = -8752;
    this.kTECPartialCharErr = -8753;
    this.kTECUnmappableElementErr = -8754;
    this.kTECIncompleteElementErr = -8755;
    this.kTECDirectionErr = -8756;
    this.kTECGlobalsUnavailableErr = -8770;
    this.kTECItemUnavailableErr = -8771;
    this.kTECUsedFallbacksStatus = -8783;
    this.kTECNeedFlushStatus = -8784;
    this.kTECOutputBufferFullStatus = -8785;
    this.unicodeChecksumErr = -8769;
    this.unicodeNoTableErr = -8768;
    this.unicodeVariantErr = -8767;
    this.unicodeFallbacksErr = -8766;
    this.unicodePartConvertErr = -8765;
    this.unicodeBufErr = -8764;
    this.unicodeCharErr = -8763;
    this.unicodeElementErr = -8762;
    this.unicodeNotFoundErr = -8761;
    this.unicodeTableFormatErr = -8760;
    this.unicodeDirectionErr = -8759;
    this.unicodeContextualErr = -8758;
    this.unicodeTextEncodingDataErr = -8757;
    this.kUTCUnderflowErr = -8850;
    this.kUTCOverflowErr = -8851;
    this.kIllegalClockValueErr = -8852;
    this.kATSUInvalidFontFallbacksErr = -8900;
    this.kATSUUnsupportedStreamFormatErr = -8901;
    this.kATSUBadStreamErr = -8902;
    this.kATSUOutputBufferTooSmallErr = -8903;
    this.kATSUInvalidCallInsideCallbackErr = -8904;
    this.kATSUNoFontNameErr = -8905;
    this.kATSULastErr = -8959;
    this.codecErr = -8960;
    this.noCodecErr = -8961;
    this.codecUnimpErr = -8962;
    this.codecSizeErr = -8963;
    this.codecScreenBufErr = -8964;
    this.codecImageBufErr = -8965;
    this.codecSpoolErr = -8966;
    this.codecAbortErr = -8967;
    this.codecWouldOffscreenErr = -8968;
    this.codecBadDataErr = -8969;
    this.codecDataVersErr = -8970;
    this.codecExtensionNotFoundErr = -8971;
    this.scTypeNotFoundErr = -8971;
    this.codecConditionErr = -8972;
    this.codecOpenErr = -8973;
    this.codecCantWhenErr = -8974;
    this.codecCantQueueErr = -8975;
    this.codecNothingToBlitErr = -8976;
    this.codecNoMemoryPleaseWaitErr = -8977;
    this.codecDisabledErr = -8978;
    this.codecNeedToFlushChainErr = -8979;
    this.lockPortBitsBadSurfaceErr = -8980;
    this.lockPortBitsWindowMovedErr = -8981;
    this.lockPortBitsWindowResizedErr = -8982;
    this.lockPortBitsWindowClippedErr = -8983;
    this.lockPortBitsBadPortErr = -8984;
    this.lockPortBitsSurfaceLostErr = -8985;
    this.codecParameterDialogConfirm = -8986;
    this.codecNeedAccessKeyErr = -8987;
    this.codecOffscreenFailedErr = -8988;
    this.codecDroppedFrameErr = -8989;
    this.directXObjectAlreadyExists = -8990;
    this.lockPortBitsWrongGDeviceErr = -8991;
    this.codecOffscreenFailedPleaseRetryErr = -8992;
    this.badCodecCharacterizationErr = -8993;
    this.noThumbnailFoundErr = -8994;
    this.kBadAdapterErr = -9050;
    this.kBadAttributeErr = -9051;
    this.kBadBaseErr = -9052;
    this.kBadEDCErr = -9053;
    this.kBadIRQErr = -9054;
    this.kBadOffsetErr = -9055;
    this.kBadPageErr = -9056;
    this.kBadSizeErr = -9057;
    this.kBadSocketErr = -9058;
    this.kBadTypeErr = -9059;
    this.kBadVccErr = -9060;
    this.kBadVppErr = -9061;
    this.kBadWindowErr = -9062;
    this.kBadArgLengthErr = -9063;
    this.kBadArgsErr = -9064;
    this.kBadHandleErr = -9065;
    this.kBadCISErr = -9066;
    this.kBadSpeedErr = -9067;
    this.kReadFailureErr = -9068;
    this.kWriteFailureErr = -9069;
    this.kGeneralFailureErr = -9070;
    this.kNoCardErr = -9071;
    this.kUnsupportedFunctionErr = -9072;
    this.kUnsupportedModeErr = -9073;
    this.kBusyErr = -9074;
    this.kWriteProtectedErr = -9075;
    this.kConfigurationLockedErr = -9076;
    this.kInUseErr = -9077;
    this.kNoMoreItemsErr = -9078;
    this.kOutOfResourceErr = -9079;
    this.kNoCardSevicesSocketsErr = -9080;
    this.kInvalidRegEntryErr = -9081;
    this.kBadLinkErr = -9082;
    this.kBadDeviceErr = -9083;
    this.k16BitCardErr = -9084;
    this.kCardBusCardErr = -9085;
    this.kPassCallToChainErr = -9086;
    this.kCantConfigureCardErr = -9087;
    this.kPostCardEventErr = -9088;
    this.kInvalidDeviceNumber = -9089;
    this.kUnsupportedVsErr = -9090;
    this.kInvalidCSClientErr = -9091;
    this.kBadTupleDataErr = -9092;
    this.kBadCustomIFIDErr = -9093;
    this.kNoIOWindowRequestedErr = -9094;
    this.kNoMoreTimerClientsErr = -9095;
    this.kNoMoreInterruptSlotsErr = -9096;
    this.kNoClientTableErr = -9097;
    this.kUnsupportedCardErr = -9098;
    this.kNoCardEnablersFoundErr = -9099;
    this.kNoEnablerForCardErr = -9100;
    this.kNoCompatibleNameErr = -9101;
    this.kClientRequestDenied = -9102;
    this.kNotReadyErr = -9103;
    this.kTooManyIOWindowsErr = -9104;
    this.kAlreadySavedStateErr = -9105;
    this.kAttemptDupCardEntryErr = -9106;
    this.kCardPowerOffErr = -9107;
    this.kNotZVCapableErr = -9108;
    this.kNoCardBusCISErr = -9109;
    this.noDeviceForChannel = -9400;
    this.grabTimeComplete = -9401;
    this.cantDoThatInCurrentMode = -9402;
    this.notEnoughMemoryToGrab = -9403;
    this.notEnoughDiskSpaceToGrab = -9404;
    this.couldntGetRequiredComponent = -9405;
    this.badSGChannel = -9406;
    this.seqGrabInfoNotAvailable = -9407;
    this.deviceCantMeetRequest = -9408;
    this.badControllerHeight = -9994;
    this.editingNotAllowed = -9995;
    this.controllerBoundsNotExact = -9996;
    this.cannotSetWidthOfAttachedController = -9997;
    this.controllerHasFixedHeight = -9998;
    this.cannotMoveAttachedController = -9999;
    this.errAEBadKeyForm = -10002;
    this.errAECantHandleClass = -10010;
    this.errAECantSupplyType = -10009;
    this.errAECantUndo = -10015;
    this.errAEEventFailed = -10000;
    this.errAEIndexTooLarge = -10007;
    this.errAEInTransaction = -10011;
    this.errAELocalOnly = -10016;
    this.errAENoSuchTransaction = -10012;
    this.errAENotAnElement = -10008;
    this.errAENotASingleObject = -10014;
    this.errAENotModifiable = -10003;
    this.errAENoUserSelection = -10013;
    this.errAEPrivilegeError = -10004;
    this.errAEReadDenied = -10005;
    this.errAETypeError = -10001;
    this.errAEWriteDenied = -10006;
    this.errAENotAnEnumMember = -10023;
    this.errAECantPutThatThere = -10024;
    this.errAEPropertiesClash = -10025;
    this.telGenericError = -1;
    this.telNoErr = 0;
    this.telNoTools = 8;
    this.telBadTermErr = -10001;
    this.telBadDNErr = -10002;
    this.telBadCAErr = -10003;
    this.telBadHandErr = -10004;
    this.telBadProcErr = -10005;
    this.telCAUnavail = -10006;
    this.telNoMemErr = -10007;
    this.telNoOpenErr = -10008;
    this.telBadHTypeErr = -10010;
    this.telHTypeNotSupp = -10011;
    this.telBadLevelErr = -10012;
    this.telBadVTypeErr = -10013;
    this.telVTypeNotSupp = -10014;
    this.telBadAPattErr = -10015;
    this.telAPattNotSupp = -10016;
    this.telBadIndex = -10017;
    this.telIndexNotSupp = -10018;
    this.telBadStateErr = -10019;
    this.telStateNotSupp = -10020;
    this.telBadIntExt = -10021;
    this.telIntExtNotSupp = -10022;
    this.telBadDNDType = -10023;
    this.telDNDTypeNotSupp = -10024;
    this.telFeatNotSub = -10030;
    this.telFeatNotAvail = -10031;
    this.telFeatActive = -10032;
    this.telFeatNotSupp = -10033;
    this.telConfLimitErr = -10040;
    this.telConfNoLimit = -10041;
    this.telConfErr = -10042;
    this.telConfRej = -10043;
    this.telTransferErr = -10044;
    this.telTransferRej = -10045;
    this.telCBErr = -10046;
    this.telConfLimitExceeded = -10047;
    this.telBadDNType = -10050;
    this.telBadPageID = -10051;
    this.telBadIntercomID = -10052;
    this.telBadFeatureID = -10053;
    this.telBadFwdType = -10054;
    this.telBadPickupGroupID = -10055;
    this.telBadParkID = -10056;
    this.telBadSelect = -10057;
    this.telBadBearerType = -10058;
    this.telBadRate = -10059;
    this.telDNTypeNotSupp = -10060;
    this.telFwdTypeNotSupp = -10061;
    this.telBadDisplayMode = -10062;
    this.telDisplayModeNotSupp = -10063;
    this.telNoCallbackRef = -10064;
    this.telAlreadyOpen = -10070;
    this.telStillNeeded = -10071;
    this.telTermNotOpen = -10072;
    this.telCANotAcceptable = -10080;
    this.telCANotRejectable = -10081;
    this.telCANotDeflectable = -10082;
    this.telPBErr = -10090;
    this.telBadFunction = -10091;
    this.telNoSuchTool = -10102;
    this.telUnknownErr = -10103;
    this.telNoCommFolder = -10106;
    this.telInitFailed = -10107;
    this.telBadCodeResource = -10108;
    this.telDeviceNotFound = -10109;
    this.telBadProcID = -10110;
    this.telValidateFailed = -10111;
    this.telAutoAnsNotOn = -10112;
    this.telDetAlreadyOn = -10113;
    this.telBadSWErr = -10114;
    this.telBadSampleRate = -10115;
    this.telNotEnoughdspBW = -10116;
    this.errTaskNotFound = -10780;
    this.pmBusyErr = -13000;
    this.pmReplyTOErr = -13001;
    this.pmSendStartErr = -13002;
    this.pmSendEndErr = -13003;
    this.pmRecvStartErr = -13004;
    this.pmRecvEndErr = -13005;
    this.kPowerHandlerExistsForDeviceErr = -13006;
    this.kPowerHandlerNotFoundForDeviceErr = -13007;
    this.kPowerHandlerNotFoundForProcErr = -13008;
    this.kPowerMgtMessageNotHandled = -13009;
    this.kPowerMgtRequestDenied = -13010;
    this.kCantReportProcessorTemperatureErr = -13013;
    this.kProcessorTempRoutineRequiresMPLib2 = -13014;
    this.kNoSuchPowerSource = -13020;
    this.kBridgeSoftwareRunningCantSleep = -13038;
    this.debuggingExecutionContextErr = -13880;
    this.debuggingDuplicateSignatureErr = -13881;
    this.debuggingDuplicateOptionErr = -13882;
    this.debuggingInvalidSignatureErr = -13883;
    this.debuggingInvalidOptionErr = -13884;
    this.debuggingInvalidNameErr = -13885;
    this.debuggingNoCallbackErr = -13886;
    this.debuggingNoMatchErr = -13887;
    this.kHIDVersionIncompatibleErr = -13909;
    this.kHIDDeviceNotReady = -13910;
    this.kHIDSuccess = 0;
    this.kHIDInvalidRangePageErr = -13923;
    this.kHIDReportIDZeroErr = -13924;
    this.kHIDReportCountZeroErr = -13925;
    this.kHIDReportSizeZeroErr = -13926;
    this.kHIDUnmatchedDesignatorRangeErr = -13927;
    this.kHIDUnmatchedStringRangeErr = -13928;
    this.kHIDInvertedUsageRangeErr = -13929;
    this.kHIDUnmatchedUsageRangeErr = -13930;
    this.kHIDInvertedPhysicalRangeErr = -13931;
    this.kHIDInvertedLogicalRangeErr = -13932;
    this.kHIDBadLogicalMaximumErr = -13933;
    this.kHIDBadLogicalMinimumErr = -13934;
    this.kHIDUsagePageZeroErr = -13935;
    this.kHIDEndOfDescriptorErr = -13936;
    this.kHIDNotEnoughMemoryErr = -13937;
    this.kHIDBadParameterErr = -13938;
    this.kHIDNullPointerErr = -13939;
    this.kHIDInvalidReportLengthErr = -13940;
    this.kHIDInvalidReportTypeErr = -13941;
    this.kHIDBadLogPhysValuesErr = -13942;
    this.kHIDIncompatibleReportErr = -13943;
    this.kHIDInvalidPreparsedDataErr = -13944;
    this.kHIDNotValueArrayErr = -13945;
    this.kHIDUsageNotFoundErr = -13946;
    this.kHIDValueOutOfRangeErr = -13947;
    this.kHIDBufferTooSmallErr = -13948;
    this.kHIDNullStateErr = -13949;
    this.kHIDBaseError = -13950;
    this.kModemOutOfMemory = -14000;
    this.kModemPreferencesMissing = -14001;
    this.kModemScriptMissing = -14002;
    this.kTXNEndIterationErr = -22000;
    this.kTXNCannotAddFrameErr = -22001;
    this.kTXNInvalidFrameIDErr = -22002;
    this.kTXNIllegalToCrossDataBoundariesErr = -22003;
    this.kTXNUserCanceledOperationErr = -22004;
    this.kTXNBadDefaultFileTypeWarning = -22005;
    this.kTXNCannotSetAutoIndentErr = -22006;
    this.kTXNRunIndexOutofBoundsErr = -22007;
    this.kTXNNoMatchErr = -22008;
    this.kTXNAttributeTagInvalidForRunErr = -22009;
    this.kTXNSomeOrAllTagsInvalidForRunErr = -22010;
    this.kTXNInvalidRunIndex = -22011;
    this.kTXNAlreadyInitializedErr = -22012;
    this.kTXNCannotTurnTSMOffWhenUsingUnicodeErr = -22013;
    this.kTXNCopyNotAllowedInEchoModeErr = -22014;
    this.kTXNDataTypeNotAllowedErr = -22015;
    this.kTXNATSUIIsNotInstalledErr = -22016;
    this.kTXNOutsideOfLineErr = -22017;
    this.kTXNOutsideOfFrameErr = -22018;
    this.printerStatusOpCodeNotSupportedErr = -25280;
    this.errKCNotAvailable = -25291;
    this.errKCReadOnly = -25292;
    this.errKCAuthFailed = -25293;
    this.errKCNoSuchKeychain = -25294;
    this.errKCInvalidKeychain = -25295;
    this.errKCDuplicateKeychain = -25296;
    this.errKCDuplicateCallback = -25297;
    this.errKCInvalidCallback = -25298;
    this.errKCDuplicateItem = -25299;
    this.errKCItemNotFound = -25300;
    this.errKCBufferTooSmall = -25301;
    this.errKCDataTooLarge = -25302;
    this.errKCNoSuchAttr = -25303;
    this.errKCInvalidItemRef = -25304;
    this.errKCInvalidSearchRef = -25305;
    this.errKCNoSuchClass = -25306;
    this.errKCNoDefaultKeychain = -25307;
    this.errKCInteractionNotAllowed = -25308;
    this.errKCReadOnlyAttr = -25309;
    this.errKCWrongKCVersion = -25310;
    this.errKCKeySizeNotAllowed = -25311;
    this.errKCNoStorageModule = -25312;
    this.errKCNoCertificateModule = -25313;
    this.errKCNoPolicyModule = -25314;
    this.errKCInteractionRequired = -25315;
    this.errKCDataNotAvailable = -25316;
    this.errKCDataNotModifiable = -25317;
    this.errKCCreateChainFailed = -25318;
    this.kUCOutputBufferTooSmall = -25340;
    this.kUCTextBreakLocatorMissingType = -25341;
    this.kUCTSNoKeysAddedToObjectErr = -25342;
    this.kUCTSSearchListErr = -25343;
    this.kUCTokenizerIterationFinished = -25344;
    this.kUCTokenizerUnknownLang = -25345;
    this.kUCTokenNotFound = -25346;
    this.kMPIterationEndErr = -29275;
    this.kMPPrivilegedErr = -29276;
    this.kMPProcessCreatedErr = -29288;
    this.kMPProcessTerminatedErr = -29289;
    this.kMPTaskCreatedErr = -29290;
    this.kMPTaskBlockedErr = -29291;
    this.kMPTaskStoppedErr = -29292;
    this.kMPBlueBlockingErr = -29293;
    this.kMPDeletedErr = -29295;
    this.kMPTimeoutErr = -29296;
    this.kMPTaskAbortedErr = -29297;
    this.kMPInsufficientResourcesErr = -29298;
    this.kMPInvalidIDErr = -29299;
    this.kMPNanokernelNeedsMemoryErr = -29294;
    this.kCollateAttributesNotFoundErr = -29500;
    this.kCollateInvalidOptions = -29501;
    this.kCollateMissingUnicodeTableErr = -29502;
    this.kCollateUnicodeConvertFailedErr = -29503;
    this.kCollatePatternNotFoundErr = -29504;
    this.kCollateInvalidChar = -29505;
    this.kCollateBufferTooSmall = -29506;
    this.kCollateInvalidCollationRef = -29507;
    this.kFNSInvalidReferenceErr = -29580;
    this.kFNSBadReferenceVersionErr = -29581;
    this.kFNSInvalidProfileErr = -29582;
    this.kFNSBadProfileVersionErr = -29583;
    this.kFNSDuplicateReferenceErr = -29584;
    this.kFNSMismatchErr = -29585;
    this.kFNSInsufficientDataErr = -29586;
    this.kFNSBadFlattenedSizeErr = -29587;
    this.kFNSNameNotFoundErr = -29589;
    this.kLocalesBufferTooSmallErr = -30001;
    this.kLocalesTableFormatErr = -30002;
    this.kLocalesDefaultDisplayStatus = -30029;
    this.kALMInternalErr = -30049;
    this.kALMGroupNotFoundErr = -30048;
    this.kALMNoSuchModuleErr = -30047;
    this.kALMModuleCommunicationErr = -30046;
    this.kALMDuplicateModuleErr = -30045;
    this.kALMInstallationErr = -30044;
    this.kALMDeferSwitchErr = -30043;
    this.kALMRebootFlagsLevelErr = -30042;
    this.kALMLocationNotFoundErr = -30048;
    this.kSSpInternalErr = -30340;
    this.kSSpVersionErr = -30341;
    this.kSSpCantInstallErr = -30342;
    this.kSSpParallelUpVectorErr = -30343;
    this.kSSpScaleToZeroErr = -30344;
    this.kNSpInitializationFailedErr = -30360;
    this.kNSpAlreadyInitializedErr = -30361;
    this.kNSpTopologyNotSupportedErr = -30362;
    this.kNSpPipeFullErr = -30364;
    this.kNSpHostFailedErr = -30365;
    this.kNSpProtocolNotAvailableErr = -30366;
    this.kNSpInvalidGameRefErr = -30367;
    this.kNSpInvalidParameterErr = -30369;
    this.kNSpOTNotPresentErr = -30370;
    this.kNSpOTVersionTooOldErr = -30371;
    this.kNSpMemAllocationErr = -30373;
    this.kNSpAlreadyAdvertisingErr = -30374;
    this.kNSpNotAdvertisingErr = -30376;
    this.kNSpInvalidAddressErr = -30377;
    this.kNSpFreeQExhaustedErr = -30378;
    this.kNSpRemovePlayerFailedErr = -30379;
    this.kNSpAddressInUseErr = -30380;
    this.kNSpFeatureNotImplementedErr = -30381;
    this.kNSpNameRequiredErr = -30382;
    this.kNSpInvalidPlayerIDErr = -30383;
    this.kNSpInvalidGroupIDErr = -30384;
    this.kNSpNoPlayersErr = -30385;
    this.kNSpNoGroupsErr = -30386;
    this.kNSpNoHostVolunteersErr = -30387;
    this.kNSpCreateGroupFailedErr = -30388;
    this.kNSpAddPlayerFailedErr = -30389;
    this.kNSpInvalidDefinitionErr = -30390;
    this.kNSpInvalidProtocolRefErr = -30391;
    this.kNSpInvalidProtocolListErr = -30392;
    this.kNSpTimeoutErr = -30393;
    this.kNSpGameTerminatedErr = -30394;
    this.kNSpConnectFailedErr = -30395;
    this.kNSpSendFailedErr = -30396;
    this.kNSpMessageTooBigErr = -30397;
    this.kNSpCantBlockErr = -30398;
    this.kNSpJoinFailedErr = -30399;
    this.kISpInternalErr = -30420;
    this.kISpSystemListErr = -30421;
    this.kISpBufferToSmallErr = -30422;
    this.kISpElementInListErr = -30423;
    this.kISpElementNotInListErr = -30424;
    this.kISpSystemInactiveErr = -30425;
    this.kISpDeviceInactiveErr = -30426;
    this.kISpSystemActiveErr = -30427;
    this.kISpDeviceActiveErr = -30428;
    this.kISpListBusyErr = -30429;
    this.kDSpNotInitializedErr = -30440;
    this.kDSpSystemSWTooOldErr = -30441;
    this.kDSpInvalidContextErr = -30442;
    this.kDSpInvalidAttributesErr = -30443;
    this.kDSpContextAlreadyReservedErr = -30444;
    this.kDSpContextNotReservedErr = -30445;
    this.kDSpContextNotFoundErr = -30446;
    this.kDSpFrameRateNotReadyErr = -30447;
    this.kDSpConfirmSwitchWarning = -30448;
    this.kDSpInternalErr = -30449;
    this.kDSpStereoContextErr = -30450;
    this.kFBCvTwinExceptionErr = -30500;
    this.kFBCnoIndexesFound = -30501;
    this.kFBCallocFailed = -30502;
    this.kFBCbadParam = -30503;
    this.kFBCfileNotIndexed = -30504;
    this.kFBCbadIndexFile = -30505;
    this.kFBCcompactionFailed = -30506;
    this.kFBCvalidationFailed = -30507;
    this.kFBCindexingFailed = -30508;
    this.kFBCcommitFailed = -30509;
    this.kFBCdeletionFailed = -30510;
    this.kFBCmoveFailed = -30511;
    this.kFBCtokenizationFailed = -30512;
    this.kFBCmergingFailed = -30513;
    this.kFBCindexCreationFailed = -30514;
    this.kFBCaccessorStoreFailed = -30515;
    this.kFBCaddDocFailed = -30516;
    this.kFBCflushFailed = -30517;
    this.kFBCindexNotFound = -30518;
    this.kFBCnoSearchSession = -30519;
    this.kFBCindexingCanceled = -30520;
    this.kFBCaccessCanceled = -30521;
    this.kFBCindexFileDestroyed = -30522;
    this.kFBCindexNotAvailable = -30523;
    this.kFBCsearchFailed = -30524;
    this.kFBCsomeFilesNotIndexed = -30525;
    this.kFBCillegalSessionChange = -30526;
    this.kFBCanalysisNotAvailable = -30527;
    this.kFBCbadIndexFileVersion = -30528;
    this.kFBCsummarizationCanceled = -30529;
    this.kFBCindexDiskIOFailed = -30530;
    this.kFBCbadSearchSession = -30531;
    this.kFBCnoSuchHit = -30532;
    this.notAQTVRMovieErr = -30540;
    this.constraintReachedErr = -30541;
    this.callNotSupportedByNodeErr = -30542;
    this.selectorNotSupportedByNodeErr = -30543;
    this.invalidNodeIDErr = -30544;
    this.invalidViewStateErr = -30545;
    this.timeNotInViewErr = -30546;
    this.propertyNotSupportedByNodeErr = -30547;
    this.settingNotSupportedByNodeErr = -30548;
    this.limitReachedErr = -30549;
    this.invalidNodeFormatErr = -30550;
    this.invalidHotSpotIDErr = -30551;
    this.noMemoryNodeFailedInitialize = -30552;
    this.streamingNodeNotReadyErr = -30553;
    this.qtvrLibraryLoadErr = -30554;
    this.qtvrUninitialized = -30555;
    this.themeInvalidBrushErr = -30560;
    this.themeProcessRegisteredErr = -30561;
    this.themeProcessNotRegisteredErr = -30562;
    this.themeBadTextColorErr = -30563;
    this.themeHasNoAccentsErr = -30564;
    this.themeBadCursorIndexErr = -30565;
    this.themeScriptFontNotFoundErr = -30566;
    this.themeMonitorDepthNotSupportedErr = -30567;
    this.themeNoAppropriateBrushErr = -30568;
    this.errMessageNotSupported = -30580;
    this.errDataNotSupported = -30581;
    this.errControlDoesntSupportFocus = -30582;
    this.errUnknownControl = -30584;
    this.errCouldntSetFocus = -30585;
    this.errNoRootControl = -30586;
    this.errRootAlreadyExists = -30587;
    this.errInvalidPartCode = -30588;
    this.errControlsAlreadyExist = -30589;
    this.errControlIsNotEmbedder = -30590;
    this.errDataSizeMismatch = -30591;
    this.errControlHiddenOrDisabled = -30592;
    this.errCantEmbedIntoSelf = -30594;
    this.errCantEmbedRoot = -30595;
    this.errItemNotControl = -30596;
    this.controlInvalidDataVersionErr = -30597;
    this.controlPropertyInvalid = -5603;
    this.controlPropertyNotFoundErr = -5604;
    this.controlHandleInvalidErr = -30599;
    this.kURLInvalidURLReferenceError = -30770;
    this.kURLProgressAlreadyDisplayedError = -30771;
    this.kURLDestinationExistsError = -30772;
    this.kURLInvalidURLError = -30773;
    this.kURLUnsupportedSchemeError = -30774;
    this.kURLServerBusyError = -30775;
    this.kURLAuthenticationError = -30776;
    this.kURLPropertyNotYetKnownError = -30777;
    this.kURLUnknownPropertyError = -30778;
    this.kURLPropertyBufferTooSmallError = -30779;
    this.kURLUnsettablePropertyError = -30780;
    this.kURLInvalidCallError = -30781;
    this.kURLFileEmptyError = -30783;
    this.kURLExtensionFailureError = -30785;
    this.kURLInvalidConfigurationError = -30786;
    this.kURLAccessNotAvailableError = -30787;
    this.kURL68kNotSupportedError = -30788;
    this.errCppGeneral = -32000;
    this.errCppbad_alloc = -32001;
    this.errCppbad_cast = -32002;
    this.errCppbad_exception = -32003;
    this.errCppbad_typeid = -32004;
    this.errCpplogic_error = -32005;
    this.errCppdomain_error = -32006;
    this.errCppinvalid_argument = -32007;
    this.errCpplength_error = -32008;
    this.errCppout_of_range = -32009;
    this.errCppruntime_error = -32010;
    this.errCppoverflow_error = -32011;
    this.errCpprange_error = -32012;
    this.errCppunderflow_error = -32013;
    this.errCppios_base_failure = -32014;
    this.errCppLastSystemDefinedError = -32020;
    this.errCppLastUserDefinedError = -32049;
    this.badComponentInstance = -2147450879;
    this.badComponentSelector = -2147450878;
    this.dsBusError = 1;
    this.dsAddressErr = 2;
    this.dsIllInstErr = 3;
    this.dsZeroDivErr = 4;
    this.dsChkErr = 5;
    this.dsOvflowErr = 6;
    this.dsPrivErr = 7;
    this.dsTraceErr = 8;
    this.dsLineAErr = 9;
    this.dsLineFErr = 10;
    this.dsMiscErr = 11;
    this.dsCoreErr = 12;
    this.dsIrqErr = 13;
    this.dsIOCoreErr = 14;
    this.dsLoadErr = 15;
    this.dsFPErr = 16;
    this.dsNoPackErr = 17;
    this.dsNoPk1 = 18;
    this.dsNoPk2 = 19;
    this.dsNoPk3 = 20;
    this.dsNoPk4 = 21;
    this.dsNoPk5 = 22;
    this.dsNoPk6 = 23;
    this.dsNoPk7 = 24;
    this.dsMemFullErr = 25;
    this.dsBadLaunch = 26;
    this.dsFSErr = 27;
    this.dsStknHeap = 28;
    this.negZcbFreeErr = 33;
    this.dsFinderErr = 41;
    this.dsBadSlotInt = 51;
    this.dsBadSANEOpcode = 81;
    this.dsBadPatchHeader = 83;
    this.menuPrgErr = 84;
    this.dsMBarNFnd = 85;
    this.dsHMenuFindErr = 86;
    this.dsWDEFNotFound = 87;
    this.dsCDEFNotFound = 88;
    this.dsMDEFNotFound = 89;
    this.dsNoFPU = 90;
    this.dsNoPatch = 98;
    this.dsBadPatch = 99;
    this.dsParityErr = 101;
    this.dsOldSystem = 102;
    this.ds32BitMode = 103;
    this.dsNeedToWriteBootBlocks = 104;
    this.dsNotEnoughRAMToBoot = 105;
    this.dsBufPtrTooLow = 106;
    this.dsVMDeferredFuncTableFull = 112;
    this.dsVMBadBackingStore = 113;
    this.dsCantHoldSystemHeap = 114;
    this.dsSystemRequiresPowerPC = 116;
    this.dsGibblyMovedToDisabledFolder = 117;
    this.dsUnBootableSystem = 118;
    this.dsMustUseFCBAccessors = 119;
    this.dsMacOSROMVersionTooOld = 120;
    this.dsLostConnectionToNetworkDisk = 121;
    this.dsRAMDiskTooBig = 122;
    this.dsWriteToSupervisorStackGuardPage = 128;
    this.dsReinsert = 30;
    this.shutDownAlert = 42;
    this.dsShutDownOrRestart = 20000;
    this.dsSwitchOffOrRestart = 20001;
    this.dsForcedQuit = 20002;
    this.dsRemoveDisk = 20003;
    this.dsDirtyDisk = 20004;
    this.dsShutDownOrResume = 20109;
    this.dsSCSIWarn = 20010;
    this.dsMBSysError = 29200;
    this.dsMBFlpySysError = 29201;
    this.dsMBATASysError = 29202;
    this.dsMBATAPISysError = 29203;
    this.dsMBExternFlpySysError = 29204;
    this.dsPCCardATASysError = 29205;
    this.dsNoExtsMacsBug = -1;
    this.dsNoExtsDisassembler = -2;
    this.dsMacsBugInstalled = -10;
    this.dsDisassemblerInstalled = -11;
    this.dsExtensionsDisabled = -13;
    this.dsGreeting = 40;
    this.dsSysErr = 32767;
    this.WDEFNFnd = 87;
    this.CDEFNFnd = 88;
    this.dsNotThe1 = 31;
    this.dsBadStartupDisk = 42;
    this.dsSystemFileErr = 43;
    this.dsHD20Installed = -12;
    this.mBarNFnd = -126;
    this.fsDSIntErr = -127;
    this.hMenuFindErr = -127;
    this.userBreak = -490;
    this.strUserBreak = -491;
    this.exUserBreak = -492;
    this.dsBadLibrary = 1010;
    this.dsMixedModeFailure = 1011;
    this.kPOSIXErrorBase = 100000;
    this.kPOSIXErrorEPERM = 100001;
    this.kPOSIXErrorENOENT = 100002;
    this.kPOSIXErrorESRCH = 100003;
    this.kPOSIXErrorEINTR = 100004;
    this.kPOSIXErrorEIO = 100005;
    this.kPOSIXErrorENXIO = 100006;
    this.kPOSIXErrorE2BIG = 100007;
    this.kPOSIXErrorENOEXEC = 100008;
    this.kPOSIXErrorEBADF = 100009;
    this.kPOSIXErrorECHILD = 100010;
    this.kPOSIXErrorEDEADLK = 100011;
    this.kPOSIXErrorENOMEM = 100012;
    this.kPOSIXErrorEACCES = 100013;
    this.kPOSIXErrorEFAULT = 100014;
    this.kPOSIXErrorENOTBLK = 100015;
    this.kPOSIXErrorEBUSY = 100016;
    this.kPOSIXErrorEEXIST = 100017;
    this.kPOSIXErrorEXDEV = 100018;
    this.kPOSIXErrorENODEV = 100019;
    this.kPOSIXErrorENOTDIR = 100020;
    this.kPOSIXErrorEISDIR = 100021;
    this.kPOSIXErrorEINVAL = 100022;
    this.kPOSIXErrorENFILE = 100023;
    this.kPOSIXErrorEMFILE = 100024;
    this.kPOSIXErrorENOTTY = 100025;
    this.kPOSIXErrorETXTBSY = 100026;
    this.kPOSIXErrorEFBIG = 100027;
    this.kPOSIXErrorENOSPC = 100028;
    this.kPOSIXErrorESPIPE = 100029;
    this.kPOSIXErrorEROFS = 100030;
    this.kPOSIXErrorEMLINK = 100031;
    this.kPOSIXErrorEPIPE = 100032;
    this.kPOSIXErrorEDOM = 100033;
    this.kPOSIXErrorERANGE = 100034;
    this.kPOSIXErrorEAGAIN = 100035;
    this.kPOSIXErrorEINPROGRESS = 100036;
    this.kPOSIXErrorEALREADY = 100037;
    this.kPOSIXErrorENOTSOCK = 100038;
    this.kPOSIXErrorEDESTADDRREQ = 100039;
    this.kPOSIXErrorEMSGSIZE = 100040;
    this.kPOSIXErrorEPROTOTYPE = 100041;
    this.kPOSIXErrorENOPROTOOPT = 100042;
    this.kPOSIXErrorEPROTONOSUPPORT = 100043;
    this.kPOSIXErrorESOCKTNOSUPPORT = 100044;
    this.kPOSIXErrorENOTSUP = 100045;
    this.kPOSIXErrorEPFNOSUPPORT = 100046;
    this.kPOSIXErrorEAFNOSUPPORT = 100047;
    this.kPOSIXErrorEADDRINUSE = 100048;
    this.kPOSIXErrorEADDRNOTAVAIL = 100049;
    this.kPOSIXErrorENETDOWN = 100050;
    this.kPOSIXErrorENETUNREACH = 100051;
    this.kPOSIXErrorENETRESET = 100052;
    this.kPOSIXErrorECONNABORTED = 100053;
    this.kPOSIXErrorECONNRESET = 100054;
    this.kPOSIXErrorENOBUFS = 100055;
    this.kPOSIXErrorEISCONN = 100056;
    this.kPOSIXErrorENOTCONN = 100057;
    this.kPOSIXErrorESHUTDOWN = 100058;
    this.kPOSIXErrorETOOMANYREFS = 100059;
    this.kPOSIXErrorETIMEDOUT = 100060;
    this.kPOSIXErrorECONNREFUSED = 100061;
    this.kPOSIXErrorELOOP = 100062;
    this.kPOSIXErrorENAMETOOLONG = 100063;
    this.kPOSIXErrorEHOSTDOWN = 100064;
    this.kPOSIXErrorEHOSTUNREACH = 100065;
    this.kPOSIXErrorENOTEMPTY = 100066;
    this.kPOSIXErrorEPROCLIM = 100067;
    this.kPOSIXErrorEUSERS = 100068;
    this.kPOSIXErrorEDQUOT = 100069;
    this.kPOSIXErrorESTALE = 100070;
    this.kPOSIXErrorEREMOTE = 100071;
    this.kPOSIXErrorEBADRPC = 100072;
    this.kPOSIXErrorERPCMISMATCH = 100073;
    this.kPOSIXErrorEPROGUNAVAIL = 100074;
    this.kPOSIXErrorEPROGMISMATCH = 100075;
    this.kPOSIXErrorEPROCUNAVAIL = 100076;
    this.kPOSIXErrorENOLCK = 100077;
    this.kPOSIXErrorENOSYS = 100078;
    this.kPOSIXErrorEFTYPE = 100079;
    this.kPOSIXErrorEAUTH = 100080;
    this.kPOSIXErrorENEEDAUTH = 100081;
    this.kPOSIXErrorEPWROFF = 100082;
    this.kPOSIXErrorEDEVERR = 100083;
    this.kPOSIXErrorEOVERFLOW = 100084;
    this.kPOSIXErrorEBADEXEC = 100085;
    this.kPOSIXErrorEBADARCH = 100086;
    this.kPOSIXErrorESHLIBVERS = 100087;
    this.kPOSIXErrorEBADMACHO = 100088;
    this.kPOSIXErrorECANCELED = 100089;
    this.kPOSIXErrorEIDRM = 100090;
    this.kPOSIXErrorENOMSG = 100091;
    this.kPOSIXErrorEILSEQ = 100092;
    this.kPOSIXErrorENOATTR = 100093;
    this.kPOSIXErrorEBADMSG = 100094;
    this.kPOSIXErrorEMULTIHOP = 100095;
    this.kPOSIXErrorENODATA = 100096;
    this.kPOSIXErrorENOLINK = 100097;
    this.kPOSIXErrorENOSR = 100098;
    this.kPOSIXErrorENOSTR = 100099;
    this.kPOSIXErrorEPROTO = 100100;
    this.kPOSIXErrorETIME = 100101;
    this.kPOSIXErrorEOPNOTSUPP = 100102;
}

// Based on /System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Endian.h
function Endian_h(lib) {
    MacTypes_h.call(this, lib);

    if (this._ENDIAN_H)
        return;
    this._ENDIAN_H = true;

    this.BigEndianUInt32 = new ctypes.StructType("BigEndianUInt32", [{bigEndianValue: this.UInt32}]);
    this.BigEndianLong = new ctypes.StructType("BigEndianLong", [{bigEndianValue: ctypes.long}]);
    this.BigEndianUnsignedLong = new ctypes.StructType("BigEndianUnsignedLong", [{bigEndianValue: ctypes.unsigned_long}]);
    this.BigEndianShort = new ctypes.StructType("BigEndianShort", [{bigEndianValue: ctypes.short}]);
    this.BigEndianUnsignedShort = new ctypes.StructType("BigEndianUnsignedShort", [{bigEndianValue: ctypes.unsigned_short}]);
    this.BigEndianFixed = new ctypes.StructType("BigEndianFixed", [{bigEndianValue: this.Fixed}]);
    this.BigEndianUnsignedFixed = new ctypes.StructType("BigEndianUnsignedFixed", [{bigEndianValue: this.UnsignedFixed}]);
    this.BigEndianOSType = new ctypes.StructType("BigEndianOSType", [{bigEndianValue: this.OSType}]);
    this.kCoreEndianResourceManagerDomain = 1920168547;
    this.kCoreEndianAppleEventManagerDomain = 1634039412;
    this.CoreEndianFlipProc = new ctypes.FunctionType(ctypes.default_abi, this.OSStatus, [this.OSType, this.OSType, this.SInt16, ctypes.void_t.ptr, this.ByteCount, this.Boolean, ctypes.void_t.ptr]).ptr;
}

// Based on /System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/TextEncodingPlugin.h
function TextEncodingPlugin_h(lib) {
    TextCommon_h.call(this, lib);
    MacTypes_h.call(this, lib);
    TextEncodingConverter_h.call(this, lib);

    if (this._TEXTENCODINGPLUGIN_H)
        return;
    this._TEXTENCODINGPLUGIN_H = true;

    this.kTECAvailableEncodingsResType = 1668703598;
    this.kTECAvailableSniffersResType = 1668707174;
    this.kTECSubTextEncodingsResType = 1668707170;
    this.kTECConversionInfoResType = 1668704614;
    this.kTECMailEncodingsResType = 1668705644;
    this.kTECWebEncodingsResType = 1668708194;
    this.kTECInternetNamesResType = 1668705645;
    this.kTECPluginType = 1701015655;
    this.kTECPluginCreator = 1701733238;
    this.kTECPluginOneToOne = 1869901679;
    this.kTECPluginOneToMany = 1869901677;
    this.kTECPluginManyToOne = 1836347247;
    this.kTECPluginSniffObj = 1936615782;
    this.verUnspecified = 32767;
    this.kTECResourceID = 128;
    this.TextEncodingRec = new ctypes.StructType("TextEncodingRec", [{base: this.UInt32}, {variant: this.UInt32}, {format: this.UInt32}]);
    this.TECEncodingsListRec = new ctypes.StructType("TECEncodingsListRec", [{count: this.UInt32}, {encodings: this.TextEncodingRec}]);
    this.TECEncodingsListPtr = this.TECEncodingsListRec.ptr;
    this.TECEncodingsListHandle = this.TECEncodingsListPtr.ptr;
    this.TECSubTextEncodingRec = new ctypes.StructType("TECSubTextEncodingRec", [{offset: this.UInt32}, {searchEncoding: this.TextEncodingRec}, {count: this.UInt32}, {subEncodings: this.TextEncodingRec}]);
    this.TECSubTextEncodingsRec = new ctypes.StructType("TECSubTextEncodingsRec", [{count: this.UInt32}, {subTextEncodingRec: this.TECSubTextEncodingRec}]);
    this.TECSubTextEncodingsPtr = this.TECSubTextEncodingsRec.ptr;
    this.TECSubTextEncodingsHandle = this.TECSubTextEncodingsPtr.ptr;
    this.TECEncodingPairRec = new ctypes.StructType("TECEncodingPairRec", [{source: this.TextEncodingRec}, {dest: this.TextEncodingRec}]);
    this.TECEncodingPairs = new ctypes.StructType("TECEncodingPairs", [{encodingPair: this.TECEncodingPairRec}, {flags: this.UInt32}, {speed: this.UInt32}]);
    this.TECEncodingPairsRec = new ctypes.StructType("TECEncodingPairsRec", [{count: this.UInt32}, {encodingPairs: this.TECEncodingPairs}]);
    this.TECEncodingPairsPtr = this.TECEncodingPairsRec.ptr;
    this.TECEncodingPairsHandle = this.TECEncodingPairsPtr.ptr;
    this.TECLocaleListToEncodingListRec = new ctypes.StructType("TECLocaleListToEncodingListRec", [{offset: this.UInt32}, {count: this.UInt32}, {locales: this.RegionCode}]);
    this.TECLocaleListToEncodingListPtr = this.TECLocaleListToEncodingListRec.ptr;
    this.TECLocaleToEncodingsListRec = new ctypes.StructType("TECLocaleToEncodingsListRec", [{count: this.UInt32}, {localeListToEncodingList: this.TECLocaleListToEncodingListRec}]);
    this.TECLocaleToEncodingsListPtr = this.TECLocaleToEncodingsListRec.ptr;
    this.TECLocaleToEncodingsListHandle = this.TECLocaleToEncodingsListPtr.ptr;
    this.TECInternetNameRec = new ctypes.StructType("TECInternetNameRec", [{offset: this.UInt32}, {searchEncoding: this.TextEncodingRec}, {encodingNameLength: this.UInt8}, {encodingName: this.UInt8.array(1)}]);
    this.TECInternetNamesRec = new ctypes.StructType("TECInternetNamesRec", [{count: this.UInt32}, {InternetNames: this.TECInternetNameRec}]);
    this.TECInternetNamesPtr = this.TECInternetNamesRec.ptr;
    this.TECInternetNamesHandle = this.TECInternetNamesPtr.ptr;
    this.TECBufferContextRec = new ctypes.StructType("TECBufferContextRec", [{textInputBuffer: this.ConstTextPtr}, {textInputBufferEnd: this.ConstTextPtr}, {textOutputBuffer: this.TextPtr}, {textOutputBufferEnd: this.TextPtr}, {encodingInputBuffer: this.ConstTextEncodingRunPtr}, {encodingInputBufferEnd: this.ConstTextEncodingRunPtr}, {encodingOutputBuffer: this.TextEncodingRunPtr}, {encodingOutputBufferEnd: this.TextEncodingRunPtr}]);
    this.TECPluginStateRec = new ctypes.StructType("TECPluginStateRec", [{state1: this.UInt8}, {state2: this.UInt8}, {state3: this.UInt8}, {state4: this.UInt8}, {longState1: this.UInt32}, {longState2: this.UInt32}, {longState3: this.UInt32}, {longState4: this.UInt32}]);
    this.TECConverterContextRec = new ctypes.StructType("TECConverterContextRec", [{pluginRec: this.Ptr}, {sourceEncoding: this.TextEncoding}, {destEncoding: this.TextEncoding}, {reserved1: this.UInt32}, {reserved2: this.UInt32}, {bufferContext: this.TECBufferContextRec}, {contextRefCon: this.URefCon}, {conversionProc: this.ProcPtr}, {flushProc: this.ProcPtr}, {clearContextInfoProc: this.ProcPtr}, {options1: this.UInt32}, {options2: this.UInt32}, {pluginState: this.TECPluginStateRec}]);
    this.TECSnifferContextRec = new ctypes.StructType("TECSnifferContextRec", [{pluginRec: this.Ptr}, {encoding: this.TextEncoding}, {maxErrors: this.ItemCount}, {maxFeatures: this.ItemCount}, {textInputBuffer: this.ConstTextPtr}, {textInputBufferEnd: this.ConstTextPtr}, {numFeatures: this.ItemCount}, {numErrors: this.ItemCount}, {contextRefCon: this.URefCon}, {sniffProc: this.ProcPtr}, {clearContextInfoProc: this.ProcPtr}, {pluginState: this.TECPluginStateRec}]);
    this.TECPluginNewEncodingConverterPtr = new ctypes.FunctionType(ctypes.default_abi, this.OSStatus, [this.TECObjectRef.ptr, this.TECConverterContextRec.ptr, this.TextEncoding, this.TextEncoding]).ptr;
    this.TECPluginClearContextInfoPtr = new ctypes.FunctionType(ctypes.default_abi, this.OSStatus, [this.TECObjectRef, this.TECConverterContextRec.ptr]).ptr;
    this.TECPluginConvertTextEncodingPtr = new ctypes.FunctionType(ctypes.default_abi, this.OSStatus, [this.TECObjectRef, this.TECConverterContextRec.ptr]).ptr;
    this.TECPluginFlushConversionPtr = new ctypes.FunctionType(ctypes.default_abi, this.OSStatus, [this.TECObjectRef, this.TECConverterContextRec.ptr]).ptr;
    this.TECPluginDisposeEncodingConverterPtr = new ctypes.FunctionType(ctypes.default_abi, this.OSStatus, [this.TECObjectRef, this.TECConverterContextRec.ptr]).ptr;
    this.TECPluginNewEncodingSnifferPtr = new ctypes.FunctionType(ctypes.default_abi, this.OSStatus, [this.TECSnifferObjectRef.ptr, this.TECSnifferContextRec.ptr, this.TextEncoding]).ptr;
    this.TECPluginClearSnifferContextInfoPtr = new ctypes.FunctionType(ctypes.default_abi, this.OSStatus, [this.TECSnifferObjectRef, this.TECSnifferContextRec.ptr]).ptr;
    this.TECPluginSniffTextEncodingPtr = new ctypes.FunctionType(ctypes.default_abi, this.OSStatus, [this.TECSnifferObjectRef, this.TECSnifferContextRec.ptr]).ptr;
    this.TECPluginDisposeEncodingSnifferPtr = new ctypes.FunctionType(ctypes.default_abi, this.OSStatus, [this.TECSnifferObjectRef, this.TECSnifferContextRec.ptr]).ptr;
    this.TECPluginGetCountAvailableTextEncodingsPtr = new ctypes.FunctionType(ctypes.default_abi, this.OSStatus, [this.TextEncoding.ptr, this.ItemCount, this.ItemCount.ptr]).ptr;
    this.TECPluginGetCountAvailableTextEncodingPairsPtr = new ctypes.FunctionType(ctypes.default_abi, this.OSStatus, [this.TECConversionInfo.ptr, this.ItemCount, this.ItemCount.ptr]).ptr;
    this.TECPluginGetCountDestinationTextEncodingsPtr = new ctypes.FunctionType(ctypes.default_abi, this.OSStatus, [this.TextEncoding, this.TextEncoding.ptr, this.ItemCount, this.ItemCount.ptr]).ptr;
    this.TECPluginGetCountSubTextEncodingsPtr = new ctypes.FunctionType(ctypes.default_abi, this.OSStatus, [this.TextEncoding, this.TextEncoding.ptr, this.ItemCount, this.ItemCount.ptr]).ptr;
    this.TECPluginGetCountAvailableSniffersPtr = new ctypes.FunctionType(ctypes.default_abi, this.OSStatus, [this.TextEncoding.ptr, this.ItemCount, this.ItemCount.ptr]).ptr;
    this.TECPluginGetTextEncodingInternetNamePtr = new ctypes.FunctionType(ctypes.default_abi, this.OSStatus, [this.TextEncoding, ctypes.unsigned_char.ptr]).ptr;
    this.TECPluginGetTextEncodingFromInternetNamePtr = new ctypes.FunctionType(ctypes.default_abi, this.OSStatus, [this.TextEncoding.ptr, this.ConstStr255Param]).ptr;
    this.TECPluginGetCountWebEncodingsPtr = new ctypes.FunctionType(ctypes.default_abi, this.OSStatus, [this.TextEncoding.ptr, this.ItemCount, this.ItemCount.ptr]).ptr;
    this.TECPluginGetCountMailEncodingsPtr = new ctypes.FunctionType(ctypes.default_abi, this.OSStatus, [this.TextEncoding.ptr, this.ItemCount, this.ItemCount.ptr]).ptr;
    this.kTECPluginDispatchTableVersion1 = 65536;
    this.kTECPluginDispatchTableVersion1_1 = 65537;
    this.kTECPluginDispatchTableVersion1_2 = 65538;
    this.kTECPluginDispatchTableCurrentVersion = 65538;
    this.TECPluginDispatchTable = new ctypes.StructType("TECPluginDispatchTable", [{version: this.TECPluginVersion}, {compatibleVersion: this.TECPluginVersion}, {PluginID: this.TECPluginSignature}, {PluginNewEncodingConverter: this.TECPluginNewEncodingConverterPtr}, {PluginClearContextInfo: this.TECPluginClearContextInfoPtr}, {PluginConvertTextEncoding: this.TECPluginConvertTextEncodingPtr}, {PluginFlushConversion: this.TECPluginFlushConversionPtr}, {PluginDisposeEncodingConverter: this.TECPluginDisposeEncodingConverterPtr}, {PluginNewEncodingSniffer: this.TECPluginNewEncodingSnifferPtr}, {PluginClearSnifferContextInfo: this.TECPluginClearSnifferContextInfoPtr}, {PluginSniffTextEncoding: this.TECPluginSniffTextEncodingPtr}, {PluginDisposeEncodingSniffer: this.TECPluginDisposeEncodingSnifferPtr}, {PluginGetCountAvailableTextEncodings: this.TECPluginGetCountAvailableTextEncodingsPtr}, {PluginGetCountAvailableTextEncodingPairs: this.TECPluginGetCountAvailableTextEncodingPairsPtr}, {PluginGetCountDestinationTextEncodings: this.TECPluginGetCountDestinationTextEncodingsPtr}, {PluginGetCountSubTextEncodings: this.TECPluginGetCountSubTextEncodingsPtr}, {PluginGetCountAvailableSniffers: this.TECPluginGetCountAvailableSniffersPtr}, {PluginGetCountWebTextEncodings: this.TECPluginGetCountWebEncodingsPtr}, {PluginGetCountMailTextEncodings: this.TECPluginGetCountMailEncodingsPtr}, {PluginGetTextEncodingInternetName: this.TECPluginGetTextEncodingInternetNamePtr}, {PluginGetTextEncodingFromInternetName: this.TECPluginGetTextEncodingFromInternetNamePtr}]);
    this.TECPluginGetPluginDispatchTablePtr = new ctypes.FunctionType(ctypes.default_abi, this.TECPluginDispatchTable.ptr, []).ptr;
}

// Based on /System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/MultiprocessingInfo.h
function MultiprocessingInfo_h(lib) {
    Multiprocessing_h.call(this, lib);
    MacTypes_h.call(this, lib);

    if (this._MULTIPROCESSINGINFO_H)
        return;
    this._MULTIPROCESSINGINFO_H = true;

    this.kMPQueueInfoVersion = 262145;
    this.kMPSemaphoreInfoVersion = 327681;
    this.kMPEventInfoVersion = 589825;
    this.kMPCriticalRegionInfoVersion = 393217;
    this.kMPNotificationInfoVersion = 786433;
    this.kMPAddressSpaceInfoVersion = 524289;
    this.MPQueueInfo = new ctypes.StructType("MPQueueInfo", [{version: this.PBVersion}, {processID: this.MPProcessID}, {queueName: this.OSType}, {nWaiting: this.ItemCount}, {waitingTaskID: this.MPTaskID}, {nMessages: this.ItemCount}, {nReserved: this.ItemCount}, {p1: ctypes.void_t.ptr}, {p2: ctypes.void_t.ptr}, {p3: ctypes.void_t.ptr}]);
    this.MPSemaphoreInfo = new ctypes.StructType("MPSemaphoreInfo", [{version: this.PBVersion}, {processID: this.MPProcessID}, {semaphoreName: this.OSType}, {nWaiting: this.ItemCount}, {waitingTaskID: this.MPTaskID}, {maximum: this.ItemCount}, {count: this.ItemCount}]);
    this.MPEventInfo = new ctypes.StructType("MPEventInfo", [{version: this.PBVersion}, {processID: this.MPProcessID}, {eventName: this.OSType}, {nWaiting: this.ItemCount}, {waitingTaskID: this.MPTaskID}, {events: this.MPEventFlags}]);
    this.MPCriticalRegionInfo = new ctypes.StructType("MPCriticalRegionInfo", [{version: this.PBVersion}, {processID: this.MPProcessID}, {regionName: this.OSType}, {nWaiting: this.ItemCount}, {waitingTaskID: this.MPTaskID}, {owningTask: this.MPTaskID}, {count: this.ItemCount}]);
    this.MPNotificationInfo = new ctypes.StructType("MPNotificationInfo", [{version: this.PBVersion}, {processID: this.MPProcessID}, {notificationName: this.OSType}, {queueID: this.MPQueueID}, {p1: ctypes.void_t.ptr}, {p2: ctypes.void_t.ptr}, {p3: ctypes.void_t.ptr}, {eventID: this.MPEventID}, {events: this.MPEventFlags}, {semaphoreID: this.MPSemaphoreID}]);
    this.MPAddressSpaceInfo = new ctypes.StructType("MPAddressSpaceInfo", [{version: this.PBVersion}, {processID: this.MPProcessID}, {groupID: this.MPCoherenceID}, {nTasks: this.ItemCount}, {vsid: this.UInt32.array(16)}]);
}

// Based on /System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/UTCUtils.h
function UTCUtils_h(lib) {
    MacTypes_h.call(this, lib);

    if (this._UTCUTILS_H)
        return;
    this._UTCUTILS_H = true;

    this.kUTCDefaultOptions = 0;
    this.UTCDateTime = new ctypes.StructType("UTCDateTime", [{highSeconds: this.UInt16}, {lowSeconds: this.UInt32}, {fraction: this.UInt16}]);
    this.UTCDateTimePtr = this.UTCDateTime.ptr;
    this.UTCDateTimeHandle = this.UTCDateTimePtr.ptr;
    this.LocalDateTime = new ctypes.StructType("LocalDateTime", [{highSeconds: this.UInt16}, {lowSeconds: this.UInt32}, {fraction: this.UInt16}]);
    this.LocalDateTimePtr = this.LocalDateTime.ptr;
    this.LocalDateTimeHandle = this.LocalDateTimePtr.ptr;
}

// Based on /System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Debugging.h
function Debugging_h(lib) {
    MacTypes_h.call(this, lib);

    if (this._DEBUGGING_H)
        return;
    this._DEBUGGING_H = true;

    this.kBlessedBusErrorBait = 1760651505;
    this.k68kInterruptLevelMask = 7;
    this.kInVBLTaskMask = 16;
    this.kInDeferredTaskMask = 32;
    this.kInSecondaryIntHandlerMask = 64;
    this.kInNestedInterruptMask = 128;
    this.kComponentDebugOption = 0;
    this.kGetDebugOption = 1;
    this.kSetDebugOption = 2;
    this.DebugComponentCallbackProcPtr = new ctypes.FunctionType(ctypes.default_abi, ctypes.void_t, [this.SInt32, this.UInt32, this.Boolean.ptr]).ptr;
    this.DebugComponentCallbackUPP = this.DebugComponentCallbackProcPtr;
    this.DebugAssertOutputHandlerProcPtr = new ctypes.FunctionType(ctypes.default_abi, ctypes.void_t, [this.OSType, this.UInt32, ctypes.char.ptr, ctypes.char.ptr, ctypes.char.ptr, ctypes.char.ptr, ctypes.long, ctypes.void_t.ptr, this.ConstStr255Param]).ptr;
    this.DebugAssertOutputHandlerUPP = this.DebugAssertOutputHandlerProcPtr;
    // Dropping inline function 'NewDebugComponentCallbackUPP'.
    // Dropping inline function 'NewDebugAssertOutputHandlerUPP'.
    // Dropping inline function 'DisposeDebugComponentCallbackUPP'.
    // Dropping inline function 'DisposeDebugAssertOutputHandlerUPP'.
    // Dropping inline function 'InvokeDebugComponentCallbackUPP'.
    // Dropping inline function 'InvokeDebugAssertOutputHandlerUPP'.
}

// Based on /System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/NumberFormatting.h
function NumberFormatting_h(lib) {
    MacTypes_h.call(this, lib);

    if (this._NUMBERFORMATTING_H)
        return;
    this._NUMBERFORMATTING_H = true;

    this.NumFormatString = new ctypes.StructType("NumFormatString", [{fLength: this.UInt8}, {fVersion: this.UInt8}, {data: ctypes.char.array(254)}]);
    this.NumFormatStringRec = this.NumFormatString;
    this.FormatStatus = ctypes.short;
    this.fVNumber = 0;
    this.FormatClass = this.SInt8;
    this.fPositive = 0;
    this.fNegative = 1;
    this.fZero = 2;
    this.FormatResultType = this.SInt8;
    this.fFormatOK = 0;
    this.fBestGuess = 1;
    this.fOutOfSynch = 2;
    this.fSpuriousChars = 3;
    this.fMissingDelimiter = 4;
    this.fExtraDecimal = 5;
    this.fMissingLiteral = 6;
    this.fExtraExp = 7;
    this.fFormatOverflow = 8;
    this.fFormStrIsNAN = 9;
    this.fBadPartsTable = 10;
    this.fExtraPercent = 11;
    this.fExtraSeparator = 12;
    this.fEmptyFormatString = 13;
    this.FVector = new ctypes.StructType("FVector", [{start: ctypes.short}, {length: ctypes.short}]);
    this.TripleInt = this.FVector.array(3);
}

// Based on /System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/DriverServices.h
function DriverServices_h(lib) {
    MacTypes_h.call(this, lib);

    if (this._DRIVERSERVICES_H)
        return;
    this._DRIVERSERVICES_H = true;

    this.durationMicrosecond = -1;
    this.durationMillisecond = 1;
    this.durationSecond = 1000;
    this.durationMinute = 60000;
    this.durationHour = 3600000;
    this.durationDay = 86400000;
    this.durationNoWait = 0;
    this.durationForever = 2147483647;
    this.Nanoseconds = this.UnsignedWide;
}

// Based on /System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/HFSVolumes.h
function HFSVolumes_h(lib) {
    MacTypes_h.call(this, lib);

    if (this._HFSVOLUMES_H)
        return;
    this._HFSVOLUMES_H = true;

    this.HFSCatalogNodeID = this.UInt32;
}

// Based on /System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/ToolUtils.h
function ToolUtils_h(lib) {

    if (this._TOOLUTILS_H)
        return;
    this._TOOLUTILS_H = true;

}

// Based on /System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/BackupCore.h
function BackupCore_h(lib) {

    if (this._BACKUPCORE_H)
        return;
    this._BACKUPCORE_H = true;

}

Components.utils.import("resource://gre/modules/ctypes.jsm");
Components.utils.import("resource://osxtypes/CoreFoundation.jsm");
Components.utils.import("resource://osxtypes/MacTypes.jsm");

const EXPORTED_SYMBOLS = ["CarbonCore", "FSEvents_h", "TextEncodingConverter_h", "AVLTree_h", "Threads_h", "Files_h", "UnicodeConverter_h", "TextCommon_h", "Aliases_h", "LowMem_h", "Script_h", "Math64_h", "Multiprocessing_h", "Resources_h", "CodeFragments_h", "Folders_h", "FixMath_h", "Collections_h", "PEFBinaryFormat_h", "MacMemory_h", "Components_h", "Timer_h", "DateTimeUtils_h", "IntlResources_h", "TextUtils_h", "MixedMode_h", "StringCompare_h", "fp_h", "MacLocales_h", "UnicodeUtilities_h", "DriverSynchronization_h", "MachineExceptions_h", "OSUtils_h", "Finder_h", "PLStringFuncs_h", "AIFF_h", "Gestalt_h", "MacErrors_h", "Endian_h", "TextEncodingPlugin_h", "MultiprocessingInfo_h", "UTCUtils_h", "Debugging_h", "NumberFormatting_h", "DriverServices_h", "HFSVolumes_h", "ToolUtils_h", "BackupCore_h"];

function CarbonCore() {
    let libpath = "/System/Library/Frameworks/CarbonCore.framework/CarbonCore";
    let lib = ctypes.open(libpath);
    this.close = function() {
        lib.close();
    };

    FSEvents_h.call(this, lib);
    TextEncodingConverter_h.call(this, lib);
    AVLTree_h.call(this, lib);
    Threads_h.call(this, lib);
    Files_h.call(this, lib);
    UnicodeConverter_h.call(this, lib);
    TextCommon_h.call(this, lib);
    Aliases_h.call(this, lib);
    LowMem_h.call(this, lib);
    Script_h.call(this, lib);
    Math64_h.call(this, lib);
    Multiprocessing_h.call(this, lib);
    Resources_h.call(this, lib);
    CodeFragments_h.call(this, lib);
    Folders_h.call(this, lib);
    FixMath_h.call(this, lib);
    Collections_h.call(this, lib);
    PEFBinaryFormat_h.call(this, lib);
    MacMemory_h.call(this, lib);
    Components_h.call(this, lib);
    Timer_h.call(this, lib);
    DateTimeUtils_h.call(this, lib);
    IntlResources_h.call(this, lib);
    TextUtils_h.call(this, lib);
    MixedMode_h.call(this, lib);
    StringCompare_h.call(this, lib);
    fp_h.call(this, lib);
    MacLocales_h.call(this, lib);
    UnicodeUtilities_h.call(this, lib);
    DriverSynchronization_h.call(this, lib);
    MachineExceptions_h.call(this, lib);
    OSUtils_h.call(this, lib);
    Finder_h.call(this, lib);
    PLStringFuncs_h.call(this, lib);
    AIFF_h.call(this, lib);
    Gestalt_h.call(this, lib);
    MacErrors_h.call(this, lib);
    Endian_h.call(this, lib);
    TextEncodingPlugin_h.call(this, lib);
    MultiprocessingInfo_h.call(this, lib);
    UTCUtils_h.call(this, lib);
    Debugging_h.call(this, lib);
    NumberFormatting_h.call(this, lib);
    DriverServices_h.call(this, lib);
    HFSVolumes_h.call(this, lib);
    ToolUtils_h.call(this, lib);
    BackupCore_h.call(this, lib);
}
